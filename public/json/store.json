{"ship-weekly-newsletter-fast":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"Next.js+MDX手撸一个开源周刊模板","display":"\r"},"ship-weekly-newsletter-fast_0":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_1":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"曾经我在播客平台听海明威的《老人与海》，注意到一个有趣的数据——从第一条音频开始，每一条的播放量都呈现递减趋势，最后一条的播放量只有第一条的10%。\r"},"ship-weekly-newsletter-fast_2":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_3":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"时间倒转回2018年的4月，阮一峰发布了他的第一篇技术周刊。时至今日，这个名为「科技爱好者周刊」的栏目已经运营了七年之久，每周都有数十条投稿，是技术周刊领域硕果仅存的项目，开发者都以自己的项目能被阮一峰收录为荣耀。\r"},"ship-weekly-newsletter-fast_4":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_5":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"我跟一位不懂技术的朋友分享了我的看法：阮一峰的「科技爱好者周刊」也是一种产品形态，你虽然不懂技术，但是检索信息和筛选信息都有一手，你就适合做这样的项目。说完还不忘夸下海口：如果你有长期运营的心理准备，我帮你搭网站，教你写markdown。\r"},"ship-weekly-newsletter-fast_6":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_7":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"他倒是回答得一点不见外：\r"},"ship-weekly-newsletter-fast_8":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_9":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_10":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_11":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"我想了想，得给他上点难度——网站开发完就开源出去，多吸引一些人来卷他，所以就有了这篇文章以及这个开源项目：\r"},"ship-weekly-newsletter-fast_12":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_13":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"开源地址：https://github.com/weijunext/weekly-boilerplate\r"},"ship-weekly-newsletter-fast_14":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_15":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"演示地址：https://weekly.weijunext.com/\r"},"ship-weekly-newsletter-fast_16":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_17":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_18":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_19":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"：\r"},"ship-weekly-newsletter-fast_20":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_21":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- Next.js\r"},"ship-weekly-newsletter-fast_22":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- MDX\r"},"ship-weekly-newsletter-fast_23":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- Tailwind CSS\r"},"ship-weekly-newsletter-fast_24":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- UI库：NextUI、Shadccn/ui\r"},"ship-weekly-newsletter-fast_25":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_26":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"：\r"},"ship-weekly-newsletter-fast_27":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_28":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 周刊网站、博客网站的设计思路\r"},"ship-weekly-newsletter-fast_29":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- Next.js 中 MDX 渲染内容\r"},"ship-weekly-newsletter-fast_30":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- Next.js 动态路由静态生成\r"},"ship-weekly-newsletter-fast_31":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 引入免费评论插件\r"},"ship-weekly-newsletter-fast_32":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 找到好看的字体\r"},"ship-weekly-newsletter-fast_33":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_34":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"本文为避免篇幅过长，代码已忽略掉一些不重要的细节，如果要学习完整的代码，请到开源仓库中查看。\r"},"ship-weekly-newsletter-fast_35":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_36":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"设计思路\r"},"ship-weekly-newsletter-fast_37":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_38":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"在构想周刊网站的设计时，我设定了两个目标：简洁性与功能性。\r"},"ship-weekly-newsletter-fast_39":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_40":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"其次考虑到性能与 SEO 优化，我选择了 Next.js + MDX的技术栈，Next.js 的静态生成能力与易于集成 MDX 的特性，可以让我把周刊网站构建成全静态的网站。\r"},"ship-weekly-newsletter-fast_41":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_42":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"接下来考虑界面的设计，网站只需要两个页面：首页和详情页。界面设计要遵循简洁明了的原则，这样访客能够专注于重要的信息，不会被花里胡哨的东西分散注意力。基于这样的理念，最终确定这样的设计方案：\r"},"ship-weekly-newsletter-fast_43":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_44":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_45":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_46":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 居中展示历史发布的列表\r"},"ship-weekly-newsletter-fast_47":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 右侧是一个根据月份索引的时间线\r"},"ship-weekly-newsletter-fast_48":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_49":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_50":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_51":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 左侧是历史发布的列表，用户可以方便切换每一期的周刊\r"},"ship-weekly-newsletter-fast_52":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 居中展示本期周刊详情\r"},"ship-weekly-newsletter-fast_53":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 右侧是周刊小标题的索引，用户可以方便地查看自己感兴趣的信息\r"},"ship-weekly-newsletter-fast_54":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 底部提供评论和点赞功能，让运营者能够收到用户的反馈\r"},"ship-weekly-newsletter-fast_55":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_56":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"至于 UI，身为不懂设计的前端工程师，只能现学现卖了，在观摩超过30个博客类网站后，我琢磨出了这个周刊站的 UI，谢天谢地，我很满意。\r"},"ship-weekly-newsletter-fast_57":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_58":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"开发实现\r"},"ship-weekly-newsletter-fast_59":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_60":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"我曾经说过：重复的劳动是对程序员的亵渎。\r"},"ship-weekly-newsletter-fast_61":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_62":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"所以这个项目我仍然沿用了自己发布的开源项目—— 进行初始化，用法如下：\r"},"ship-weekly-newsletter-fast_63":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_64":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"打开👉，通过  创建项目。再根据周刊网站的设计思路，设计一下路由，最终文件夹结构大致如下：\r"},"ship-weekly-newsletter-fast_65":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_66":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_67":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ app                应用入口\r"},"ship-weekly-newsletter-fast_68":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ weekly\r"},"ship-weekly-newsletter-fast_69":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  │  └─ [slug]\r"},"ship-weekly-newsletter-fast_70":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  │  │  └─ page.tsx  周刊详情页\r"},"ship-weekly-newsletter-fast_71":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ layout.tsx\r"},"ship-weekly-newsletter-fast_72":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  └─ page.tsx        周刊首页\r"},"ship-weekly-newsletter-fast_73":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ components         组件\r"},"ship-weekly-newsletter-fast_74":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ ……\r"},"ship-weekly-newsletter-fast_75":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ config             网站配置\r"},"ship-weekly-newsletter-fast_76":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  └─ site.ts\r"},"ship-weekly-newsletter-fast_77":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ content            mdx 文件统一放在这里\r"},"ship-weekly-newsletter-fast_78":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ ……\r"},"ship-weekly-newsletter-fast_79":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ lib                公共工具类\r"},"ship-weekly-newsletter-fast_80":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ ……\r"},"ship-weekly-newsletter-fast_81":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ public             公共静态资源\r"},"ship-weekly-newsletter-fast_82":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ ……\r"},"ship-weekly-newsletter-fast_83":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"├─ styles             样式\r"},"ship-weekly-newsletter-fast_84":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ├─ ……\r"},"ship-weekly-newsletter-fast_85":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"│  ……\r"},"ship-weekly-newsletter-fast_86":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_87":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_88":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"准备就绪，正式开始开发。\r"},"ship-weekly-newsletter-fast_89":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_90":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"引入 MDX\r"},"ship-weekly-newsletter-fast_91":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_92":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"Markdown 大家都很熟悉，它是一种轻量级标记语言，我们可以通过 markdown 纯文本格式编写文档，而 MDX 是 Markdown 的一个超集，它允许我们在 Markdown 中无缝地使用 JSX。\r"},"ship-weekly-newsletter-fast_93":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_94":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"Next.js通过@next/mdx插件很容易集成MDX。步骤如下:\r"},"ship-weekly-newsletter-fast_95":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_96":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"1. 安装依赖\r"},"ship-weekly-newsletter-fast_97":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_98":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    bash\r"},"ship-weekly-newsletter-fast_99":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    npm install @next/mdx @mdx-js/loader @mdx-js/react\r"},"ship-weekly-newsletter-fast_100":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_101":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_102":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"2. 在配置MDX:\r"},"ship-weekly-newsletter-fast_103":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_104":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    jsx\r"},"ship-weekly-newsletter-fast_105":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    const withMDX = require('@next/mdx')()\r"},"ship-weekly-newsletter-fast_106":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"     \r"},"ship-weekly-newsletter-fast_107":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    //\r"},"ship-weekly-newsletter-fast_108":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    const nextConfig = {\r"},"ship-weekly-newsletter-fast_109":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      pageExtensions: ['js', 'jsx', 'mdx', 'ts', 'tsx'],\r"},"ship-weekly-newsletter-fast_110":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    }\r"},"ship-weekly-newsletter-fast_111":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"     \r"},"ship-weekly-newsletter-fast_112":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    module.exports = withMDX(nextConfig)\r"},"ship-weekly-newsletter-fast_113":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_114":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_115":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    此配置允许 Next.js 识别  文件，并将其作为页面或组件处理。\r"},"ship-weekly-newsletter-fast_116":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_117":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"3. app router 模式下，还需要在根目录创建  文件：\r"},"ship-weekly-newsletter-fast_118":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_119":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    tsx\r"},"ship-weekly-newsletter-fast_120":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    export function useMDXComponents(components: any) {\r"},"ship-weekly-newsletter-fast_121":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      return {\r"},"ship-weekly-newsletter-fast_122":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        ...components,\r"},"ship-weekly-newsletter-fast_123":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      };\r"},"ship-weekly-newsletter-fast_124":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    }\r"},"ship-weekly-newsletter-fast_125":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_126":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_127":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_128":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"现在到  文件夹下任意创建一个文件夹，里面写一个 ，打开页面就能渲染出来了。\r"},"ship-weekly-newsletter-fast_129":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_130":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这是一种简单粗暴的方法，如果直接使用这种方法渲染我们的周刊内容，我们就要每周创建一个路由，实在不方便。\r"},"ship-weekly-newsletter-fast_131":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_132":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"因此，我们要选择另一种更方便的方案：。要用这种方案，就要用到 Remote MDX 模式。\r"},"ship-weekly-newsletter-fast_133":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_134":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"使用 Remote MDX 模式，我们可以把 Markdown 内容存放在服务端文件夹、数据库或者内容管理后台。在本次的项目里，我们创建了  文件夹，这就是我们的服务端文件夹了，所有周刊内容的  文件都将放在这个文件夹里。\r"},"ship-weekly-newsletter-fast_135":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_136":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"认识 next-mdx-remote\r"},"ship-weekly-newsletter-fast_137":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_138":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"在 Next.js 社区中，next-mdx-remote 是 Remote MDX 的主流方案。\r"},"ship-weekly-newsletter-fast_139":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_140":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"app router 模式下，我们需要使用 next-mdx-remote/rsc 包导出的  组件：\r"},"ship-weekly-newsletter-fast_141":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_142":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_143":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"// app/weekly/[slug]/page.tsx\r"},"ship-weekly-newsletter-fast_144":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_145":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default async function WeeklyDetailsPage({ params }: Props) {\r"},"ship-weekly-newsletter-fast_146":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { slug } = params;\r"},"ship-weekly-newsletter-fast_147":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { posts }: { posts: WeeklyPost[] } = await getWeeklyPosts();\r"},"ship-weekly-newsletter-fast_148":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const post = posts.find((post) =\r"},"ship-weekly-newsletter-fast_149":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_150":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { source, metadata } = await getPostDetails(post.fullPath);\r"},"ship-weekly-newsletter-fast_151":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_152":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_153":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <div className=\"flex flex-row w-full pt-12\""},"ship-weekly-newsletter-fast_154":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <article"},"ship-weekly-newsletter-fast_155":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <MDXRemote source={source} /"},"ship-weekly-newsletter-fast_156":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </article"},"ship-weekly-newsletter-fast_157":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </div"},"ship-weekly-newsletter-fast_158":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_159":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_160":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_161":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_162":{"title":"Next.js+MDX手撸一个开源周刊模板","content":" 组件接受  属性，这是必传属性，传入的是 Markdown 内容。\r"},"ship-weekly-newsletter-fast_163":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_164":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"上面这段代码通过动态路由参数判断当前要渲染的周刊文件，然后解析文件内容，再通过  组件渲染出来。\r"},"ship-weekly-newsletter-fast_165":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_166":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"为了后面的开发测试，我们先在  文件夹下创建一批  文件备用。\r"},"ship-weekly-newsletter-fast_167":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_168":{"title":"Next.js+MDX手撸一个开源周刊模板","content":" 文件里我们采用这样的格式：\r"},"ship-weekly-newsletter-fast_169":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_170":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"markdown\r"},"ship-weekly-newsletter-fast_171":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_172":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"title: 开源周刊第1期：用法介绍\r"},"ship-weekly-newsletter-fast_173":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"slug: 2024-02-05-001\r"},"ship-weekly-newsletter-fast_174":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"date: 2024-02-05\r"},"ship-weekly-newsletter-fast_175":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_176":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_177":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"标题 2\r"},"ship-weekly-newsletter-fast_178":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_179":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"Markdown允许你轻松地编写网页内容。它的语法简单明了。\r"},"ship-weekly-newsletter-fast_180":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_181":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"标题 3\r"},"ship-weekly-newsletter-fast_182":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_183":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_184":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"开头使用  划分出来的区域，用来配置页面的元数据，自由配置元数据后我们就能实现更多的功能。当然， 没有解析元数据的能力，所以为了解析这里的元数据，我们还得使用其他依赖，我选择了 ，用法下文介绍。\r"},"ship-weekly-newsletter-fast_185":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_186":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"<Aside"},"ship-weekly-newsletter-fast_187":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"💡 本文截止到这里，已经介绍了三个文档类网站的依赖了：、 和 ，它们是开发文档类网站的基础设施。\r"},"ship-weekly-newsletter-fast_188":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_189":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"</Aside"},"ship-weekly-newsletter-fast_190":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_191":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"公共方法开发\r"},"ship-weekly-newsletter-fast_192":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_193":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"本项目中，我们需要多次通过读取  文件获取以下信息：\r"},"ship-weekly-newsletter-fast_194":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_195":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"1. 周刊列表\r"},"ship-weekly-newsletter-fast_196":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"2. 周刊内容\r"},"ship-weekly-newsletter-fast_197":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"3. 周刊元数据：标题、日期和 \r"},"ship-weekly-newsletter-fast_198":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_199":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"我们在  文件里实现这个方法，为了减少重复读取文件，我在一个方法里返回一次性返回了这些信息，如果你有更合理的写法，欢迎提 pr 优化。\r"},"ship-weekly-newsletter-fast_200":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_201":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_202":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"// lib/weekly.ts\r"},"ship-weekly-newsletter-fast_203":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_204":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import dayjs from 'dayjs';\r"},"ship-weekly-newsletter-fast_205":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import fs from 'fs';\r"},"ship-weekly-newsletter-fast_206":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import matter from 'gray-matter';\r"},"ship-weekly-newsletter-fast_207":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import path from 'path';\r"},"ship-weekly-newsletter-fast_208":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_209":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export async function getWeeklyPosts(): Promise<{ posts: WeeklyPost[]; postsByMonth: PostsByMonth }\r"},"ship-weekly-newsletter-fast_210":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const postsDirectory = path.join(process.cwd(), 'content')\r"},"ship-weekly-newsletter-fast_211":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  let filenames = await fs.promises.readdir(postsDirectory)\r"},"ship-weekly-newsletter-fast_212":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  filenames = filenames.reverse()\r"},"ship-weekly-newsletter-fast_213":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_214":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const posts = await Promise.all(\r"},"ship-weekly-newsletter-fast_215":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    filenames.map(async (filename) =\r"},"ship-weekly-newsletter-fast_216":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\t    // 读取文件\r"},"ship-weekly-newsletter-fast_217":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      const fullPath = path.join(postsDirectory, filename)\r"},"ship-weekly-newsletter-fast_218":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      const fileContents = await fs.promises.readFile(fullPath, 'utf8')\r"},"ship-weekly-newsletter-fast_219":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_220":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\t\t\t// 解析内容\r"},"ship-weekly-newsletter-fast_221":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      const { data, content } = matter(fileContents)\r"},"ship-weekly-newsletter-fast_222":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\t    // 记录月份\r"},"ship-weekly-newsletter-fast_223":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      const month = dayjs(data.date).format('YYYY-MM-DD').slice(0, 7);\r"},"ship-weekly-newsletter-fast_224":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_225":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      return {\r"},"ship-weekly-newsletter-fast_226":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        id: month,\r"},"ship-weekly-newsletter-fast_227":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        fullPath,\r"},"ship-weekly-newsletter-fast_228":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        metadata: data,\r"},"ship-weekly-newsletter-fast_229":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        content,\r"},"ship-weekly-newsletter-fast_230":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      }\r"},"ship-weekly-newsletter-fast_231":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    })\r"},"ship-weekly-newsletter-fast_232":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  )\r"},"ship-weekly-newsletter-fast_233":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_234":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  // 按月分组，得到时间线的数据\r"},"ship-weekly-newsletter-fast_235":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const postsByMonth: PostsByMonth = posts.reduce((acc: PostsByMonth, post: WeeklyPost) =\r"},"ship-weekly-newsletter-fast_236":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    const month = dayjs(post.metadata.date).format('YYYY-MM-DD').slice(0, 7);\r"},"ship-weekly-newsletter-fast_237":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    if (!acc[month]) {\r"},"ship-weekly-newsletter-fast_238":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      acc[month] = [];\r"},"ship-weekly-newsletter-fast_239":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    }\r"},"ship-weekly-newsletter-fast_240":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    acc[month].push(post);\r"},"ship-weekly-newsletter-fast_241":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    return acc;\r"},"ship-weekly-newsletter-fast_242":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  }, {});\r"},"ship-weekly-newsletter-fast_243":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_244":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return {\r"},"ship-weekly-newsletter-fast_245":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    posts,\r"},"ship-weekly-newsletter-fast_246":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    postsByMonth\r"},"ship-weekly-newsletter-fast_247":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  }\r"},"ship-weekly-newsletter-fast_248":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_249":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_250":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_251":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_252":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这个方法里完成了这些工作：\r"},"ship-weekly-newsletter-fast_253":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_254":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 通过  模块读取  文件夹下的所有文件，并获取它们的完整本地路径 。\r"},"ship-weekly-newsletter-fast_255":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 通过  解析元数据和正文内容。 的用法很简单，只要调用  这样的方法就能完成  文件解析，其中  是元数据， 是正文内容。\r"},"ship-weekly-newsletter-fast_256":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- 因为要做一个按月索引的时间线，所以这里还记录了每一篇周刊元数据里的日期，并且计算得到时间线的数据。\r"},"ship-weekly-newsletter-fast_257":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_258":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"首页开发\r"},"ship-weekly-newsletter-fast_259":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_260":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"首页获取公共方法返回的信息，分别传给列表组件和时间线组件：\r"},"ship-weekly-newsletter-fast_261":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_262":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_263":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import TimeLine from \"@/components/TimeLine\";\r"},"ship-weekly-newsletter-fast_264":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import WeeklyList from \"@/components/WeeklyList\";\r"},"ship-weekly-newsletter-fast_265":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { PostsByMonth, WeeklyPost, getWeeklyPosts } from \"@/lib/weekly\";\r"},"ship-weekly-newsletter-fast_266":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_267":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default async function Home() {\r"},"ship-weekly-newsletter-fast_268":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { posts, postsByMonth } = await getWeeklyPosts();\r"},"ship-weekly-newsletter-fast_269":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_270":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_271":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <div className=\"flex flex-row w-full pt-12\""},"ship-weekly-newsletter-fast_272":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <div className=\"hidden md:block md:w-1/5 pl-6\"></div"},"ship-weekly-newsletter-fast_273":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <div className=\"w-full md:w-3/5 px-6\""},"ship-weekly-newsletter-fast_274":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <WeeklyList posts={posts} /"},"ship-weekly-newsletter-fast_275":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </div"},"ship-weekly-newsletter-fast_276":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <div className=\"hidden md:flex justify-end md:w-1/5 pr-6 text-right\""},"ship-weekly-newsletter-fast_277":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <TimeLine postsByMonth={postsByMonth}></TimeLine"},"ship-weekly-newsletter-fast_278":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </div"},"ship-weekly-newsletter-fast_279":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </div"},"ship-weekly-newsletter-fast_280":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_281":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_282":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_283":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_284":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_285":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"列表用最简单的 、 排列就可以。这里要加上给  加上  作为锚点，这样时间线上面点击月份才能滚动到正确的位置：\r"},"ship-weekly-newsletter-fast_286":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_287":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_288":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { WeeklyPost } from \"@/lib/weekly\";\r"},"ship-weekly-newsletter-fast_289":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import dayjs from \"dayjs\";\r"},"ship-weekly-newsletter-fast_290":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import Link from \"next/link\";\r"},"ship-weekly-newsletter-fast_291":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_292":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default async function WeeklyList({ posts }) {\r"},"ship-weekly-newsletter-fast_293":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_294":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <ul className=\"flex flex-col gap-4\""},"ship-weekly-newsletter-fast_295":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      {posts.map((post) =\r"},"ship-weekly-newsletter-fast_296":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <li\r"},"ship-weekly-newsletter-fast_297":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          id={post.id}\r"},"ship-weekly-newsletter-fast_298":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          key={post.metadata.slug}\r"},"ship-weekly-newsletter-fast_299":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          className=\"flex flex-col sm:flex-row gap-4 items-start\"\r"},"ship-weekly-newsletter-fast_300":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        "},"ship-weekly-newsletter-fast_301":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <span className=\"text-[#8585a8] min-w-28\""},"ship-weekly-newsletter-fast_302":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            {dayjs(post.metadata.date).format(\"YYYY-MM-DD\")}\r"},"ship-weekly-newsletter-fast_303":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          </span"},"ship-weekly-newsletter-fast_304":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          {//}\r"},"ship-weekly-newsletter-fast_305":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <Link\r"},"ship-weekly-newsletter-fast_306":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            href={}\r"},"ship-weekly-newsletter-fast_307":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            className=\"link-default truncate transition-colors duration-500 ease-in-out\"\r"},"ship-weekly-newsletter-fast_308":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          "},"ship-weekly-newsletter-fast_309":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            {post.metadata.title}\r"},"ship-weekly-newsletter-fast_310":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          </Link"},"ship-weekly-newsletter-fast_311":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        </li"},"ship-weekly-newsletter-fast_312":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      ))}\r"},"ship-weekly-newsletter-fast_313":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </ul"},"ship-weekly-newsletter-fast_314":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_315":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_316":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_317":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_318":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_319":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"时间线考虑到长期运营后时间线会很长，所以需要固定区域，并允许滚动。组件定位使用 sticky，这样滚动到屏幕顶部后会固定住，用户体验拉满：\r"},"ship-weekly-newsletter-fast_320":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_321":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_322":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { ScrollArea } from \"@/components/ui/scroll-area\";\r"},"ship-weekly-newsletter-fast_323":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { Separator } from \"@/components/ui/separator\";\r"},"ship-weekly-newsletter-fast_324":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { getWeeklyPosts, PostsByMonth } from \"@/lib/weekly\";\r"},"ship-weekly-newsletter-fast_325":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import Link from \"next/link\";\r"},"ship-weekly-newsletter-fast_326":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_327":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default async function TimeLine() {\r"},"ship-weekly-newsletter-fast_328":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { postsByMonth } = await getWeeklyPosts();\r"},"ship-weekly-newsletter-fast_329":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_330":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_331":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <ScrollArea\r"},"ship-weekly-newsletter-fast_332":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      className=\"h-72 w-32 rounded-md border border-gray-600 sticky top-0\"\r"},"ship-weekly-newsletter-fast_333":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      style={{ position: \"sticky\" }}\r"},"ship-weekly-newsletter-fast_334":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    "},"ship-weekly-newsletter-fast_335":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <div className=\"p-4\""},"ship-weekly-newsletter-fast_336":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <h4 className=\"mb-4 text-sm font-medium leading-none\""},"ship-weekly-newsletter-fast_337":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <Link href=\"/\">时间线</Link"},"ship-weekly-newsletter-fast_338":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        </h4"},"ship-weekly-newsletter-fast_339":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        {Object.keys(postsByMonth).map((month) =\r"},"ship-weekly-newsletter-fast_340":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <div key={month}"},"ship-weekly-newsletter-fast_341":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            <Link href={}>{month}</Link"},"ship-weekly-newsletter-fast_342":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            <Separator className=\"my-2 bg-gray-600\" /"},"ship-weekly-newsletter-fast_343":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          </div"},"ship-weekly-newsletter-fast_344":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        ))}\r"},"ship-weekly-newsletter-fast_345":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </div"},"ship-weekly-newsletter-fast_346":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </ScrollArea"},"ship-weekly-newsletter-fast_347":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_348":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_349":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_350":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_351":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_352":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这样首页就完工了。\r"},"ship-weekly-newsletter-fast_353":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_354":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"详情页开发\r"},"ship-weekly-newsletter-fast_355":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_356":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_357":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_358":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"详情页左侧依然是调用周刊列表组件，不展开说。\r"},"ship-weekly-newsletter-fast_359":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_360":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"周刊内容使用动态路由渲染 .mdx 内容：\r"},"ship-weekly-newsletter-fast_361":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_362":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_363":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"// app/weekly/[slug]/page.tsx\r"},"ship-weekly-newsletter-fast_364":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_365":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default async function WeeklyDetailsPage({ params }) {\r"},"ship-weekly-newsletter-fast_366":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { slug } = params;\r"},"ship-weekly-newsletter-fast_367":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { posts } = await getWeeklyPosts();\r"},"ship-weekly-newsletter-fast_368":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const post = posts.find((post) =\r"},"ship-weekly-newsletter-fast_369":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_370":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { content, metadata } = post;\r"},"ship-weekly-newsletter-fast_371":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_372":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_373":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <div className=\"flex flex-row w-full pt-12\""},"ship-weekly-newsletter-fast_374":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <div className=\"w-full md:w-3/5 px-6\""},"ship-weekly-newsletter-fast_375":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\t      {//}\r"},"ship-weekly-newsletter-fast_376":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <article id={}"},"ship-weekly-newsletter-fast_377":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <h1>{metadata.title}</h1"},"ship-weekly-newsletter-fast_378":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <MDXRemote source={content} /"},"ship-weekly-newsletter-fast_379":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        </article"},"ship-weekly-newsletter-fast_380":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </div"},"ship-weekly-newsletter-fast_381":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </div"},"ship-weekly-newsletter-fast_382":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_383":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_384":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_385":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_386":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这里通过  获取动态路由参数 ，用  与周刊的元数据里的  进行匹配，匹配到了则读取 ，传入  渲染。\r"},"ship-weekly-newsletter-fast_387":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_388":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"为了获得更好的性能和更好的 SEO，我们要给周刊内容做成静态页面。这就要用到 Next.js 的静态生成方法了：。\r"},"ship-weekly-newsletter-fast_389":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_390":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"使用 ，我们可以预定义  值，并为它们生成静态页面：\r"},"ship-weekly-newsletter-fast_391":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_392":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_393":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export async function generateStaticParams() {\r"},"ship-weekly-newsletter-fast_394":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const { posts }: { posts: WeeklyPost[] } = await getWeeklyPosts();\r"},"ship-weekly-newsletter-fast_395":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_396":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return posts.map((post) =\r"},"ship-weekly-newsletter-fast_397":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    slug: post.metadata.slug,\r"},"ship-weekly-newsletter-fast_398":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  }));\r"},"ship-weekly-newsletter-fast_399":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_400":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_401":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_402":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"因为周刊数据都是  文件，所以直接读取出来，汇总一下  就可以了。\r"},"ship-weekly-newsletter-fast_403":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_404":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这个方法只会在  的时候执行，执行后就能为指定的  页面生成 html 文件，我们在本地尝试一下就知道了：\r"},"ship-weekly-newsletter-fast_405":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_406":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"<Aside"},"ship-weekly-newsletter-fast_407":{"title":"Next.js+MDX手撸一个开源周刊模板","content":" 是一个非常灵活的方法——已指定静态生成的页面会在构建时生成静态 html，而对于没有指定的页面，则仍然会进入动态路由原有的逻辑进行动态渲染。\r"},"ship-weekly-newsletter-fast_408":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_409":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"</Aside"},"ship-weekly-newsletter-fast_410":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_411":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"Markdown 样式优化\r"},"ship-weekly-newsletter-fast_412":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_413":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"因为这个项目集成了 tailwind，所以 html 标签原有的样式都会被覆盖，所以为了让内容样式美观，我们需要自定义 Markdown 常用标签的样式。\r"},"ship-weekly-newsletter-fast_414":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_415":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"创建一个  组件：\r"},"ship-weekly-newsletter-fast_416":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_417":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_418":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"const MDXComponents: MDXComponentsProps = {\r"},"ship-weekly-newsletter-fast_419":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h1: (props) =\r"},"ship-weekly-newsletter-fast_420":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h1 className=\"text-4xl font-bold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_421":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_422":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h2: (props) =\r"},"ship-weekly-newsletter-fast_423":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h2\r"},"ship-weekly-newsletter-fast_424":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      className=\"text-3xl font-semibold mt-6 mb-4 border-b-2 border-gray-200 pb-2\"\r"},"ship-weekly-newsletter-fast_425":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      {...props}\r"},"ship-weekly-newsletter-fast_426":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    /"},"ship-weekly-newsletter-fast_427":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_428":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h3: (props) =\r"},"ship-weekly-newsletter-fast_429":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h3 className=\"text-2xl font-semibold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_430":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_431":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h4: (props) =\r"},"ship-weekly-newsletter-fast_432":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h4 className=\"text-xl font-semibold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_433":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_434":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h5: (props) =\r"},"ship-weekly-newsletter-fast_435":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h5 className=\"text-lg font-semibold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_436":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_437":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h6: (props) =\r"},"ship-weekly-newsletter-fast_438":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <h6 className=\"text-base font-semibold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_439":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_440":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  p: (props) =\r"},"ship-weekly-newsletter-fast_441":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  a: (props) =\r"},"ship-weekly-newsletter-fast_442":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ul: (props) =\r"},"ship-weekly-newsletter-fast_443":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ol: (props) =\r"},"ship-weekly-newsletter-fast_444":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  li: (props) =\r"},"ship-weekly-newsletter-fast_445":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  code: (props) =\r"},"ship-weekly-newsletter-fast_446":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  pre: (props) =\r"},"ship-weekly-newsletter-fast_447":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <pre className=\"bg-gray-600 rounded p-4 overflow-x-auto\" {...props} /"},"ship-weekly-newsletter-fast_448":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_449":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  blockquote: (props) =\r"},"ship-weekly-newsletter-fast_450":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <blockquote\r"},"ship-weekly-newsletter-fast_451":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      className=\"pl-4 border-l-4 border-gray-200 my-4 italic text-gray-300\"\r"},"ship-weekly-newsletter-fast_452":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      {...props}\r"},"ship-weekly-newsletter-fast_453":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    /"},"ship-weekly-newsletter-fast_454":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_455":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"};\r"},"ship-weekly-newsletter-fast_456":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_457":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default MDXComponents;\r"},"ship-weekly-newsletter-fast_458":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_459":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_460":{"title":"Next.js+MDX手撸一个开源周刊模板","content":" 组件可以接受标签的样式配置，用  属性传入就可以。\r"},"ship-weekly-newsletter-fast_461":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_462":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_463":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"<MDXRemote source={content} components={MDXComponents} /"},"ship-weekly-newsletter-fast_464":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_465":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_466":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这样实现后的样式就是演示地址里看到的样子了。\r"},"ship-weekly-newsletter-fast_467":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_468":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"为 Markdown 添加标题索引\r"},"ship-weekly-newsletter-fast_469":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_470":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"很多文档类网站都会在右侧提供一个标题索引，这个需求我们也不能放过。\r"},"ship-weekly-newsletter-fast_471":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_472":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"但问题随之而来，提取标题简单，要给标题添加锚点就麻烦了，总不能在写 Markdown 的时候每次写标题都手动加个 id 吧。\r"},"ship-weekly-newsletter-fast_473":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_474":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"人工是不可靠的，一定要机器！好在 组件可以接受我们自定义的标签，那么就继续在  动手脚。\r"},"ship-weekly-newsletter-fast_475":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_476":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"改造一下 - 标签，分别把标题内容作为id：\r"},"ship-weekly-newsletter-fast_477":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_478":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_479":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import React, { ReactNode } from \"react\";\r"},"ship-weekly-newsletter-fast_480":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_481":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"interface HeadingProps {\r"},"ship-weekly-newsletter-fast_482":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  level: 1 | 2 | 3 | 4 | 5 | 6;\r"},"ship-weekly-newsletter-fast_483":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  className: string;\r"},"ship-weekly-newsletter-fast_484":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  children: ReactNode;\r"},"ship-weekly-newsletter-fast_485":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_486":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_487":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"const Heading: React.FC<HeadingProps\r"},"ship-weekly-newsletter-fast_488":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const HeadingTag =  as keyof JSX.IntrinsicElements;\r"},"ship-weekly-newsletter-fast_489":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const headingId = children?.toString() ?? \"\";\r"},"ship-weekly-newsletter-fast_490":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_491":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_492":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <HeadingTag id={headingId} className={className}"},"ship-weekly-newsletter-fast_493":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      {children}\r"},"ship-weekly-newsletter-fast_494":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </HeadingTag"},"ship-weekly-newsletter-fast_495":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_496":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"};\r"},"ship-weekly-newsletter-fast_497":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_498":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_499":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"这样就把标题标签封装好了，在  里面依次传入  就可以：\r"},"ship-weekly-newsletter-fast_500":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_501":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_502":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"const MDXComponents: MDXComponentsProps = {\r"},"ship-weekly-newsletter-fast_503":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h1: (props) =\r"},"ship-weekly-newsletter-fast_504":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <Heading level={1} className=\"text-4xl font-bold mt-6 mb-4\" {...props} /"},"ship-weekly-newsletter-fast_505":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_506":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  h2: (props) =\r"},"ship-weekly-newsletter-fast_507":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <Heading\r"},"ship-weekly-newsletter-fast_508":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      level={2}\r"},"ship-weekly-newsletter-fast_509":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      className=\"text-3xl font-semibold mt-6 mb-4 border-b-2 border-gray-200 pb-2\"\r"},"ship-weekly-newsletter-fast_510":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      {...props}\r"},"ship-weekly-newsletter-fast_511":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    /"},"ship-weekly-newsletter-fast_512":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  ),\r"},"ship-weekly-newsletter-fast_513":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_514":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  // ……\r"},"ship-weekly-newsletter-fast_515":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_516":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_517":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"现在详情页每个标题都有自己的  了。标题索引组件可以生效了：\r"},"ship-weekly-newsletter-fast_518":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_519":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"tsx\r"},"ship-weekly-newsletter-fast_520":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\"use client\";\r"},"ship-weekly-newsletter-fast_521":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import Link from \"next/link\";\r"},"ship-weekly-newsletter-fast_522":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"import { useEffect, useState } from \"react\";\r"},"ship-weekly-newsletter-fast_523":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_524":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"const ArticleIndex = () =\r"},"ship-weekly-newsletter-fast_525":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  const [headings, setHeadings] = useState<\r"},"ship-weekly-newsletter-fast_526":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    { text: string; id: string; level: string }[]\r"},"ship-weekly-newsletter-fast_527":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  >([]);\r"},"ship-weekly-newsletter-fast_528":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_529":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  useEffect(() =\r"},"ship-weekly-newsletter-fast_530":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    const articleElement = document.getElementById(\"article\");\r"},"ship-weekly-newsletter-fast_531":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    if (!articleElement) return;\r"},"ship-weekly-newsletter-fast_532":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_533":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    const extractedHeadings = Array.from(\r"},"ship-weekly-newsletter-fast_534":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      articleElement.querySelectorAll(\"h2, h3\")\r"},"ship-weekly-newsletter-fast_535":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    ).map((heading) =\r"},"ship-weekly-newsletter-fast_536":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      text: heading.textContent || \"\",\r"},"ship-weekly-newsletter-fast_537":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      id: heading.id || \"\",\r"},"ship-weekly-newsletter-fast_538":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      level: heading.nodeName, // 'H2' or 'H3'\r"},"ship-weekly-newsletter-fast_539":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    }));\r"},"ship-weekly-newsletter-fast_540":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_541":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    setHeadings(extractedHeadings);\r"},"ship-weekly-newsletter-fast_542":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  }, []);\r"},"ship-weekly-newsletter-fast_543":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_544":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  return (\r"},"ship-weekly-newsletter-fast_545":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    <"},"ship-weekly-newsletter-fast_546":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      <ul className=\"sticky top-0 right-0\""},"ship-weekly-newsletter-fast_547":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        {headings.map(({ text, id, level }) =\r"},"ship-weekly-newsletter-fast_548":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          <li key={id} className={}"},"ship-weekly-newsletter-fast_549":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            <Link href={} className=\"link-hover\""},"ship-weekly-newsletter-fast_550":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              {text}\r"},"ship-weekly-newsletter-fast_551":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            </Link"},"ship-weekly-newsletter-fast_552":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          </li"},"ship-weekly-newsletter-fast_553":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        ))}\r"},"ship-weekly-newsletter-fast_554":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      </ul"},"ship-weekly-newsletter-fast_555":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    </"},"ship-weekly-newsletter-fast_556":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  );\r"},"ship-weekly-newsletter-fast_557":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"};\r"},"ship-weekly-newsletter-fast_558":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_559":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"export default ArticleIndex;\r"},"ship-weekly-newsletter-fast_560":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_561":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_562":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"因为前面给  添加  了，所以可以很方便地遍历出文章里的标签，再从中找出想放进索引的标题元素就可以了，这里我只想索引  和  标签。\r"},"ship-weekly-newsletter-fast_563":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_564":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"现在点击索引，可以滚动到对应的位置了，用户体验再次拉满！\r"},"ship-weekly-newsletter-fast_565":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_566":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"添加评论插件\r"},"ship-weekly-newsletter-fast_567":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_568":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"评论系统可以增加用户粘性，促进互动，内容运营者也会更快收到用户反馈，所以我为周刊模板添加了一个评论插件——giscus。这是一个由 GitHub Discussions 驱动的评论系统，开源免费。\r"},"ship-weekly-newsletter-fast_569":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_570":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"集成 giscus 非常简单:\r"},"ship-weekly-newsletter-fast_571":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_572":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"1. 在 GitHub 上为你的仓库启用 Discussions 功能\r"},"ship-weekly-newsletter-fast_573":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_574":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_575":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_576":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"2. 安装 giscus:\r"},"ship-weekly-newsletter-fast_577":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_578":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    tsx\r"},"ship-weekly-newsletter-fast_579":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    pnpm i giscus\r"},"ship-weekly-newsletter-fast_580":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_581":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_582":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"3. 代码里集成 giscus 组件\r"},"ship-weekly-newsletter-fast_583":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_584":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    tsx\r"},"ship-weekly-newsletter-fast_585":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    // app/components/Comments.tsx\r"},"ship-weekly-newsletter-fast_586":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_587":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \"use client\"\r"},"ship-weekly-newsletter-fast_588":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_589":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    import Giscus from \"@giscus/react\";\r"},"ship-weekly-newsletter-fast_590":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_591":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    export default function Comments() {\r"},"ship-weekly-newsletter-fast_592":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      return (\r"},"ship-weekly-newsletter-fast_593":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        <"},"ship-weekly-newsletter-fast_594":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        {\r"},"ship-weekly-newsletter-fast_595":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"          process.env.NEXTREPOID ? \r"},"ship-weekly-newsletter-fast_596":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            <Giscus\r"},"ship-weekly-newsletter-fast_597":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              id=\"comments\"\r"},"ship-weekly-newsletter-fast_598":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              repo={process.env.NEXTREPO}\r"},"ship-weekly-newsletter-fast_599":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              repoId={process.env.NEXTREPOID}\r"},"ship-weekly-newsletter-fast_600":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              category={process.env.NEXTCATEGORY}\r"},"ship-weekly-newsletter-fast_601":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              categoryId={process.env.NEXTCATEGORY_ID}\r"},"ship-weekly-newsletter-fast_602":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              mapping={process.env.NEXTMAPPING}\r"},"ship-weekly-newsletter-fast_603":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              term={process.env.NEXTTERM}\r"},"ship-weekly-newsletter-fast_604":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              inputPosition={process.env.NEXTINPUT_POSITION}\r"},"ship-weekly-newsletter-fast_605":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              theme={process.env.NEXTTHEME}\r"},"ship-weekly-newsletter-fast_606":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              lang={process.env.NEXTLANG}\r"},"ship-weekly-newsletter-fast_607":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              anonymous={process.env.NEXTCROSSORIGIN}\r"},"ship-weekly-newsletter-fast_608":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              loading=\"lazy\"\r"},"ship-weekly-newsletter-fast_609":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              strict=\"0\"\r"},"ship-weekly-newsletter-fast_610":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              reactionsEnabled=\"1\"\r"},"ship-weekly-newsletter-fast_611":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"              emitMetadata=\"0\"\r"},"ship-weekly-newsletter-fast_612":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"            /\r"},"ship-weekly-newsletter-fast_613":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        }\r"},"ship-weekly-newsletter-fast_614":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"        </"},"ship-weekly-newsletter-fast_615":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"      );\r"},"ship-weekly-newsletter-fast_616":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    }\r"},"ship-weekly-newsletter-fast_617":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_618":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_619":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    组件需要填写的信息 giscus 都会在你填完仓库信息后自动生成，你可以在这里开始使用：https://giscus.app/zh-CN\r"},"ship-weekly-newsletter-fast_620":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"    \r"},"ship-weekly-newsletter-fast_621":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_622":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"选择字体\r"},"ship-weekly-newsletter-fast_623":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_624":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"周刊作为一个靠内容建设的产品，一款好看的字体可以大大提升网站的颜值和阅读体验。在尝试了很多种字体后，我发现落霞孤鹜的文楷字体最符合周刊的调性。\r"},"ship-weekly-newsletter-fast_625":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_626":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"中文字体包都很大，所以找一个稳定的 CDN 就可以了。把 CDN 导入全局样式文件，body 中设置全站字体就可以：\r"},"ship-weekly-newsletter-fast_627":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_628":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"css\r"},"ship-weekly-newsletter-fast_629":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"//\r"},"ship-weekly-newsletter-fast_630":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"@import url('https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-webfont/1.6.0/style.min.css');\r"},"ship-weekly-newsletter-fast_631":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_632":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"body {\r"},"ship-weekly-newsletter-fast_633":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"  font-family: \"LXGW WenKai\", sans-serif;\r"},"ship-weekly-newsletter-fast_634":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"}\r"},"ship-weekly-newsletter-fast_635":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_636":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_637":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"落霞孤鹜字体：https://lxgw.github.io/\r"},"ship-weekly-newsletter-fast_638":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_639":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"总结\r"},"ship-weekly-newsletter-fast_640":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_641":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"写这篇文章的时候，我又去看了一下我发布的「独立开发者技术栈」仓库，只有一个 markdown 文件的仓库，发布24小时获得500 star，发布40天超过4000 star。\r"},"ship-weekly-newsletter-fast_642":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_643":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"网友对优质信息其实是非常渴望的，有了这个周刊模板，每个人都可以半小时上线自己的「阮一峰周刊」，可以为全网的网友提供优质的工具和内容。如果你还懂技术，你还可以根据这篇文章的开发思路，去二开一个自己的版本。\r"},"ship-weekly-newsletter-fast_644":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_645":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"把这个项目开源出来也是为有志于发展副业但是找不到方向的朋友提供一个获取流量的切入点，动手实操并坚持下去就超过大部分竞争者了，希望每一位发展副业的朋友都像老渔夫桑地亚哥一样和大马林鱼战斗到底。\r"},"ship-weekly-newsletter-fast_646":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_647":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_648":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"关于我\r"},"ship-weekly-newsletter-fast_649":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_650":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"ship-weekly-newsletter-fast_651":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_652":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"ship-weekly-newsletter-fast_653":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_654":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"欢迎在以下平台关注我：\r"},"ship-weekly-newsletter-fast_655":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"ship-weekly-newsletter-fast_656":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_657":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_658":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_659":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_660":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_661":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_662":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_663":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : 「BigYe程普」\r"},"ship-weekly-newsletter-fast_664":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"- : \r"},"ship-weekly-newsletter-fast_665":{"title":"Next.js+MDX手撸一个开源周刊模板","content":"\r"},"nodejs-22-feature":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node拒绝当咸鱼，Node 22大进步","display":"\r"},"nodejs-22-feature_0":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_1":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"这几年，deno和bun风头正盛，大有你方唱罢我登场的态势，deno和bun的每一次更新版本，Node都会被拿来比较，比较结果总是Node落后了。\r"},"nodejs-22-feature_2":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_3":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"这种比较是不是非常熟悉，就像卖手机的跟iPhone比，卖汽车的跟特斯拉比，比较的时候有时候还得来个「比一分钱硬币还薄」的套路。\r"},"nodejs-22-feature_4":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_5":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_6":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_7":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node虽然没有落后了，但是确实有点压力了，所以20和22版本都大跨步前进，拒绝当咸鱼了。\r"},"nodejs-22-feature_8":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_9":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"因为Node官网对22版本特性的介绍太过简单，所以我决定来一篇详细介绍新特性的文章，让学习Node的朋友们知道，Node现在在第几层。\r"},"nodejs-22-feature_10":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_11":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"<Aside"},"nodejs-22-feature_12":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"欢迎加入「🌍」，一起学习交流前端和Node端技术\r"},"nodejs-22-feature_13":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"</Aside"},"nodejs-22-feature_14":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_15":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"首先我把新特性分为两类，分别是：开发者可能直接用到的特性、开发者相对无感知的底层更新。本文重点介绍前者，简单介绍后者。先来一个概览：\r"},"nodejs-22-feature_16":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_17":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"：\r"},"nodejs-22-feature_18":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_19":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"1. 支持通过  引入ESM\r"},"nodejs-22-feature_20":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"2. 运行  中的脚本\r"},"nodejs-22-feature_21":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"3. 监视模式（）稳定化\r"},"nodejs-22-feature_22":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"4. 内置 WebSocket 客户端\r"},"nodejs-22-feature_23":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"5. 增加流的默认高水位线\r"},"nodejs-22-feature_24":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"6. 文件模式匹配功能\r"},"nodejs-22-feature_25":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_26":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"：\r"},"nodejs-22-feature_27":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_28":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"1. V8 引擎升级至 12.4 版本\r"},"nodejs-22-feature_29":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"2. Maglev 编译器默认启用\r"},"nodejs-22-feature_30":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"3. 改进  的创建性能\r"},"nodejs-22-feature_31":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_32":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"接下来开始介绍。\r"},"nodejs-22-feature_33":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_34":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"支持通过  导入 ESM\r"},"nodejs-22-feature_35":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_36":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"以前，我们认为 CommonJS 与 ESM 是分离的。\r"},"nodejs-22-feature_37":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_38":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"例如，在 CommonJS里，我们用并使用  导出模块，用  导入模块：\r"},"nodejs-22-feature_39":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_40":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_41":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// CommonJS\r"},"nodejs-22-feature_42":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_43":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// math.js\r"},"nodejs-22-feature_44":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"function add(a, b) {\r"},"nodejs-22-feature_45":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  return a + b;\r"},"nodejs-22-feature_46":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"}\r"},"nodejs-22-feature_47":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"module.exports.add = add;\r"},"nodejs-22-feature_48":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_49":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// useMath.js\r"},"nodejs-22-feature_50":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const math = require('./math');\r"},"nodejs-22-feature_51":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"console.log(math.add(2, 3));\r"},"nodejs-22-feature_52":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_53":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_54":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"在 ECMAScript Modules (ESM) 里，我们使用  导出模块，用  导入模块：\r"},"nodejs-22-feature_55":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_56":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_57":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// ESM\r"},"nodejs-22-feature_58":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_59":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// math.mjs\r"},"nodejs-22-feature_60":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"export function add(a, b) {\r"},"nodejs-22-feature_61":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  return a + b;\r"},"nodejs-22-feature_62":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"}\r"},"nodejs-22-feature_63":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_64":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// useMath.js\r"},"nodejs-22-feature_65":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"import { add } from './math.mjs';\r"},"nodejs-22-feature_66":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"console.log(add(2, 3));\r"},"nodejs-22-feature_67":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_68":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_69":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node 22 支持新的方式——用  导入 ESM：\r"},"nodejs-22-feature_70":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_71":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_72":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// Node 22\r"},"nodejs-22-feature_73":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_74":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// math.mjs\r"},"nodejs-22-feature_75":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"export function add(a, b) {\r"},"nodejs-22-feature_76":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  return a + b;\r"},"nodejs-22-feature_77":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"}\r"},"nodejs-22-feature_78":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_79":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// useMath.js\r"},"nodejs-22-feature_80":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const { add } = require('./mathModule.mjs');\r"},"nodejs-22-feature_81":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"console.log(add(2, 3));\r"},"nodejs-22-feature_82":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_83":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_84":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"这么设计的原因是为了给大型项目和遗留系统提供一个平滑过渡的方案，因为这类项目难以快速全部迁移到 ESM，通过允许  导入 ESM，开发者就可以逐个模块迁移，而不是一次性对整个项目进行修改。\r"},"nodejs-22-feature_85":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_86":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"目前这种写法还是实验性功能，所以使用是有“门槛”的：\r"},"nodejs-22-feature_87":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_88":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 启动命令需要添加  参数，如：\r"},"nodejs-22-feature_89":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 模块标记：确保 ESM 模块通过  中的  或文件扩展名是 。\r"},"nodejs-22-feature_90":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 完全同步：只有完全同步的ESM才能被  导入，任何含有顶级  的ESM都不能使用这种方式加载。\r"},"nodejs-22-feature_91":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_92":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"运行中的脚本\r"},"nodejs-22-feature_93":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_94":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"假设我们的  里有一个脚本：\r"},"nodejs-22-feature_95":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_96":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"json\r"},"nodejs-22-feature_97":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\"scripts\": {\r"},"nodejs-22-feature_98":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  \"test\": \"jest\"\r"},"nodejs-22-feature_99":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"}\r"},"nodejs-22-feature_100":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_101":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_102":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"在此之前，我们必须依赖 npm 或者 yanr 这样的包管理器来执行命令，比如：。\r"},"nodejs-22-feature_103":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_104":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node 22 添加了一个新命令行标志 ，允许直接从命令行执行  中定义的脚本，可以直接使用  这样的命令来运行脚本。\r"},"nodejs-22-feature_105":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_106":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"刚开始我还疑惑这是不是脱裤子放屁的行为，因为有 node 的地方一般都有 npm，我要这  有何用？\r"},"nodejs-22-feature_107":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_108":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"后来思考了一下，主要原因应该还是统一运行环境和提升性能。不同的包管理器在处理脚本时可能会有微小的差异，Node 提供一个标准化的方式执行脚本，有助于统一这些行为；而且直接使用 node 执行脚本要比通过 npm 执行脚本更快，因为绕过了 npm 这个中间层。\r"},"nodejs-22-feature_109":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_110":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"监视模式（）稳定化\r"},"nodejs-22-feature_111":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_112":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"在 19 版本里，Node 引入了  指令，用于监视文件系统的变动，并自动重启。22 版本开始，这个指令成为稳定功能了。\r"},"nodejs-22-feature_113":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_114":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"要启用监视模式，只需要在启动 Node 应用时加上  参数。例如：\r"},"nodejs-22-feature_115":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_116":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"bash\r"},"nodejs-22-feature_117":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"node --watch app.js\r"},"nodejs-22-feature_118":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_119":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_120":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"正在用 nodemon 做自动重启的朋友们可以正式转战  了～\r"},"nodejs-22-feature_121":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_122":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"内置 WebSocket 客户端\r"},"nodejs-22-feature_123":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_124":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"以前，要用 Node 开发一个 socket 服务，必须使用 ws、socket.io 这样的第三方库来实现。第三方库虽然稳如老狗帮助开发者许多年，但是终究是有点不方便。\r"},"nodejs-22-feature_125":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_126":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node 22 正式内置了 WebSocket，并且属于稳定功能，不再需要  来启用了。\r"},"nodejs-22-feature_127":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_128":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"除此之外，WebScoket 的实现还遵循了浏览器中 WebSocket API 的标准，这意味着在 Node 中使用 WebSocket 的方式将与在 JavaScript 中使用 WebSocket 的方式非常相似，有助于减少学习成本并提高代码的一致性。\r"},"nodejs-22-feature_129":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_130":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"用法示例：\r"},"nodejs-22-feature_131":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_132":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_133":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const socket = new WebSocket(\"ws://localhost:8080\");\r"},"nodejs-22-feature_134":{"title":"Node拒绝当咸鱼，Node 22大进步","content":" \r"},"nodejs-22-feature_135":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"socket.addEventListener(\"open\", (event) =\r"},"nodejs-22-feature_136":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  socket.send(\"Hello Server!\");\r"},"nodejs-22-feature_137":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"});\r"},"nodejs-22-feature_138":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_139":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_140":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"增加流（streams）的默认高水位线（High Water Mark）\r"},"nodejs-22-feature_141":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_142":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"streams 在 Node 中有举足轻重的作用，读写数据都得要 streams 来完成。而 streams 可以设置  参数，用于表示缓冲区的大小。 越大，缓冲区越大，占用内存越多，I/O 操作就减少， 越小，其他信息也对应相反。\r"},"nodejs-22-feature_143":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_144":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"用法如下：\r"},"nodejs-22-feature_145":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_146":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_147":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const fs = require('fs');\r"},"nodejs-22-feature_148":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_149":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const readStream = fs.createReadStream('example-large-file.txt', {\r"},"nodejs-22-feature_150":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  highWaterMark: 1024 * 1024  // 设置高水位线为1MB\r"},"nodejs-22-feature_151":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"});\r"},"nodejs-22-feature_152":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_153":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"readStream.on('data', (chunk) =\r"},"nodejs-22-feature_154":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  console.log();\r"},"nodejs-22-feature_155":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"});\r"},"nodejs-22-feature_156":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_157":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"readStream.on('end', () =\r"},"nodejs-22-feature_158":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  console.log('End of file has been reached.');\r"},"nodejs-22-feature_159":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"});\r"},"nodejs-22-feature_160":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_161":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_162":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"虽然  是可配置的，但通常情况下，我们是使用默认值。在以前的版本里， 的默认值是 16k，Node 22 版本开始，默认值被提升到 64k 了。\r"},"nodejs-22-feature_163":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_164":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"文件模式匹配——glob 和 globSync\r"},"nodejs-22-feature_165":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_166":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Node 22 版本在 fs 模块中新增了  和  函数，它们用于根据指定模式匹配文件路径。\r"},"nodejs-22-feature_167":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_168":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"文件模式匹配允许开发者定义一个匹配模式，以找出符合特定规则的文件路径集合。模式定义通常包括通配符，如 （匹配任何字符）和 （匹配单个字符），以及其他特定的模式字符。\r"},"nodejs-22-feature_169":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_170":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"glob 函数（异步）\r"},"nodejs-22-feature_171":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_172":{"title":"Node拒绝当咸鱼，Node 22大进步","content":" 函数是一个异步的函数，它不会阻塞 Node.js 的事件循环。这意味着它在搜索文件时不会停止其他代码的执行。 函数的基本用法如下：\r"},"nodejs-22-feature_173":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_174":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_175":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const { glob } = require('fs');\r"},"nodejs-22-feature_176":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_177":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"glob('.js', (err, files) =\r"},"nodejs-22-feature_178":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  if (err) {\r"},"nodejs-22-feature_179":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"    throw err;\r"},"nodejs-22-feature_180":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  }\r"},"nodejs-22-feature_181":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  console.log(files); // 输出所有匹配的.js文件路径\r"},"nodejs-22-feature_182":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"});\r"},"nodejs-22-feature_183":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_184":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_185":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"在这个示例中， 函数用来查找所有子目录中以  结尾的文件。它接受两个参数：\r"},"nodejs-22-feature_186":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_187":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 第一个参数是一个字符串，表示文件匹配模式。\r"},"nodejs-22-feature_188":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 第二个参数是一个回调函数，当文件搜索完成后，这个函数会被调用。如果搜索成功， 将为 ，而  将包含一个包含所有匹配文件路径的数组。\r"},"nodejs-22-feature_189":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_190":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"globSync 函数（同步）\r"},"nodejs-22-feature_191":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_192":{"title":"Node拒绝当咸鱼，Node 22大进步","content":" 是  的同步版本，它会阻塞事件循环，直到所有匹配的文件都被找到。这使得代码更简单，但在处理大量文件或在需要高响应性的应用中可能会导致性能问题。其基本用法如下：\r"},"nodejs-22-feature_193":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_194":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_195":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const { globSync } = require('fs');\r"},"nodejs-22-feature_196":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_197":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const files = globSync('.js');\r"},"nodejs-22-feature_198":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"console.log(files); // 同样输出所有匹配的.js文件路径\r"},"nodejs-22-feature_199":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_200":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_201":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_202":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"这个函数直接返回匹配的文件数组，适用于脚本和简单的应用，其中执行速度不是主要关注点。\r"},"nodejs-22-feature_203":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_204":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"使用场景\r"},"nodejs-22-feature_205":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_206":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"这两个函数适用于：\r"},"nodejs-22-feature_207":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_208":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 自动化构建过程，如自动寻找和处理项目中的 JavaScript 文件。\r"},"nodejs-22-feature_209":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 开发工具和脚本，需要对项目目录中的文件进行批量操作。\r"},"nodejs-22-feature_210":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- 任何需要从大量文件中快速筛选出符合特定模式的文件集的应用。\r"},"nodejs-22-feature_211":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_212":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"V8 引擎升级至 12.4 版本\r"},"nodejs-22-feature_213":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_214":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"从这一节开始，我们了解一下开发者相对无感知的底层更新，第一个就是 V8 引擎升级到 12.4 版本了，有了以下特性升级：\r"},"nodejs-22-feature_215":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_216":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- WebAssembly 垃圾回收：这一特性将改善 WebAssembly 在内存管理方面的能力。\r"},"nodejs-22-feature_217":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- Array.fromAsync：这个新方法允许从异步迭代器创建数组。\r"},"nodejs-22-feature_218":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- Set 方法和迭代器帮助程序：提供了更多内建的Set操作和迭代器操作的方法，增强了数据结构的操作性和灵活性。\r"},"nodejs-22-feature_219":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_220":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Maglev 编译器默认启用\r"},"nodejs-22-feature_221":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_222":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"Maglev 是 V8 的新编译器，现在在支持的架构上默认启用。它主要针对短生命周期的命令行程序（CLI程序）性能进行优化，通过改进JIT（即时编译）的效率来提升性能。这对开发者编写的工具和脚本将带来明显的速度提升。\r"},"nodejs-22-feature_223":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_224":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"改进的创建性能\r"},"nodejs-22-feature_225":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_226":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"在这次更新中，Node 提高了  实例的创建效率。 是用于中断正在进行的操作（如网络请求或任何长时间运行的异步任务）的一种机制。通过提升这一过程的效率，可以加快任何依赖这一功能的应用，如使用  进行HTTP请求或在测试运行器中处理中断的场景。\r"},"nodejs-22-feature_227":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_228":{"title":"Node拒绝当咸鱼，Node 22大进步","content":" 的工作方式是通过  实例来管理。 提供一个  属性和一个  方法。 属性返回一个  对象，可以传递给任何接受  的API（如）来监听取消事件。当调用方法时，与该控制器关联的所有操作将被取消。\r"},"nodejs-22-feature_229":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_230":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"jsx\r"},"nodejs-22-feature_231":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const controller = new AbortController();\r"},"nodejs-22-feature_232":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"const signal = controller.signal;\r"},"nodejs-22-feature_233":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_234":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"fetch(url, { signal })\r"},"nodejs-22-feature_235":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  .then(response =\r"},"nodejs-22-feature_236":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  .catch(err =\r"},"nodejs-22-feature_237":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"    if (err.name === 'AbortError') {\r"},"nodejs-22-feature_238":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"      console.log('Fetch aborted');\r"},"nodejs-22-feature_239":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"    } else {\r"},"nodejs-22-feature_240":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"      console.error('Fetch error:', err);\r"},"nodejs-22-feature_241":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"    }\r"},"nodejs-22-feature_242":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"  });\r"},"nodejs-22-feature_243":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_244":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"// 取消请求\r"},"nodejs-22-feature_245":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"controller.abort();\r"},"nodejs-22-feature_246":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_247":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_248":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"总结\r"},"nodejs-22-feature_249":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_250":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"最后，我只替 Node 说一句：Node 没有这么容易被 deno 和 bun 打败～\r"},"nodejs-22-feature_251":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_252":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_253":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_254":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_255":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"关于我\r"},"nodejs-22-feature_256":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_257":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"nodejs-22-feature_258":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_259":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"nodejs-22-feature_260":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_261":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"欢迎在以下平台关注我：\r"},"nodejs-22-feature_262":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"nodejs-22-feature_263":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_264":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_265":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_266":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_267":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_268":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_269":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_270":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : 「BigYe程普」\r"},"nodejs-22-feature_271":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"- : \r"},"nodejs-22-feature_272":{"title":"Node拒绝当咸鱼，Node 22大进步","content":"\r"},"ship-langding-page-fast2":{"title":"我为独立开发者开发落地页模板（下）","content":"我为独立开发者开发落地页模板（下）","display":"\r"},"ship-langding-page-fast2_0":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_1":{"title":"我为独立开发者开发落地页模板（下）","content":"在【】我们完成了基础项目的搭建和落地页的设计思路的整理，这篇文章就来讲解后续的开发过程。\r"},"ship-langding-page-fast2_2":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_3":{"title":"我为独立开发者开发落地页模板（下）","content":"学完这篇文章你将获得以下知识：\r"},"ship-langding-page-fast2_4":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_5":{"title":"我为独立开发者开发落地页模板（下）","content":"- 落地页开发理念\r"},"ship-langding-page-fast2_6":{"title":"我为独立开发者开发落地页模板（下）","content":"-  与  的应用\r"},"ship-langding-page-fast2_7":{"title":"我为独立开发者开发落地页模板（下）","content":"- 暗黑模式的支持\r"},"ship-langding-page-fast2_8":{"title":"我为独立开发者开发落地页模板（下）","content":"- Next.js 国际化最佳实践\r"},"ship-langding-page-fast2_9":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_10":{"title":"我为独立开发者开发落地页模板（下）","content":"我已经为本教程的落地页模板开发了一个落地页（套壳了属于是）：\r"},"ship-langding-page-fast2_11":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_12":{"title":"我为独立开发者开发落地页模板（下）","content":"开源地址：https://github.com/weijunext/landing-page-boilerplate\r"},"ship-langding-page-fast2_13":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_14":{"title":"我为独立开发者开发落地页模板（下）","content":"落地页地址：https://landingpage.weijunext.com/\r"},"ship-langding-page-fast2_15":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_16":{"title":"我为独立开发者开发落地页模板（下）","content":"看完页面效果，如果你发出这样的感叹：\r"},"ship-langding-page-fast2_17":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_18":{"title":"我为独立开发者开发落地页模板（下）","content":"<img src=\"/assets/048/1.jpeg\" alt=\"人才\" width=\"30%\" /"},"ship-langding-page-fast2_19":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_20":{"title":"我为独立开发者开发落地页模板（下）","content":"那么请继续阅读本文。\r"},"ship-langding-page-fast2_21":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_22":{"title":"我为独立开发者开发落地页模板（下）","content":"内容设计与开发\r"},"ship-langding-page-fast2_23":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_24":{"title":"我为独立开发者开发落地页模板（下）","content":"上一篇文章我画了一张落地页的页面结构图，那是一张丐版示例图，为不熟悉落地页概念的读者而画的，实际上落地页的每一块都有专业名词，所以让我重新介绍一下落地页的页面结构：\r"},"ship-langding-page-fast2_25":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_26":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：落地页头部，提供重要内容的锚点和工具\r"},"ship-langding-page-fast2_27":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：落地页首屏，是访客首先看到的位置，要立即吸引访问者的注意力，清晰传达产品或服务的价值和优势。可以包含这些信息：\r"},"ship-langding-page-fast2_28":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 标题：清晰、简洁的主标题，传达出产品或服务的最大卖点（USP）。\r"},"ship-langding-page-fast2_29":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 副标题：补充主标题，也可以理解为描述，提供更多细节或强化卖点。\r"},"ship-langding-page-fast2_30":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 数据展示：通过展示产品数据（如用户数、好评率）、合作伙伴或者获奖数据，强化品牌价值\r"},"ship-langding-page-fast2_31":{"title":"我为独立开发者开发落地页模板（下）","content":"    - CTA按钮：醒目的呼吁行动按钮。\r"},"ship-langding-page-fast2_32":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_33":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_34":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_35":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：介绍产品或服务的特点和功能，让用户知道自己在为什么而买单。设计要点：\r"},"ship-langding-page-fast2_36":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 清晰的特点列举：用简洁的语言列出主要特点。\r"},"ship-langding-page-fast2_37":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 以用户为中心进行描述：强调产品或服务如何解决用户的痛点。\r"},"ship-langding-page-fast2_38":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_39":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_40":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_41":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：展示价格和付费选项，明确每个选项提供的功能和服务，使潜在客户能够做出明智的决策。\r"},"ship-langding-page-fast2_42":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_43":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_44":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_45":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：这部分是展示客户评价，通过展示真实客户的正面反馈，可以进一步与潜在用户建立信任。设计要点：\r"},"ship-langding-page-fast2_46":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 真实的用户：展示真实客户的信息（被允许的情况下）。\r"},"ship-langding-page-fast2_47":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 描述成果：描述客户如何通过使用产品或服务取得成功。\r"},"ship-langding-page-fast2_48":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 多样化的案例：展示来自不同背景和行业的客户，以获取不同客群的认可。\r"},"ship-langding-page-fast2_49":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_50":{"title":"我为独立开发者开发落地页模板（下）","content":"    Testimonials 还有另一个我认为更好的名称：Wall of Love，我觉得这个名称显得网站更有温度。\r"},"ship-langding-page-fast2_51":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_52":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_53":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_54":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：提前预设潜在用户最可能提出的问题，并给出解答，减少购买前的不确定性和障碍。\r"},"ship-langding-page-fast2_55":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_56":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_57":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_58":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：又叫「呼吁行动」，经过以上的内容展示和互动，访问者已经了解了产品或服务，所以我们要在页面的末尾，替用户完成心中的总结，指导用户做出决策。\r"},"ship-langding-page-fast2_59":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_60":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_61":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_62":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：网站底部，这是可以帮助优化SEO的地方，在多语言支持的章节我们再说。\r"},"ship-langding-page-fast2_63":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_64":{"title":"我为独立开发者开发落地页模板（下）","content":"以上是每个模块的设计理念和要点，不过我们还得考虑落地页整体风格。色彩与动画能够带动访问者的情绪，所以我们需要用不同的高亮、动画来强化落地页要展示的内容。为了让落地页更有吸引力，我引入了  和 。\r"},"ship-langding-page-fast2_65":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_66":{"title":"我为独立开发者开发落地页模板（下）","content":"Rough Notation 高亮\r"},"ship-langding-page-fast2_67":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_68":{"title":"我为独立开发者开发落地页模板（下）","content":"Rough Notation 是基于 RoughJS 创建的手绘风格动画库，这个库提供了多种高亮手绘风样式，并且可配置项丰富，对于开发者来说还是非常自由的。\r"},"ship-langding-page-fast2_69":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_70":{"title":"我为独立开发者开发落地页模板（下）","content":"Next.js 项目使用  库更方便。\r"},"ship-langding-page-fast2_71":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_72":{"title":"我为独立开发者开发落地页模板（下）","content":"安装依赖：\r"},"ship-langding-page-fast2_73":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_74":{"title":"我为独立开发者开发落地页模板（下）","content":"bash\r"},"ship-langding-page-fast2_75":{"title":"我为独立开发者开发落地页模板（下）","content":"npm install --save react-rough-notation\r"},"ship-langding-page-fast2_76":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_77":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_78":{"title":"我为独立开发者开发落地页模板（下）","content":"调用组件：\r"},"ship-langding-page-fast2_79":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_80":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_81":{"title":"我为独立开发者开发落地页模板（下）","content":"import { RoughNotation } from \"react-rough-notation\";\r"},"ship-langding-page-fast2_82":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_83":{"title":"我为独立开发者开发落地页模板（下）","content":"<RoughNotation type=\"highlight\" show={true} color=\"#2563EB\""},"ship-langding-page-fast2_84":{"title":"我为独立开发者开发落地页模板（下）","content":"  Feature\r"},"ship-langding-page-fast2_85":{"title":"我为独立开发者开发落地页模板（下）","content":"</RoughNotation"},"ship-langding-page-fast2_86":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_87":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_88":{"title":"我为独立开发者开发落地页模板（下）","content":"上面截图的落地页里，每个部分的标题、CTA 的红色框都是用 react-routh-notation 实现的高亮和动画效果。\r"},"ship-langding-page-fast2_89":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_90":{"title":"我为独立开发者开发落地页模板（下）","content":"你可以在或者里学习可用的属性，不过我更推荐直接看，代码和效果对照着看，你可以更快记住属性的作用。\r"},"ship-langding-page-fast2_91":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_92":{"title":"我为独立开发者开发落地页模板（下）","content":"framer-motion动画\r"},"ship-langding-page-fast2_93":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_94":{"title":"我为独立开发者开发落地页模板（下）","content":"前端工程师想要做动画的时候，通常可以手写  和  来实现，更复杂的使用贝塞尔曲线、弹簧-阻尼系统的动效就鲜有人能手写实现了，大部分前端工程师可以通过调用第三方动效库来完成这样的复杂动效。\r"},"ship-langding-page-fast2_95":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_96":{"title":"我为独立开发者开发落地页模板（下）","content":"framer-motion 就是这些动效库之一，它基于 React 构建，因为其灵活的配置、符合物理系统和流畅的多平台性能体验而备受推崇。落地页需要添加一些灵动的动画来吸引访问者，framer-motion 就是一个很好的选择。\r"},"ship-langding-page-fast2_97":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_98":{"title":"我为独立开发者开发落地页模板（下）","content":"framer-motion 最核心的一个能力，就是可以用 motion 组件增强 HTML 标签。一个简单的用法示例是这样：\r"},"ship-langding-page-fast2_99":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_100":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_101":{"title":"我为独立开发者开发落地页模板（下）","content":"import {motion} from 'framer-motion'\r"},"ship-langding-page-fast2_102":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_103":{"title":"我为独立开发者开发落地页模板（下）","content":"const Hero = () =\r"},"ship-langding-page-fast2_104":{"title":"我为独立开发者开发落地页模板（下）","content":"\treturn <motion.div></motion.div"},"ship-langding-page-fast2_105":{"title":"我为独立开发者开发落地页模板（下）","content":"}\r"},"ship-langding-page-fast2_106":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_107":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_108":{"title":"我为独立开发者开发落地页模板（下）","content":"motion 组件使用最广泛的属性是 animate 和 transition，也是落地页模板里的用例：\r"},"ship-langding-page-fast2_109":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_110":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_111":{"title":"我为独立开发者开发落地页模板（下）","content":"import {motion} from 'framer-motion'\r"},"ship-langding-page-fast2_112":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_113":{"title":"我为独立开发者开发落地页模板（下）","content":"const Hero = () =\r"},"ship-langding-page-fast2_114":{"title":"我为独立开发者开发落地页模板（下）","content":"\treturn (\r"},"ship-langding-page-fast2_115":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t<motion.div\r"},"ship-langding-page-fast2_116":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t  initial={{ opacity: 0, scale: 0.5 }}\r"},"ship-langding-page-fast2_117":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t  animate={{ opacity: 1, scale: 1 }}\r"},"ship-langding-page-fast2_118":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t  transition={{\r"},"ship-langding-page-fast2_119":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t    duration: 0.3,\r"},"ship-langding-page-fast2_120":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t    ease: [0, 0.71, 0.2, 1],\r"},"ship-langding-page-fast2_121":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t    scale: {\r"},"ship-langding-page-fast2_122":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t      type: \"spring\",\r"},"ship-langding-page-fast2_123":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t      damping: 10,\r"},"ship-langding-page-fast2_124":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t      stiffness: 50,\r"},"ship-langding-page-fast2_125":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t      restDelta: 0.001,\r"},"ship-langding-page-fast2_126":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t    },\r"},"ship-langding-page-fast2_127":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t  }}\r"},"ship-langding-page-fast2_128":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t"},"ship-langding-page-fast2_129":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t\t{//}\r"},"ship-langding-page-fast2_130":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t</motion.div"},"ship-langding-page-fast2_131":{"title":"我为独立开发者开发落地页模板（下）","content":"\t)\r"},"ship-langding-page-fast2_132":{"title":"我为独立开发者开发落地页模板（下）","content":"}\r"},"ship-langding-page-fast2_133":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_134":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_135":{"title":"我为独立开发者开发落地页模板（下）","content":"这里使用了 initial、animate 和 transition 三个属性：\r"},"ship-langding-page-fast2_136":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_137":{"title":"我为独立开发者开发落地页模板（下）","content":"- initial：定义组件初始状态，也可以使用 style 来定义\r"},"ship-langding-page-fast2_138":{"title":"我为独立开发者开发落地页模板（下）","content":"- animate：定义组件终点状态\r"},"ship-langding-page-fast2_139":{"title":"我为独立开发者开发落地页模板（下）","content":"- transition：定义组件的中间状态\r"},"ship-langding-page-fast2_140":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_141":{"title":"我为独立开发者开发落地页模板（下）","content":"看到这里你可能已经发现， motion 的属性写法和 CSS 很像。没错，如果你熟悉 CSS 中动画相关的属性，你的学习曲线可以很平滑。\r"},"ship-langding-page-fast2_142":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_143":{"title":"我为独立开发者开发落地页模板（下）","content":"本文主要介绍 framer-motion 的三种动画模式，也就是例子中的  配置：\r"},"ship-langding-page-fast2_144":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_145":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：又称做「补间动画」，用于设置起点和终点之间进行平滑的过渡，相当于 CSS 中的 ease 曲线动画效果。因为这种动画更自然，所以大多数场景下使用 Tween 模式就可以。\r"},"ship-langding-page-fast2_146":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：又称做「弹簧-阻尼动画」，模拟了物理世界中物体弹性的动作。你可以通过物理参数来控制动画行为，能够获得更加活泼的动画效果。如果你使用了这种模式，可以通过以下参数来调控动效：\r"},"ship-langding-page-fast2_147":{"title":"我为独立开发者开发落地页模板（下）","content":"    - （弹簧硬度）：弹簧的弹性系数，决定了弹簧回到平衡位置的速率。硬度越高，弹簧的弹力越大，动画开始的加速度也就越大，动画启动和停止地越快\r"},"ship-langding-page-fast2_148":{"title":"我为独立开发者开发落地页模板（下）","content":"    - （阻尼）：减缓振动的力量，阻尼越高，动画停止的速度就越快\r"},"ship-langding-page-fast2_149":{"title":"我为独立开发者开发落地页模板（下）","content":"    - （质量）：受力时的惯性大小。在动画中，质量越大，动画加速和减速就越慢\r"},"ship-langding-page-fast2_150":{"title":"我为独立开发者开发落地页模板（下）","content":"    - （静止差值）：动画结束前允许的最小移动量。当弹簧动画的物体移动距离小于该值时，动画会被认为是停止的。通常要设置比较小的值，这样组件停下的位置会更准确地靠近我们样式里设定的位置。\r"},"ship-langding-page-fast2_151":{"title":"我为独立开发者开发落地页模板（下）","content":"- ：又称做「惯性动画」，模拟了物体在受到推动后随着时间推移逐渐减速直至停止的自然行为。这种模式的使用场景最少。\r"},"ship-langding-page-fast2_152":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_153":{"title":"我为独立开发者开发落地页模板（下）","content":"framer-motion 是一个让动效实现非常方便的库，如果一定要找个缺点，那就是配置太多而文档没有很好的索引，查阅时会显得凌乱，所以如果你要开始使用framer-motion，应当先通读一遍文档，然后根据需求再进行查找对应的API。\r"},"ship-langding-page-fast2_154":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_155":{"title":"我为独立开发者开发落地页模板（下）","content":"framer-motion官方文档：https://www.framer.com/motion\r"},"ship-langding-page-fast2_156":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_157":{"title":"我为独立开发者开发落地页模板（下）","content":"暗黑模式与主题切换\r"},"ship-langding-page-fast2_158":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_159":{"title":"我为独立开发者开发落地页模板（下）","content":"我们样式方案使用的是 Tailwind，Tailwind已经内置支持暗黑模式了，你只需要使用  的类名就可以配置暗黑模式的样式：\r"},"ship-langding-page-fast2_160":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_161":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_162":{"title":"我为独立开发者开发落地页模板（下）","content":"<div class=\"bg-white dark:bg-slate-800"},"ship-langding-page-fast2_163":{"title":"我为独立开发者开发落地页模板（下）","content":"</div"},"ship-langding-page-fast2_164":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_165":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_166":{"title":"我为独立开发者开发落地页模板（下）","content":"出于用户体验考虑，我们的网站最好能够提供主题切换的按钮，让用户自主选择主题。我们落地页选择的方案是 。\r"},"ship-langding-page-fast2_167":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_168":{"title":"我为独立开发者开发落地页模板（下）","content":"1. 安装 ：\r"},"ship-langding-page-fast2_169":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_170":{"title":"我为独立开发者开发落地页模板（下）","content":"    bash\r"},"ship-langding-page-fast2_171":{"title":"我为独立开发者开发落地页模板（下）","content":"    npm i -S next-themes\r"},"ship-langding-page-fast2_172":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_173":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_174":{"title":"我为独立开发者开发落地页模板（下）","content":"2. 创建 ：\r"},"ship-langding-page-fast2_175":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_176":{"title":"我为独立开发者开发落地页模板（下）","content":"    tsx\r"},"ship-langding-page-fast2_177":{"title":"我为独立开发者开发落地页模板（下）","content":"    // app/components/ThemeProvider.tsx\r"},"ship-langding-page-fast2_178":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_179":{"title":"我为独立开发者开发落地页模板（下）","content":"    \"use client\";\r"},"ship-langding-page-fast2_180":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_181":{"title":"我为独立开发者开发落地页模板（下）","content":"    import { ThemeProvider as NextThemesProvider } from \"next-themes\";\r"},"ship-langding-page-fast2_182":{"title":"我为独立开发者开发落地页模板（下）","content":"    import { ThemeProviderProps } from \"next-themes/dist/types\";\r"},"ship-langding-page-fast2_183":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_184":{"title":"我为独立开发者开发落地页模板（下）","content":"    export function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r"},"ship-langding-page-fast2_185":{"title":"我为独立开发者开发落地页模板（下）","content":"      return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\r"},"ship-langding-page-fast2_186":{"title":"我为独立开发者开发落地页模板（下）","content":"    }\r"},"ship-langding-page-fast2_187":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_188":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_189":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_190":{"title":"我为独立开发者开发落地页模板（下）","content":"3. 在根布局引入 ：\r"},"ship-langding-page-fast2_191":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_192":{"title":"我为独立开发者开发落地页模板（下）","content":"    tsx\r"},"ship-langding-page-fast2_193":{"title":"我为独立开发者开发落地页模板（下）","content":"    // app/layout.tsx\r"},"ship-langding-page-fast2_194":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_195":{"title":"我为独立开发者开发落地页模板（下）","content":"    import { ThemeProvider } from \"@/components/ThemeProvider\";\r"},"ship-langding-page-fast2_196":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_197":{"title":"我为独立开发者开发落地页模板（下）","content":"    export default async function RootLayout({\r"},"ship-langding-page-fast2_198":{"title":"我为独立开发者开发落地页模板（下）","content":"      children\r"},"ship-langding-page-fast2_199":{"title":"我为独立开发者开发落地页模板（下）","content":"    }: {\r"},"ship-langding-page-fast2_200":{"title":"我为独立开发者开发落地页模板（下）","content":"      children: React.ReactNode\r"},"ship-langding-page-fast2_201":{"title":"我为独立开发者开发落地页模板（下）","content":"    }) {\r"},"ship-langding-page-fast2_202":{"title":"我为独立开发者开发落地页模板（下）","content":"      return (\r"},"ship-langding-page-fast2_203":{"title":"我为独立开发者开发落地页模板（下）","content":"        <html lang=\"en\" suppressHydrationWarning"},"ship-langding-page-fast2_204":{"title":"我为独立开发者开发落地页模板（下）","content":"          <head /"},"ship-langding-page-fast2_205":{"title":"我为独立开发者开发落地页模板（下）","content":"          <body\r"},"ship-langding-page-fast2_206":{"title":"我为独立开发者开发落地页模板（下）","content":"          "},"ship-langding-page-fast2_207":{"title":"我为独立开发者开发落地页模板（下）","content":"            <ThemeProvider\r"},"ship-langding-page-fast2_208":{"title":"我为独立开发者开发落地页模板（下）","content":"              attribute=\"class\"\r"},"ship-langding-page-fast2_209":{"title":"我为独立开发者开发落地页模板（下）","content":"              defaultTheme={siteConfig.nextThemeColor} {//}\r"},"ship-langding-page-fast2_210":{"title":"我为独立开发者开发落地页模板（下）","content":"              enableSystem\r"},"ship-langding-page-fast2_211":{"title":"我为独立开发者开发落地页模板（下）","content":"            "},"ship-langding-page-fast2_212":{"title":"我为独立开发者开发落地页模板（下）","content":"              {//}\r"},"ship-langding-page-fast2_213":{"title":"我为独立开发者开发落地页模板（下）","content":"            </ThemeProvider"},"ship-langding-page-fast2_214":{"title":"我为独立开发者开发落地页模板（下）","content":"          </body"},"ship-langding-page-fast2_215":{"title":"我为独立开发者开发落地页模板（下）","content":"        </html"},"ship-langding-page-fast2_216":{"title":"我为独立开发者开发落地页模板（下）","content":"      );\r"},"ship-langding-page-fast2_217":{"title":"我为独立开发者开发落地页模板（下）","content":"    }\r"},"ship-langding-page-fast2_218":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_219":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_220":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_221":{"title":"我为独立开发者开发落地页模板（下）","content":"    其中:\r"},"ship-langding-page-fast2_222":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_223":{"title":"我为独立开发者开发落地页模板（下）","content":"    -  可设置默认主题，落地页暗色主题更高级，所以我配置了 \r"},"ship-langding-page-fast2_224":{"title":"我为独立开发者开发落地页模板（下）","content":"    -  配置是否基于  进行主题切换。tailwind 的配置里有  CSS 媒体功能的配置，所以  为 true 就行了\r"},"ship-langding-page-fast2_225":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_226":{"title":"我为独立开发者开发落地页模板（下）","content":"    tsx\r"},"ship-langding-page-fast2_227":{"title":"我为独立开发者开发落地页模板（下）","content":"      // tailwind.config.js\r"},"ship-langding-page-fast2_228":{"title":"我为独立开发者开发落地页模板（下）","content":"      \r"},"ship-langding-page-fast2_229":{"title":"我为独立开发者开发落地页模板（下）","content":"      themeColors: [\r"},"ship-langding-page-fast2_230":{"title":"我为独立开发者开发落地页模板（下）","content":"        { media: '(prefers-color-scheme: light)', color: 'white' },\r"},"ship-langding-page-fast2_231":{"title":"我为独立开发者开发落地页模板（下）","content":"        { media: '(prefers-color-scheme: dark)', color: 'black' },\r"},"ship-langding-page-fast2_232":{"title":"我为独立开发者开发落地页模板（下）","content":"      ],\r"},"ship-langding-page-fast2_233":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_234":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_235":{"title":"我为独立开发者开发落地页模板（下）","content":"4. 编写切换主题按钮\r"},"ship-langding-page-fast2_236":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_237":{"title":"我为独立开发者开发落地页模板（下）","content":"    tsx\r"},"ship-langding-page-fast2_238":{"title":"我为独立开发者开发落地页模板（下）","content":"    // app/components/ThemedButton.tsx\r"},"ship-langding-page-fast2_239":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_240":{"title":"我为独立开发者开发落地页模板（下）","content":"    \"use client\";\r"},"ship-langding-page-fast2_241":{"title":"我为独立开发者开发落地页模板（下）","content":"    import PhMoonFill from \"@/components/icons/moon\";\r"},"ship-langding-page-fast2_242":{"title":"我为独立开发者开发落地页模板（下）","content":"    import PhSunBold from \"@/components/icons/sun\";\r"},"ship-langding-page-fast2_243":{"title":"我为独立开发者开发落地页模板（下）","content":"    import { useTheme } from \"next-themes\";\r"},"ship-langding-page-fast2_244":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_245":{"title":"我为独立开发者开发落地页模板（下）","content":"    export function ThemedButton() {\r"},"ship-langding-page-fast2_246":{"title":"我为独立开发者开发落地页模板（下）","content":"      const { theme, setTheme } = useTheme();\r"},"ship-langding-page-fast2_247":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_248":{"title":"我为独立开发者开发落地页模板（下）","content":"      return (\r"},"ship-langding-page-fast2_249":{"title":"我为独立开发者开发落地页模板（下）","content":"        <div onClick={() =\r"},"ship-langding-page-fast2_250":{"title":"我为独立开发者开发落地页模板（下）","content":"          {theme === \"light\" ? <PhMoonFill /\r"},"ship-langding-page-fast2_251":{"title":"我为独立开发者开发落地页模板（下）","content":"        </div"},"ship-langding-page-fast2_252":{"title":"我为独立开发者开发落地页模板（下）","content":"      );\r"},"ship-langding-page-fast2_253":{"title":"我为独立开发者开发落地页模板（下）","content":"    }\r"},"ship-langding-page-fast2_254":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_255":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_256":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_257":{"title":"我为独立开发者开发落地页模板（下）","content":"    其中  是  的 hook，可以获取当前主题，根据当前主题我们可以判断按钮状态。\r"},"ship-langding-page-fast2_258":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_259":{"title":"我为独立开发者开发落地页模板（下）","content":"    再把  组件引入  组件，主题切换的功能就完成了。\r"},"ship-langding-page-fast2_260":{"title":"我为独立开发者开发落地页模板（下）","content":"    \r"},"ship-langding-page-fast2_261":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_262":{"title":"我为独立开发者开发落地页模板（下）","content":"国际化最佳实践\r"},"ship-langding-page-fast2_263":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_264":{"title":"我为独立开发者开发落地页模板（下）","content":"实现国际化最根本的方案是，根据用户选择的语言进行 url 重定向，页面判断 url 前缀，然后展示对应语言的内容。\r"},"ship-langding-page-fast2_265":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_266":{"title":"我为独立开发者开发落地页模板（下）","content":"为了提升用户体验，还应该做到访问根路由（即  时），展示默认语言的内容。\r"},"ship-langding-page-fast2_267":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_268":{"title":"我为独立开发者开发落地页模板（下）","content":"这样我们的需求就确定了：\r"},"ship-langding-page-fast2_269":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_270":{"title":"我为独立开发者开发落地页模板（下）","content":"- 通过  进行 url 重定向\r"},"ship-langding-page-fast2_271":{"title":"我为独立开发者开发落地页模板（下）","content":"    - url 的语言前缀已经被支持，不进行重定向\r"},"ship-langding-page-fast2_272":{"title":"我为独立开发者开发落地页模板（下）","content":"    - url 没有语言前缀，或语言前缀不被支持，重定向到根路由\r"},"ship-langding-page-fast2_273":{"title":"我为独立开发者开发落地页模板（下）","content":"    - 中间件不匹配静态资源（包括图片、txt、xml等文件）和 API 路由\r"},"ship-langding-page-fast2_274":{"title":"我为独立开发者开发落地页模板（下）","content":"- 访问根路由，读取默认语言的内容配置文件；访问带语言前缀的 url，显示对应语言的内容配置文件\r"},"ship-langding-page-fast2_275":{"title":"我为独立开发者开发落地页模板（下）","content":"- 页面 Header 上显示语言切换按钮\r"},"ship-langding-page-fast2_276":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_277":{"title":"我为独立开发者开发落地页模板（下）","content":"现在就可以开始开发了。\r"},"ship-langding-page-fast2_278":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_279":{"title":"我为独立开发者开发落地页模板（下）","content":"先定义国际化需要的参数：\r"},"ship-langding-page-fast2_280":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_281":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_282":{"title":"我为独立开发者开发落地页模板（下）","content":"// lib/i18n.ts\r"},"ship-langding-page-fast2_283":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_284":{"title":"我为独立开发者开发落地页模板（下）","content":"// 默认语言\r"},"ship-langding-page-fast2_285":{"title":"我为独立开发者开发落地页模板（下）","content":"export const defaultLocale = \"en\";\r"},"ship-langding-page-fast2_286":{"title":"我为独立开发者开发落地页模板（下）","content":"// 支持的语言\r"},"ship-langding-page-fast2_287":{"title":"我为独立开发者开发落地页模板（下）","content":"export const locales = [\"\", \"en\", \"zh\", \"zh-CN\", \"zh-TW\", 'zh-HK'];\r"},"ship-langding-page-fast2_288":{"title":"我为独立开发者开发落地页模板（下）","content":"// 语言切换按钮的可选项\r"},"ship-langding-page-fast2_289":{"title":"我为独立开发者开发落地页模板（下）","content":"export const localeNames = {\r"},"ship-langding-page-fast2_290":{"title":"我为独立开发者开发落地页模板（下）","content":"  en: \"🇺🇸 English\",\r"},"ship-langding-page-fast2_291":{"title":"我为独立开发者开发落地页模板（下）","content":"  zh: \"🇨🇳 中文\",\r"},"ship-langding-page-fast2_292":{"title":"我为独立开发者开发落地页模板（下）","content":"};\r"},"ship-langding-page-fast2_293":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_294":{"title":"我为独立开发者开发落地页模板（下）","content":"// 导出语言配置文件\r"},"ship-langding-page-fast2_295":{"title":"我为独立开发者开发落地页模板（下）","content":"const dictionaries: any = {\r"},"ship-langding-page-fast2_296":{"title":"我为独立开发者开发落地页模板（下）","content":"  en: () =\r"},"ship-langding-page-fast2_297":{"title":"我为独立开发者开发落地页模板（下）","content":"  zh: () =\r"},"ship-langding-page-fast2_298":{"title":"我为独立开发者开发落地页模板（下）","content":"};\r"},"ship-langding-page-fast2_299":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_300":{"title":"我为独立开发者开发落地页模板（下）","content":"// 获取语言文件内容\r"},"ship-langding-page-fast2_301":{"title":"我为独立开发者开发落地页模板（下）","content":"export const getDictionary = async (locale: string) =\r"},"ship-langding-page-fast2_302":{"title":"我为独立开发者开发落地页模板（下）","content":"  if ([\"zh-CN\", \"zh-TW\", \"zh-HK\"].includes(locale)) {\r"},"ship-langding-page-fast2_303":{"title":"我为独立开发者开发落地页模板（下）","content":"    locale = \"zh\";\r"},"ship-langding-page-fast2_304":{"title":"我为独立开发者开发落地页模板（下）","content":"  }\r"},"ship-langding-page-fast2_305":{"title":"我为独立开发者开发落地页模板（下）","content":"  // 没有匹配到的语言，都读取英文内容\r"},"ship-langding-page-fast2_306":{"title":"我为独立开发者开发落地页模板（下）","content":"  if (!Object.keys(dictionaries).includes(locale)) {\r"},"ship-langding-page-fast2_307":{"title":"我为独立开发者开发落地页模板（下）","content":"    locale = \"en\";\r"},"ship-langding-page-fast2_308":{"title":"我为独立开发者开发落地页模板（下）","content":"  }\r"},"ship-langding-page-fast2_309":{"title":"我为独立开发者开发落地页模板（下）","content":"  return dictionaries;\r"},"ship-langding-page-fast2_310":{"title":"我为独立开发者开发落地页模板（下）","content":"};\r"},"ship-langding-page-fast2_311":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_312":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_313":{"title":"我为独立开发者开发落地页模板（下）","content":"定义重定向方法\r"},"ship-langding-page-fast2_314":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_315":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_316":{"title":"我为独立开发者开发落地页模板（下）","content":"// middelware.ts\r"},"ship-langding-page-fast2_317":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_318":{"title":"我为独立开发者开发落地页模板（下）","content":"import { locales } from \"@/lib/i18n\";\r"},"ship-langding-page-fast2_319":{"title":"我为独立开发者开发落地页模板（下）","content":"import { NextRequest } from \"next/server\";\r"},"ship-langding-page-fast2_320":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_321":{"title":"我为独立开发者开发落地页模板（下）","content":"export function middleware(request: NextRequest) {\r"},"ship-langding-page-fast2_322":{"title":"我为独立开发者开发落地页模板（下）","content":"  const { pathname } = request.nextUrl;\r"},"ship-langding-page-fast2_323":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_324":{"title":"我为独立开发者开发落地页模板（下）","content":"\t// 如果 url 前缀匹配到了，不进行重定向\r"},"ship-langding-page-fast2_325":{"title":"我为独立开发者开发落地页模板（下）","content":"  const isExit = locales.some(\r"},"ship-langding-page-fast2_326":{"title":"我为独立开发者开发落地页模板（下）","content":"    (locale) =\r"},"ship-langding-page-fast2_327":{"title":"我为独立开发者开发落地页模板（下）","content":"  );\r"},"ship-langding-page-fast2_328":{"title":"我为独立开发者开发落地页模板（下）","content":"  if (isExit) return;\r"},"ship-langding-page-fast2_329":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_330":{"title":"我为独立开发者开发落地页模板（下）","content":"\t// 如果没有匹配到，重定向到根路由\r"},"ship-langding-page-fast2_331":{"title":"我为独立开发者开发落地页模板（下）","content":"  request.nextUrl.pathname = ;\r"},"ship-langding-page-fast2_332":{"title":"我为独立开发者开发落地页模板（下）","content":"  return Response.redirect(request.nextUrl);\r"},"ship-langding-page-fast2_333":{"title":"我为独立开发者开发落地页模板（下）","content":"}\r"},"ship-langding-page-fast2_334":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_335":{"title":"我为独立开发者开发落地页模板（下）","content":"// 中间件过滤掉 _next文件夹、图片等静态资源、api路由\r"},"ship-langding-page-fast2_336":{"title":"我为独立开发者开发落地页模板（下）","content":"export const config = {\r"},"ship-langding-page-fast2_337":{"title":"我为独立开发者开发落地页模板（下）","content":"  matcher: [\"/((?!\\\\.(?:ico|png|svg|jpg|jpeg|xml|txt)$)(?!/api).*)\"],\r"},"ship-langding-page-fast2_338":{"title":"我为独立开发者开发落地页模板（下）","content":"};\r"},"ship-langding-page-fast2_339":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_340":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_341":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_342":{"title":"我为独立开发者开发落地页模板（下）","content":"为了匹配根路由，我们的动态路由不能使用  的格式，要用  的格式，所以目录是这样的：\r"},"ship-langding-page-fast2_343":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_344":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_345":{"title":"我为独立开发者开发落地页模板（下）","content":"├── app\r"},"ship-langding-page-fast2_346":{"title":"我为独立开发者开发落地页模板（下）","content":"│   └── [[...lang]]           动态路由\r"},"ship-langding-page-fast2_347":{"title":"我为独立开发者开发落地页模板（下）","content":"│       └── page.tsx          页面文件\r"},"ship-langding-page-fast2_348":{"title":"我为独立开发者开发落地页模板（下）","content":"│   └── layout.tsx            布局文件\r"},"ship-langding-page-fast2_349":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_350":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_351":{"title":"我为独立开发者开发落地页模板（下）","content":"在动态路由上，布局文件和页面文件都能捕获到 url 动态参数。我们可以根据这个特性，为根布局设置语言：\r"},"ship-langding-page-fast2_352":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_353":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_354":{"title":"我为独立开发者开发落地页模板（下）","content":"// app/layout.tsx\r"},"ship-langding-page-fast2_355":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_356":{"title":"我为独立开发者开发落地页模板（下）","content":"export default async function RootLayout({\r"},"ship-langding-page-fast2_357":{"title":"我为独立开发者开发落地页模板（下）","content":"  children,\r"},"ship-langding-page-fast2_358":{"title":"我为独立开发者开发落地页模板（下）","content":"  params: { lang },\r"},"ship-langding-page-fast2_359":{"title":"我为独立开发者开发落地页模板（下）","content":"}: {\r"},"ship-langding-page-fast2_360":{"title":"我为独立开发者开发落地页模板（下）","content":"  children: React.ReactNode;\r"},"ship-langding-page-fast2_361":{"title":"我为独立开发者开发落地页模板（下）","content":"  params: { lang: string[] | undefined };\r"},"ship-langding-page-fast2_362":{"title":"我为独立开发者开发落地页模板（下）","content":"}) {\r"},"ship-langding-page-fast2_363":{"title":"我为独立开发者开发落地页模板（下）","content":"  return (\r"},"ship-langding-page-fast2_364":{"title":"我为独立开发者开发落地页模板（下）","content":"\t  {//}\r"},"ship-langding-page-fast2_365":{"title":"我为独立开发者开发落地页模板（下）","content":"    <html lang={(lang && lang[0]) || defaultLocale} suppressHydrationWarning"},"ship-langding-page-fast2_366":{"title":"我为独立开发者开发落地页模板（下）","content":"\t\t\t{//}\r"},"ship-langding-page-fast2_367":{"title":"我为独立开发者开发落地页模板（下）","content":"    </html"},"ship-langding-page-fast2_368":{"title":"我为独立开发者开发落地页模板（下）","content":"  );\r"},"ship-langding-page-fast2_369":{"title":"我为独立开发者开发落地页模板（下）","content":"}\r"},"ship-langding-page-fast2_370":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_371":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_372":{"title":"我为独立开发者开发落地页模板（下）","content":"在页面上，用同样的方法判断要显示的语言，然后导入语言配置文件的内容就可以了\r"},"ship-langding-page-fast2_373":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_374":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_375":{"title":"我为独立开发者开发落地页模板（下）","content":"// app/[[..lang]]/page.tsx\r"},"ship-langding-page-fast2_376":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_377":{"title":"我为独立开发者开发落地页模板（下）","content":"import { defaultLocale, getDictionary } from \"@/lib/i18n\";\r"},"ship-langding-page-fast2_378":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_379":{"title":"我为独立开发者开发落地页模板（下）","content":"export default async function LangHome({\r"},"ship-langding-page-fast2_380":{"title":"我为独立开发者开发落地页模板（下）","content":"  params: { lang },\r"},"ship-langding-page-fast2_381":{"title":"我为独立开发者开发落地页模板（下）","content":"}: {\r"},"ship-langding-page-fast2_382":{"title":"我为独立开发者开发落地页模板（下）","content":"  params: { lang: string };\r"},"ship-langding-page-fast2_383":{"title":"我为独立开发者开发落地页模板（下）","content":"}) {\r"},"ship-langding-page-fast2_384":{"title":"我为独立开发者开发落地页模板（下）","content":"  const langName = (lang && lang[0]) || defaultLocale;\r"},"ship-langding-page-fast2_385":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_386":{"title":"我为独立开发者开发落地页模板（下）","content":"  const dict = await getDictionary(langName); // 获取内容\r"},"ship-langding-page-fast2_387":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_388":{"title":"我为独立开发者开发落地页模板（下）","content":"  return (\r"},"ship-langding-page-fast2_389":{"title":"我为独立开发者开发落地页模板（下）","content":"    <"},"ship-langding-page-fast2_390":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_391":{"title":"我为独立开发者开发落地页模板（下）","content":"      <Hero locale={dict.Hero} CTALocale={dict.CTAButton} /"},"ship-langding-page-fast2_392":{"title":"我为独立开发者开发落地页模板（下）","content":"      <SocialProof locale={dict.SocialProof} /"},"ship-langding-page-fast2_393":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_394":{"title":"我为独立开发者开发落地页模板（下）","content":"      <ScrollingLogos /"},"ship-langding-page-fast2_395":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_396":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_397":{"title":"我为独立开发者开发落地页模板（下）","content":"      <Feature id=\"Features\" locale={dict.Feature} langName={langName} /"},"ship-langding-page-fast2_398":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_399":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_400":{"title":"我为独立开发者开发落地页模板（下）","content":"      <Pricing id=\"Pricing\" locale={dict.Pricing} langName={langName} /"},"ship-langding-page-fast2_401":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_402":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_403":{"title":"我为独立开发者开发落地页模板（下）","content":"      <WallOfLove id=\"WallOfLove\" locale={dict.WallOfLove} /"},"ship-langding-page-fast2_404":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_405":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_406":{"title":"我为独立开发者开发落地页模板（下）","content":"      <FAQ id=\"FAQ\" locale={dict.FAQ} langName={langName} /"},"ship-langding-page-fast2_407":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_408":{"title":"我为独立开发者开发落地页模板（下）","content":"      {//}\r"},"ship-langding-page-fast2_409":{"title":"我为独立开发者开发落地页模板（下）","content":"      <CTA locale={dict.CTA} CTALocale={dict.CTAButton} /"},"ship-langding-page-fast2_410":{"title":"我为独立开发者开发落地页模板（下）","content":"    </"},"ship-langding-page-fast2_411":{"title":"我为独立开发者开发落地页模板（下）","content":"  );\r"},"ship-langding-page-fast2_412":{"title":"我为独立开发者开发落地页模板（下）","content":"}\r"},"ship-langding-page-fast2_413":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_414":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_415":{"title":"我为独立开发者开发落地页模板（下）","content":"最后，编写一个语言切换按钮的组件，在 Header 导入就可以\r"},"ship-langding-page-fast2_416":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_417":{"title":"我为独立开发者开发落地页模板（下）","content":"tsx\r"},"ship-langding-page-fast2_418":{"title":"我为独立开发者开发落地页模板（下）","content":"import {\r"},"ship-langding-page-fast2_419":{"title":"我为独立开发者开发落地页模板（下）","content":"  Select,\r"},"ship-langding-page-fast2_420":{"title":"我为独立开发者开发落地页模板（下）","content":"  SelectContent,\r"},"ship-langding-page-fast2_421":{"title":"我为独立开发者开发落地页模板（下）","content":"  SelectItem,\r"},"ship-langding-page-fast2_422":{"title":"我为独立开发者开发落地页模板（下）","content":"  SelectTrigger,\r"},"ship-langding-page-fast2_423":{"title":"我为独立开发者开发落地页模板（下）","content":"  SelectValue,\r"},"ship-langding-page-fast2_424":{"title":"我为独立开发者开发落地页模板（下）","content":"} from \"@/components/ui/select\";\r"},"ship-langding-page-fast2_425":{"title":"我为独立开发者开发落地页模板（下）","content":"import { useParams, useRouter } from \"next/navigation\";\r"},"ship-langding-page-fast2_426":{"title":"我为独立开发者开发落地页模板（下）","content":"import { defaultLocale, localeNames } from \"@/lib/i18n\";\r"},"ship-langding-page-fast2_427":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_428":{"title":"我为独立开发者开发落地页模板（下）","content":"export const LangSwitcher = () =\r"},"ship-langding-page-fast2_429":{"title":"我为独立开发者开发落地页模板（下）","content":"  const params = useParams();\r"},"ship-langding-page-fast2_430":{"title":"我为独立开发者开发落地页模板（下）","content":"  const lang = (params.lang && params.lang[0]) || defaultLocale;\r"},"ship-langding-page-fast2_431":{"title":"我为独立开发者开发落地页模板（下）","content":"  const router = useRouter();\r"},"ship-langding-page-fast2_432":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_433":{"title":"我为独立开发者开发落地页模板（下）","content":"  const handleSwitchLanguage = (value: string) =\r"},"ship-langding-page-fast2_434":{"title":"我为独立开发者开发落地页模板（下）","content":"\t  // 如果选择的是默认语言，则 url 不要语言前缀\r"},"ship-langding-page-fast2_435":{"title":"我为独立开发者开发落地页模板（下）","content":"    if (value === defaultLocale) {\r"},"ship-langding-page-fast2_436":{"title":"我为独立开发者开发落地页模板（下）","content":"      router.push(\"/\");\r"},"ship-langding-page-fast2_437":{"title":"我为独立开发者开发落地页模板（下）","content":"      return;\r"},"ship-langding-page-fast2_438":{"title":"我为独立开发者开发落地页模板（下）","content":"    }\r"},"ship-langding-page-fast2_439":{"title":"我为独立开发者开发落地页模板（下）","content":"    router.push(value);\r"},"ship-langding-page-fast2_440":{"title":"我为独立开发者开发落地页模板（下）","content":"  };\r"},"ship-langding-page-fast2_441":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_442":{"title":"我为独立开发者开发落地页模板（下）","content":"  return (\r"},"ship-langding-page-fast2_443":{"title":"我为独立开发者开发落地页模板（下）","content":"    <Select value={lang} onValueChange={handleSwitchLanguage}"},"ship-langding-page-fast2_444":{"title":"我为独立开发者开发落地页模板（下）","content":"      <SelectTrigger className=\"w-fit\""},"ship-langding-page-fast2_445":{"title":"我为独立开发者开发落地页模板（下）","content":"        <SelectValue placeholder=\"Language\" /"},"ship-langding-page-fast2_446":{"title":"我为独立开发者开发落地页模板（下）","content":"      </SelectTrigger"},"ship-langding-page-fast2_447":{"title":"我为独立开发者开发落地页模板（下）","content":"      <SelectContent"},"ship-langding-page-fast2_448":{"title":"我为独立开发者开发落地页模板（下）","content":"        {Object.keys(localeNames).map((key: string) =\r"},"ship-langding-page-fast2_449":{"title":"我为独立开发者开发落地页模板（下）","content":"          const name = localeNames[key];\r"},"ship-langding-page-fast2_450":{"title":"我为独立开发者开发落地页模板（下）","content":"          return (\r"},"ship-langding-page-fast2_451":{"title":"我为独立开发者开发落地页模板（下）","content":"            <SelectItem className=\"cursor-pointer\" key={key} value={key}"},"ship-langding-page-fast2_452":{"title":"我为独立开发者开发落地页模板（下）","content":"              {name}\r"},"ship-langding-page-fast2_453":{"title":"我为独立开发者开发落地页模板（下）","content":"            </SelectItem"},"ship-langding-page-fast2_454":{"title":"我为独立开发者开发落地页模板（下）","content":"          );\r"},"ship-langding-page-fast2_455":{"title":"我为独立开发者开发落地页模板（下）","content":"        })}\r"},"ship-langding-page-fast2_456":{"title":"我为独立开发者开发落地页模板（下）","content":"      </SelectContent"},"ship-langding-page-fast2_457":{"title":"我为独立开发者开发落地页模板（下）","content":"    </Select"},"ship-langding-page-fast2_458":{"title":"我为独立开发者开发落地页模板（下）","content":"  );\r"},"ship-langding-page-fast2_459":{"title":"我为独立开发者开发落地页模板（下）","content":"};\r"},"ship-langding-page-fast2_460":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_461":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_462":{"title":"我为独立开发者开发落地页模板（下）","content":"国际化配置大功告成。\r"},"ship-langding-page-fast2_463":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_464":{"title":"我为独立开发者开发落地页模板（下）","content":"结语\r"},"ship-langding-page-fast2_465":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_466":{"title":"我为独立开发者开发落地页模板（下）","content":"【我为独立开发者开发通用落地页模板】系列是一名前端工程师学习产品设计与UI设计的一次尝试，我个人的目标是通过这样的尝试让自己成为一名合格的「产品工程师」，而这次指定实践场景的自我训练也确实让我获益良多。\r"},"ship-langding-page-fast2_467":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_468":{"title":"我为独立开发者开发落地页模板（下）","content":"本文讲解的落地页设计仅是抛砖引玉，如果有更好的产品设计或者UI设计，欢迎留言和提pr。\r"},"ship-langding-page-fast2_469":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_470":{"title":"我为独立开发者开发落地页模板（下）","content":"相关链接：\r"},"ship-langding-page-fast2_471":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_472":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_473":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_474":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_475":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_476":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_477":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_478":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_479":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_480":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_481":{"title":"我为独立开发者开发落地页模板（下）","content":"关于我\r"},"ship-langding-page-fast2_482":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_483":{"title":"我为独立开发者开发落地页模板（下）","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"ship-langding-page-fast2_484":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_485":{"title":"我为独立开发者开发落地页模板（下）","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"ship-langding-page-fast2_486":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_487":{"title":"我为独立开发者开发落地页模板（下）","content":"欢迎在以下平台关注我：\r"},"ship-langding-page-fast2_488":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast2_489":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_490":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_491":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_492":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_493":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_494":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_495":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_496":{"title":"我为独立开发者开发落地页模板（下）","content":"- : 「BigYe程普」\r"},"ship-langding-page-fast2_497":{"title":"我为独立开发者开发落地页模板（下）","content":"- : \r"},"ship-langding-page-fast2_498":{"title":"我为独立开发者开发落地页模板（下）","content":"\r"},"ship-langding-page-fast1":{"title":"我为独立开发者开发落地页模板（上）","content":"我为独立开发者开发落地页模板（上）","display":"\r"},"ship-langding-page-fast1_0":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_1":{"title":"我为独立开发者开发落地页模板（上）","content":"前段时间，收到一个这样的 issues：\r"},"ship-langding-page-fast1_2":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_3":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_4":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_5":{"title":"我为独立开发者开发落地页模板（上）","content":"我的第一反应是，不同产品、不同阶段的落地页展示的侧重点差异大，很难有一个适用大多数场景的模板。\r"},"ship-langding-page-fast1_6":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_7":{"title":"我为独立开发者开发落地页模板（上）","content":"几天后再打开这个 issues，又想到落地页的核心作用是介绍产品、吸引用户使用产品，那么应该是有共性的。于是我去找了一些落地页分析，果然，虽然大家的落地页设计不同、布局不同，但围绕着“介绍产品、吸引用户”的需求，每个落地页的整体框架是类似的，就是像下面这个图一样：\r"},"ship-langding-page-fast1_8":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_9":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_10":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_11":{"title":"我为独立开发者开发落地页模板（上）","content":"我觉得可以根据这个整体框架，设计一个通用的落地页模板。我给这个模板的定位是：可以让80%的人修改文字和图片即可发布自己的落地页，另外20%的人可以根据自己产品调性、设计喜好手动修改代码完成自己的落地页。\r"},"ship-langding-page-fast1_12":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_13":{"title":"我为独立开发者开发落地页模板（上）","content":"本教程分介绍：\r"},"ship-langding-page-fast1_14":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_15":{"title":"我为独立开发者开发落地页模板（上）","content":"第一篇（本文）：项目搭建和基础配置集成\r"},"ship-langding-page-fast1_16":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_17":{"title":"我为独立开发者开发落地页模板（上）","content":"第二篇：落地页内容开发\r"},"ship-langding-page-fast1_18":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_19":{"title":"我为独立开发者开发落地页模板（上）","content":"学完本教程你可以学到：\r"},"ship-langding-page-fast1_20":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_21":{"title":"我为独立开发者开发落地页模板（上）","content":"- 更合理的 Next.js 项目结构设计（第一篇）\r"},"ship-langding-page-fast1_22":{"title":"我为独立开发者开发落地页模板（上）","content":"- 网站信息统一配置（第一篇）\r"},"ship-langding-page-fast1_23":{"title":"我为独立开发者开发落地页模板（上）","content":"- 百度统计、谷歌分析的集成（第一篇）\r"},"ship-langding-page-fast1_24":{"title":"我为独立开发者开发落地页模板（上）","content":"- Shadcn/ui 的使用（第一篇）\r"},"ship-langding-page-fast1_25":{"title":"我为独立开发者开发落地页模板（上）","content":"- 落地页的核心内容设计和开发（第二篇）\r"},"ship-langding-page-fast1_26":{"title":"我为独立开发者开发落地页模板（上）","content":"- 多语言支持（第二篇）\r"},"ship-langding-page-fast1_27":{"title":"我为独立开发者开发落地页模板（上）","content":"- 暗黑模式支持（第二篇）\r"},"ship-langding-page-fast1_28":{"title":"我为独立开发者开发落地页模板（上）","content":"- 用 framer-motion 实现内容动画（第二篇）\r"},"ship-langding-page-fast1_29":{"title":"我为独立开发者开发落地页模板（上）","content":"- 为你的工作流增加几个实用工具（两篇都有）\r"},"ship-langding-page-fast1_30":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_31":{"title":"我为独立开发者开发落地页模板（上）","content":"本项目已开源，欢迎fork，感谢star🌟：https://github.com/weijunext/landing-page-boilerplate\r"},"ship-langding-page-fast1_32":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_33":{"title":"我为独立开发者开发落地页模板（上）","content":"开始搭建项目\r"},"ship-langding-page-fast1_34":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_35":{"title":"我为独立开发者开发落地页模板（上）","content":"我曾经说过：重复的劳动是对程序员的亵渎。\r"},"ship-langding-page-fast1_36":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_37":{"title":"我为独立开发者开发落地页模板（上）","content":"所以，我不再从0创建项目，我用自己发布的开源项目—— 进行初始化项目，用法如下：\r"},"ship-langding-page-fast1_38":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_39":{"title":"我为独立开发者开发落地页模板（上）","content":"打开👉，通过  创建项目\r"},"ship-langding-page-fast1_40":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_41":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_42":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_43":{"title":"我为独立开发者开发落地页模板（上）","content":"default 分支是一个0集成的模板，只提供了最基础的布局。\r"},"ship-langding-page-fast1_44":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_45":{"title":"我为独立开发者开发落地页模板（上）","content":"创建完项目后，clone 到本地，项目文件夹结构是这样的：\r"},"ship-langding-page-fast1_46":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_47":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_48":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ app             应用入口\r"},"ship-langding-page-fast1_49":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ layout.tsx\r"},"ship-langding-page-fast1_50":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ page.tsx\r"},"ship-langding-page-fast1_51":{"title":"我为独立开发者开发落地页模板（上）","content":"│  └─ sitemap.ts\r"},"ship-langding-page-fast1_52":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ components      组件\r"},"ship-langding-page-fast1_53":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ ……\r"},"ship-langding-page-fast1_54":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ config          网站配置\r"},"ship-langding-page-fast1_55":{"title":"我为独立开发者开发落地页模板（上）","content":"│  └─ site.ts\r"},"ship-langding-page-fast1_56":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ lib             公共工具类\r"},"ship-langding-page-fast1_57":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ ……\r"},"ship-langding-page-fast1_58":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ public          公共静态资源\r"},"ship-langding-page-fast1_59":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ ……\r"},"ship-langding-page-fast1_60":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ styles          样式\r"},"ship-langding-page-fast1_61":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ ……\r"},"ship-langding-page-fast1_62":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ types           ts类型定义\r"},"ship-langding-page-fast1_63":{"title":"我为独立开发者开发落地页模板（上）","content":"│  ├─ ……\r"},"ship-langding-page-fast1_64":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ .editorconfig\r"},"ship-langding-page-fast1_65":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ .env.example\r"},"ship-langding-page-fast1_66":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ .env.local\r"},"ship-langding-page-fast1_67":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ .eslintrc.json\r"},"ship-langding-page-fast1_68":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ .gitignore\r"},"ship-langding-page-fast1_69":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ components.json\r"},"ship-langding-page-fast1_70":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ next-env.d.ts\r"},"ship-langding-page-fast1_71":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ next.config.mjs\r"},"ship-langding-page-fast1_72":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ package-lock.json\r"},"ship-langding-page-fast1_73":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ package.json\r"},"ship-langding-page-fast1_74":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ postcss.config.js\r"},"ship-langding-page-fast1_75":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ README-zh.md\r"},"ship-langding-page-fast1_76":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ README.md\r"},"ship-langding-page-fast1_77":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ tailwind.config.ts\r"},"ship-langding-page-fast1_78":{"title":"我为独立开发者开发落地页模板（上）","content":"├─ tsconfig.json\r"},"ship-langding-page-fast1_79":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_80":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_81":{"title":"我为独立开发者开发落地页模板（上）","content":"文件夹结构依次划分了页面入口、组件、网站配置、工具类、静态资源、样式、类型定义等分类，看起来很繁琐，但这绝对是高可拓展的项目结构最佳实践。\r"},"ship-langding-page-fast1_82":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_83":{"title":"我为独立开发者开发落地页模板（上）","content":"项目启动后可以看到首页如下：\r"},"ship-langding-page-fast1_84":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_85":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_86":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_87":{"title":"我为独立开发者开发落地页模板（上）","content":"这是一个典型的上中下结构的设计。Header 和 Footer 都用简约的风格，并且是响应式设计，启动模板已经把 Header 和 Footer 显示的外链抽离到项目配置文件，如果你认可这样的设计，那么你只需要修改配置文件  就可以完成自己项目的 Header 和 Footer。\r"},"ship-langding-page-fast1_88":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_89":{"title":"我为独立开发者开发落地页模板（上）","content":"目前，这套 Header 和 Footer 已经成为我的产品的默认设计了。\r"},"ship-langding-page-fast1_90":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_91":{"title":"我为独立开发者开发落地页模板（上）","content":"网站信息统一配置\r"},"ship-langding-page-fast1_92":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_93":{"title":"我为独立开发者开发落地页模板（上）","content":"把这套模板修改成自己网站的第一步就是修改配置文件 ，你需要把自己网站的信息填充进去。\r"},"ship-langding-page-fast1_94":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_95":{"title":"我为独立开发者开发落地页模板（上）","content":"重要的配置含义看下面的代码注释：\r"},"ship-langding-page-fast1_96":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_97":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_98":{"title":"我为独立开发者开发落地页模板（上）","content":"import { SiteConfig } from \"@/types/siteConfig\";\r"},"ship-langding-page-fast1_99":{"title":"我为独立开发者开发落地页模板（上）","content":"import { BsGithub, BsTwitterX, BsWechat } from \"react-icons/bs\";\r"},"ship-langding-page-fast1_100":{"title":"我为独立开发者开发落地页模板（上）","content":"import { MdEmail } from \"react-icons/md\";\r"},"ship-langding-page-fast1_101":{"title":"我为独立开发者开发落地页模板（上）","content":"import { SiBuymeacoffee, SiJuejin } from \"react-icons/si\";\r"},"ship-langding-page-fast1_102":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_103":{"title":"我为独立开发者开发落地页模板（上）","content":"const baseSiteConfig = {\r"},"ship-langding-page-fast1_104":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 网站名称\r"},"ship-langding-page-fast1_105":{"title":"我为独立开发者开发落地页模板（上）","content":"  name: \"Landing page boilerplate\",\r"},"ship-langding-page-fast1_106":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 网站描述\r"},"ship-langding-page-fast1_107":{"title":"我为独立开发者开发落地页模板（上）","content":"  description:\r"},"ship-langding-page-fast1_108":{"title":"我为独立开发者开发落地页模板（上）","content":"    \"A versatile landing page boilerplate, ideal for various projects and marketing campaigns.\",\r"},"ship-langding-page-fast1_109":{"title":"我为独立开发者开发落地页模板（上）","content":"  // 网站地址\r"},"ship-langding-page-fast1_110":{"title":"我为独立开发者开发落地页模板（上）","content":"\turl: \"https://landingpage.weijunext.com\",\r"},"ship-langding-page-fast1_111":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// og是社交媒体上可展示的图片，如果没有专门设计og，也建议截图一张页面\r"},"ship-langding-page-fast1_112":{"title":"我为独立开发者开发落地页模板（上）","content":"  ogImage: \"https://landingpage.weijunext.com/og.png\",\r"},"ship-langding-page-fast1_113":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 设置 metadata 字段前缀，默认是根目录\r"},"ship-langding-page-fast1_114":{"title":"我为独立开发者开发落地页模板（上）","content":"  metadataBase: new URL(\"/\"),\r"},"ship-langding-page-fast1_115":{"title":"我为独立开发者开发落地页模板（上）","content":"  keywords: [\"landing page boilerplate\", \"landing page template\", \"awesome landing page\", \"next.js landing page\"],\r"},"ship-langding-page-fast1_116":{"title":"我为独立开发者开发落地页模板（上）","content":"  authors: [\r"},"ship-langding-page-fast1_117":{"title":"我为独立开发者开发落地页模板（上）","content":"    {\r"},"ship-langding-page-fast1_118":{"title":"我为独立开发者开发落地页模板（上）","content":"      name: \"weijunext\",\r"},"ship-langding-page-fast1_119":{"title":"我为独立开发者开发落地页模板（上）","content":"      url: \"https://weijunext.com\",\r"},"ship-langding-page-fast1_120":{"title":"我为独立开发者开发落地页模板（上）","content":"      twitter: 'https://twitter.com/weijunext',\r"},"ship-langding-page-fast1_121":{"title":"我为独立开发者开发落地页模板（上）","content":"    }\r"},"ship-langding-page-fast1_122":{"title":"我为独立开发者开发落地页模板（上）","content":"  ],\r"},"ship-langding-page-fast1_123":{"title":"我为独立开发者开发落地页模板（上）","content":"  creator: '@weijunext',\r"},"ship-langding-page-fast1_124":{"title":"我为独立开发者开发落地页模板（上）","content":"  themeColor: '#fff',\r"},"ship-langding-page-fast1_125":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 图标\r"},"ship-langding-page-fast1_126":{"title":"我为独立开发者开发落地页模板（上）","content":"  icons: {\r"},"ship-langding-page-fast1_127":{"title":"我为独立开发者开发落地页模板（上）","content":"    icon: \"/favicon.ico\",\r"},"ship-langding-page-fast1_128":{"title":"我为独立开发者开发落地页模板（上）","content":"    shortcut: \"/favicon-16x16.png\",\r"},"ship-langding-page-fast1_129":{"title":"我为独立开发者开发落地页模板（上）","content":"    apple: \"/apple-touch-icon.png\",\r"},"ship-langding-page-fast1_130":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_131":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// Header 上的外链信息\r"},"ship-langding-page-fast1_132":{"title":"我为独立开发者开发落地页模板（上）","content":"  headerLinks: [\r"},"ship-langding-page-fast1_133":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'repo', href: \"https://github.com/weijunext/landing-page-boilerplate\", icon: BsGithub },\r"},"ship-langding-page-fast1_134":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'twitter', href: \"https://twitter.com/weijunext\", icon: BsTwitterX },\r"},"ship-langding-page-fast1_135":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'buyMeCoffee', href: \"https://www.buymeacoffee.com/weijunext\", icon: SiBuymeacoffee }\r"},"ship-langding-page-fast1_136":{"title":"我为独立开发者开发落地页模板（上）","content":"  ],\r"},"ship-langding-page-fast1_137":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// Footer 上的联系信息\r"},"ship-langding-page-fast1_138":{"title":"我为独立开发者开发落地页模板（上）","content":"  footerLinks: [\r"},"ship-langding-page-fast1_139":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'email', href: \"mailto:weijunext@gmail.com\", icon: MdEmail },\r"},"ship-langding-page-fast1_140":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'twitter', href: \"https://twitter.com/weijunext\", icon: BsTwitterX },\r"},"ship-langding-page-fast1_141":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'github', href: \"https://github.com/weijunext/\", icon: BsGithub },\r"},"ship-langding-page-fast1_142":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'buyMeCoffee', href: \"https://www.buymeacoffee.com/weijunext\", icon: SiBuymeacoffee },\r"},"ship-langding-page-fast1_143":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'juejin', href: \"https://juejin.cn/user/26044008768029\", icon: SiJuejin },\r"},"ship-langding-page-fast1_144":{"title":"我为独立开发者开发落地页模板（上）","content":"    { name: 'weChat', href: \"/make-a-friend\", icon: BsWechat }\r"},"ship-langding-page-fast1_145":{"title":"我为独立开发者开发落地页模板（上）","content":"  ],\r"},"ship-langding-page-fast1_146":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// Footer 上的个人产品链接\r"},"ship-langding-page-fast1_147":{"title":"我为独立开发者开发落地页模板（上）","content":"  footerProducts: [\r"},"ship-langding-page-fast1_148":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://weijunext.com/', name: 'J实验室' },\r"},"ship-langding-page-fast1_149":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://githubbio.com', name: 'Github Bio Generator' },\r"},"ship-langding-page-fast1_150":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://smartexcel.cc/', name: 'Smart Excel' },\r"},"ship-langding-page-fast1_151":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://landingpage.weijunext.com/', name: 'Landing Page Boilerplate' },\r"},"ship-langding-page-fast1_152":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://starter.weijunext.com/', name: 'Next.js Starter' },\r"},"ship-langding-page-fast1_153":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://nextjs.weijunext.com/', name: 'Next.js Practice' },\r"},"ship-langding-page-fast1_154":{"title":"我为独立开发者开发落地页模板（上）","content":"    { url: 'https://github.com/weijunext/indie-hacker-tools', name: 'Indie Hacker Tools' },\r"},"ship-langding-page-fast1_155":{"title":"我为独立开发者开发落地页模板（上）","content":"  ]\r"},"ship-langding-page-fast1_156":{"title":"我为独立开发者开发落地页模板（上）","content":"}\r"},"ship-langding-page-fast1_157":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_158":{"title":"我为独立开发者开发落地页模板（上）","content":"export const siteConfig: SiteConfig = {\r"},"ship-langding-page-fast1_159":{"title":"我为独立开发者开发落地页模板（上）","content":"  ...baseSiteConfig,\r"},"ship-langding-page-fast1_160":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 配置了 openGraph 和 twitter，当用户在社交媒体和消息应用程序上\r"},"ship-langding-page-fast1_161":{"title":"我为独立开发者开发落地页模板（上）","content":"\t// 分享指向你的网站时，链接会显示你在配置的图像。\r"},"ship-langding-page-fast1_162":{"title":"我为独立开发者开发落地页模板（上）","content":"  openGraph: {\r"},"ship-langding-page-fast1_163":{"title":"我为独立开发者开发落地页模板（上）","content":"    type: \"website\",\r"},"ship-langding-page-fast1_164":{"title":"我为独立开发者开发落地页模板（上）","content":"    locale: \"en_US\",\r"},"ship-langding-page-fast1_165":{"title":"我为独立开发者开发落地页模板（上）","content":"    url: baseSiteConfig.url,\r"},"ship-langding-page-fast1_166":{"title":"我为独立开发者开发落地页模板（上）","content":"    title: baseSiteConfig.name,\r"},"ship-langding-page-fast1_167":{"title":"我为独立开发者开发落地页模板（上）","content":"    description: baseSiteConfig.description,\r"},"ship-langding-page-fast1_168":{"title":"我为独立开发者开发落地页模板（上）","content":"    siteName: baseSiteConfig.name,\r"},"ship-langding-page-fast1_169":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_170":{"title":"我为独立开发者开发落地页模板（上）","content":"  twitter: {\r"},"ship-langding-page-fast1_171":{"title":"我为独立开发者开发落地页模板（上）","content":"    card: \"summaryimage\",\r"},"ship-langding-page-fast1_172":{"title":"我为独立开发者开发落地页模板（上）","content":"    title: baseSiteConfig.name,\r"},"ship-langding-page-fast1_173":{"title":"我为独立开发者开发落地页模板（上）","content":"    description: baseSiteConfig.description,\r"},"ship-langding-page-fast1_174":{"title":"我为独立开发者开发落地页模板（上）","content":"    images: [],\r"},"ship-langding-page-fast1_175":{"title":"我为独立开发者开发落地页模板（上）","content":"    creator: baseSiteConfig.creator,\r"},"ship-langding-page-fast1_176":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_177":{"title":"我为独立开发者开发落地页模板（上）","content":"}\r"},"ship-langding-page-fast1_178":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_179":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_180":{"title":"我为独立开发者开发落地页模板（上）","content":"修改网站 logo、\r"},"ship-langding-page-fast1_181":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_182":{"title":"我为独立开发者开发落地页模板（上）","content":"1. 依次替换掉 public 文件夹下的图片资源，也可以等到网站开发完成再替换\r"},"ship-langding-page-fast1_183":{"title":"我为独立开发者开发落地页模板（上）","content":"2. 更新  文件，其中网站填你自己的网站：\r"},"ship-langding-page-fast1_184":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_185":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_186":{"title":"我为独立开发者开发落地页模板（上）","content":"    *\r"},"ship-langding-page-fast1_187":{"title":"我为独立开发者开发落地页模板（上）","content":"    User-agent: *\r"},"ship-langding-page-fast1_188":{"title":"我为独立开发者开发落地页模板（上）","content":"    Allow: /\r"},"ship-langding-page-fast1_189":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_190":{"title":"我为独立开发者开发落地页模板（上）","content":"    AhrefsBot\r"},"ship-langding-page-fast1_191":{"title":"我为独立开发者开发落地页模板（上）","content":"    User-agent: AhrefsBot\r"},"ship-langding-page-fast1_192":{"title":"我为独立开发者开发落地页模板（上）","content":"    Disallow: /\r"},"ship-langding-page-fast1_193":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_194":{"title":"我为独立开发者开发落地页模板（上）","content":"    SemrushBot\r"},"ship-langding-page-fast1_195":{"title":"我为独立开发者开发落地页模板（上）","content":"    User-agent: SemrushBot\r"},"ship-langding-page-fast1_196":{"title":"我为独立开发者开发落地页模板（上）","content":"    Disallow: /\r"},"ship-langding-page-fast1_197":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_198":{"title":"我为独立开发者开发落地页模板（上）","content":"    MJ12bot\r"},"ship-langding-page-fast1_199":{"title":"我为独立开发者开发落地页模板（上）","content":"    User-agent: MJ12bot\r"},"ship-langding-page-fast1_200":{"title":"我为独立开发者开发落地页模板（上）","content":"    Disallow: /\r"},"ship-langding-page-fast1_201":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_202":{"title":"我为独立开发者开发落地页模板（上）","content":"    DotBot\r"},"ship-langding-page-fast1_203":{"title":"我为独立开发者开发落地页模板（上）","content":"    User-agent: DotBot\r"},"ship-langding-page-fast1_204":{"title":"我为独立开发者开发落地页模板（上）","content":"    Disallow: /\r"},"ship-langding-page-fast1_205":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_206":{"title":"我为独立开发者开发落地页模板（上）","content":"    Host\r"},"ship-langding-page-fast1_207":{"title":"我为独立开发者开发落地页模板（上）","content":"    Host: https://landingpage.weijunext.com\r"},"ship-langding-page-fast1_208":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_209":{"title":"我为独立开发者开发落地页模板（上）","content":"    Sitemaps\r"},"ship-langding-page-fast1_210":{"title":"我为独立开发者开发落地页模板（上）","content":"    Sitemap: https://landingpage.weijunext.com/sitemap.xml\r"},"ship-langding-page-fast1_211":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_212":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_213":{"title":"我为独立开发者开发落地页模板（上）","content":"    这里的配置已经过滤掉一些常见的无效爬虫了。\r"},"ship-langding-page-fast1_214":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_215":{"title":"我为独立开发者开发落地页模板（上）","content":"3. 修改  文件，因为落地页只有一个页面，所以我们不需要复杂的 sitemap 自动化配置，只要手动写一个链接就可以：\r"},"ship-langding-page-fast1_216":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_217":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_218":{"title":"我为独立开发者开发落地页模板（上）","content":"    import { MetadataRoute } from 'next'\r"},"ship-langding-page-fast1_219":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_220":{"title":"我为独立开发者开发落地页模板（上）","content":"    export default function sitemap(): MetadataRoute.Sitemap {\r"},"ship-langding-page-fast1_221":{"title":"我为独立开发者开发落地页模板（上）","content":"      return [\r"},"ship-langding-page-fast1_222":{"title":"我为独立开发者开发落地页模板（上）","content":"        {\r"},"ship-langding-page-fast1_223":{"title":"我为独立开发者开发落地页模板（上）","content":"          url: 'https://landingpage.weijunext.com',\r"},"ship-langding-page-fast1_224":{"title":"我为独立开发者开发落地页模板（上）","content":"          lastModified: new Date(),\r"},"ship-langding-page-fast1_225":{"title":"我为独立开发者开发落地页模板（上）","content":"          changeFrequency: 'daily',\r"},"ship-langding-page-fast1_226":{"title":"我为独立开发者开发落地页模板（上）","content":"          priority: 0.5,\r"},"ship-langding-page-fast1_227":{"title":"我为独立开发者开发落地页模板（上）","content":"        },\r"},"ship-langding-page-fast1_228":{"title":"我为独立开发者开发落地页模板（上）","content":"      ]\r"},"ship-langding-page-fast1_229":{"title":"我为独立开发者开发落地页模板（上）","content":"    }\r"},"ship-langding-page-fast1_230":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_231":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_232":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_233":{"title":"我为独立开发者开发落地页模板（上）","content":"集成百度统计、谷歌分析\r"},"ship-langding-page-fast1_234":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_235":{"title":"我为独立开发者开发落地页模板（上）","content":"为什么建议一开始就集成数据统计呢？因为网站上线后，我们需要了解网站流量来源、分析用户行为等，有了数据才能驱动我们决策更新，百度统计和谷歌分析正好可以为我们提供这方面的数据。\r"},"ship-langding-page-fast1_236":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_237":{"title":"我为独立开发者开发落地页模板（上）","content":"集成百度统计\r"},"ship-langding-page-fast1_238":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_239":{"title":"我为独立开发者开发落地页模板（上）","content":"1. 登录百度统计官网：https://tongji.baidu.com/\r"},"ship-langding-page-fast1_240":{"title":"我为独立开发者开发落地页模板（上）","content":"2. 进入使用设置，新增网站\r"},"ship-langding-page-fast1_241":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_242":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_243":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_244":{"title":"我为独立开发者开发落地页模板（上）","content":"3. 填写网站信息\r"},"ship-langding-page-fast1_245":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_246":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_247":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_248":{"title":"我为独立开发者开发落地页模板（上）","content":"4. 获取统计代码。\r"},"ship-langding-page-fast1_249":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_250":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_251":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_252":{"title":"我为独立开发者开发落地页模板（上）","content":"5. 在 app 文件夹下新建文件 ：\r"},"ship-langding-page-fast1_253":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_254":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_255":{"title":"我为独立开发者开发落地页模板（上）","content":"    \"use client\";\r"},"ship-langding-page-fast1_256":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_257":{"title":"我为独立开发者开发落地页模板（上）","content":"    import Script from \"next/script\";\r"},"ship-langding-page-fast1_258":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_259":{"title":"我为独立开发者开发落地页模板（上）","content":"    const BaiDuAnalytics = () =\r"},"ship-langding-page-fast1_260":{"title":"我为独立开发者开发落地页模板（上）","content":"      return (\r"},"ship-langding-page-fast1_261":{"title":"我为独立开发者开发落地页模板（上）","content":"        <"},"ship-langding-page-fast1_262":{"title":"我为独立开发者开发落地页模板（上）","content":"          {process.env.NEXTBAIDU_TONGJI ? (\r"},"ship-langding-page-fast1_263":{"title":"我为独立开发者开发落地页模板（上）","content":"            <"},"ship-langding-page-fast1_264":{"title":"我为独立开发者开发落地页模板（上）","content":"              <Script\r"},"ship-langding-page-fast1_265":{"title":"我为独立开发者开发落地页模板（上）","content":"                id=\"baidu-tongji\"\r"},"ship-langding-page-fast1_266":{"title":"我为独立开发者开发落地页模板（上）","content":"                strategy=\"afterInteractive\"\r"},"ship-langding-page-fast1_267":{"title":"我为独立开发者开发落地页模板（上）","content":"                dangerouslySetInnerHTML={{\r"},"ship-langding-page-fast1_268":{"title":"我为独立开发者开发落地页模板（上）","content":"                  html: `\r"},"ship-langding-page-fast1_269":{"title":"我为独立开发者开发落地页模板（上）","content":"                  var hmt || [];\r"},"ship-langding-page-fast1_270":{"title":"我为独立开发者开发落地页模板（上）","content":"                  (function() {\r"},"ship-langding-page-fast1_271":{"title":"我为独立开发者开发落地页模板（上）","content":"                    var hm = document.createElement(\"script\");\r"},"ship-langding-page-fast1_272":{"title":"我为独立开发者开发落地页模板（上）","content":"                    hm.src = \"https://hm.baidu.com/hm.js?${process.env.NEXTBAIDU_TONGJI}\";\r"},"ship-langding-page-fast1_273":{"title":"我为独立开发者开发落地页模板（上）","content":"                    var s = document.getElementsByTagName(\"script\")[0]; \r"},"ship-langding-page-fast1_274":{"title":"我为独立开发者开发落地页模板（上）","content":"                    s.parentNode.insertBefore(hm, s);\r"},"ship-langding-page-fast1_275":{"title":"我为独立开发者开发落地页模板（上）","content":"                  })();\r"},"ship-langding-page-fast1_276":{"title":"我为独立开发者开发落地页模板（上）","content":"                `,\r"},"ship-langding-page-fast1_277":{"title":"我为独立开发者开发落地页模板（上）","content":"                }}\r"},"ship-langding-page-fast1_278":{"title":"我为独立开发者开发落地页模板（上）","content":"              /"},"ship-langding-page-fast1_279":{"title":"我为独立开发者开发落地页模板（上）","content":"            </"},"ship-langding-page-fast1_280":{"title":"我为独立开发者开发落地页模板（上）","content":"          ) : (\r"},"ship-langding-page-fast1_281":{"title":"我为独立开发者开发落地页模板（上）","content":"            <></"},"ship-langding-page-fast1_282":{"title":"我为独立开发者开发落地页模板（上）","content":"          )}\r"},"ship-langding-page-fast1_283":{"title":"我为独立开发者开发落地页模板（上）","content":"        </"},"ship-langding-page-fast1_284":{"title":"我为独立开发者开发落地页模板（上）","content":"      );\r"},"ship-langding-page-fast1_285":{"title":"我为独立开发者开发落地页模板（上）","content":"    };\r"},"ship-langding-page-fast1_286":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_287":{"title":"我为独立开发者开发落地页模板（上）","content":"    export default BaiDuAnalytics;\r"},"ship-langding-page-fast1_288":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_289":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_290":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_291":{"title":"我为独立开发者开发落地页模板（上）","content":"6. 在 .env 或 .env.local 文件里添加环境变量：\r"},"ship-langding-page-fast1_292":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_293":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_294":{"title":"我为独立开发者开发落地页模板（上）","content":"    NEXTBAIDU_TONGJI=xxxxx\r"},"ship-langding-page-fast1_295":{"title":"我为独立开发者开发落地页模板（上）","content":"    xxxxx 是第4步获取的统计id\r"},"ship-langding-page-fast1_296":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_297":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_298":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_299":{"title":"我为独立开发者开发落地页模板（上）","content":"集成谷歌分析\r"},"ship-langding-page-fast1_300":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_301":{"title":"我为独立开发者开发落地页模板（上）","content":"1. 登录谷歌分析官网：https://analytics.google.com/analytics/web\r"},"ship-langding-page-fast1_302":{"title":"我为独立开发者开发落地页模板（上）","content":"2. 依次创建账号(如果还没创建)和媒体资源\r"},"ship-langding-page-fast1_303":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_304":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_305":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_306":{"title":"我为独立开发者开发落地页模板（上）","content":"3. 依次填写网站信息，获取统计id\r"},"ship-langding-page-fast1_307":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_308":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_309":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_310":{"title":"我为独立开发者开发落地页模板（上）","content":"4. 在项目根目录创建 \r"},"ship-langding-page-fast1_311":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_312":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_313":{"title":"我为独立开发者开发落地页模板（上）","content":"    export const GAID = process.env.NEXTGOOGLE_ID || null;\r"},"ship-langding-page-fast1_314":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_315":{"title":"我为独立开发者开发落地页模板（上）","content":"    export const pageview = (url) =\r"},"ship-langding-page-fast1_316":{"title":"我为独立开发者开发落地页模板（上）","content":"      window.gtag(\"config\", GAID, {\r"},"ship-langding-page-fast1_317":{"title":"我为独立开发者开发落地页模板（上）","content":"        page_path: url,\r"},"ship-langding-page-fast1_318":{"title":"我为独立开发者开发落地页模板（上）","content":"      });\r"},"ship-langding-page-fast1_319":{"title":"我为独立开发者开发落地页模板（上）","content":"    };\r"},"ship-langding-page-fast1_320":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_321":{"title":"我为独立开发者开发落地页模板（上）","content":"    export const event = ({ action, category, label, value }) =\r"},"ship-langding-page-fast1_322":{"title":"我为独立开发者开发落地页模板（上）","content":"      window.gtag(\"event\", action, {\r"},"ship-langding-page-fast1_323":{"title":"我为独立开发者开发落地页模板（上）","content":"        event_category: category,\r"},"ship-langding-page-fast1_324":{"title":"我为独立开发者开发落地页模板（上）","content":"        event_label: label,\r"},"ship-langding-page-fast1_325":{"title":"我为独立开发者开发落地页模板（上）","content":"        value: value,\r"},"ship-langding-page-fast1_326":{"title":"我为独立开发者开发落地页模板（上）","content":"      });\r"},"ship-langding-page-fast1_327":{"title":"我为独立开发者开发落地页模板（上）","content":"    };\r"},"ship-langding-page-fast1_328":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_329":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_330":{"title":"我为独立开发者开发落地页模板（上）","content":"5. 在 app 文件夹下创建 \r"},"ship-langding-page-fast1_331":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_332":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_333":{"title":"我为独立开发者开发落地页模板（上）","content":"    \"use client\";\r"},"ship-langding-page-fast1_334":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_335":{"title":"我为独立开发者开发落地页模板（上）","content":"    import Script from \"next/script\";\r"},"ship-langding-page-fast1_336":{"title":"我为独立开发者开发落地页模板（上）","content":"    import * as gtag from \"../gtag.js\";\r"},"ship-langding-page-fast1_337":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_338":{"title":"我为独立开发者开发落地页模板（上）","content":"    const GoogleAnalytics = () =\r"},"ship-langding-page-fast1_339":{"title":"我为独立开发者开发落地页模板（上）","content":"      return (\r"},"ship-langding-page-fast1_340":{"title":"我为独立开发者开发落地页模板（上）","content":"        <"},"ship-langding-page-fast1_341":{"title":"我为独立开发者开发落地页模板（上）","content":"          {gtag.GAID ? (\r"},"ship-langding-page-fast1_342":{"title":"我为独立开发者开发落地页模板（上）","content":"            <"},"ship-langding-page-fast1_343":{"title":"我为独立开发者开发落地页模板（上）","content":"              <Script\r"},"ship-langding-page-fast1_344":{"title":"我为独立开发者开发落地页模板（上）","content":"                strategy=\"afterInteractive\"\r"},"ship-langding-page-fast1_345":{"title":"我为独立开发者开发落地页模板（上）","content":"                src={}\r"},"ship-langding-page-fast1_346":{"title":"我为独立开发者开发落地页模板（上）","content":"              /"},"ship-langding-page-fast1_347":{"title":"我为独立开发者开发落地页模板（上）","content":"              <Script\r"},"ship-langding-page-fast1_348":{"title":"我为独立开发者开发落地页模板（上）","content":"                id=\"gtag-init\"\r"},"ship-langding-page-fast1_349":{"title":"我为独立开发者开发落地页模板（上）","content":"                strategy=\"afterInteractive\"\r"},"ship-langding-page-fast1_350":{"title":"我为独立开发者开发落地页模板（上）","content":"                dangerouslySetInnerHTML={{\r"},"ship-langding-page-fast1_351":{"title":"我为独立开发者开发落地页模板（上）","content":"                  html: `\r"},"ship-langding-page-fast1_352":{"title":"我为独立开发者开发落地页模板（上）","content":"                    window.dataLayer = window.dataLayer || [];\r"},"ship-langding-page-fast1_353":{"title":"我为独立开发者开发落地页模板（上）","content":"                    function gtag(){dataLayer.push(arguments);}\r"},"ship-langding-page-fast1_354":{"title":"我为独立开发者开发落地页模板（上）","content":"                    gtag('js', new Date());\r"},"ship-langding-page-fast1_355":{"title":"我为独立开发者开发落地页模板（上）","content":"                    gtag('config', '${gtag.GAID}', {\r"},"ship-langding-page-fast1_356":{"title":"我为独立开发者开发落地页模板（上）","content":"                    page_path: window.location.pathname,\r"},"ship-langding-page-fast1_357":{"title":"我为独立开发者开发落地页模板（上）","content":"                    });\r"},"ship-langding-page-fast1_358":{"title":"我为独立开发者开发落地页模板（上）","content":"                  `,\r"},"ship-langding-page-fast1_359":{"title":"我为独立开发者开发落地页模板（上）","content":"                }}\r"},"ship-langding-page-fast1_360":{"title":"我为独立开发者开发落地页模板（上）","content":"              /"},"ship-langding-page-fast1_361":{"title":"我为独立开发者开发落地页模板（上）","content":"            </"},"ship-langding-page-fast1_362":{"title":"我为独立开发者开发落地页模板（上）","content":"          ) : (\r"},"ship-langding-page-fast1_363":{"title":"我为独立开发者开发落地页模板（上）","content":"            <></"},"ship-langding-page-fast1_364":{"title":"我为独立开发者开发落地页模板（上）","content":"          )}\r"},"ship-langding-page-fast1_365":{"title":"我为独立开发者开发落地页模板（上）","content":"        </"},"ship-langding-page-fast1_366":{"title":"我为独立开发者开发落地页模板（上）","content":"      );\r"},"ship-langding-page-fast1_367":{"title":"我为独立开发者开发落地页模板（上）","content":"    };\r"},"ship-langding-page-fast1_368":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_369":{"title":"我为独立开发者开发落地页模板（上）","content":"    export default GoogleAnalytics;\r"},"ship-langding-page-fast1_370":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_371":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_372":{"title":"我为独立开发者开发落地页模板（上）","content":"6. 在 .env 或 .env.local 文件里添加环境变量：\r"},"ship-langding-page-fast1_373":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_374":{"title":"我为独立开发者开发落地页模板（上）","content":"    tsx\r"},"ship-langding-page-fast1_375":{"title":"我为独立开发者开发落地页模板（上）","content":"    NEXTGOOGLE_ID=G-xxxxxx\r"},"ship-langding-page-fast1_376":{"title":"我为独立开发者开发落地页模板（上）","content":"    添加第3步获取的 G-xxxxx 格式的id\r"},"ship-langding-page-fast1_377":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_378":{"title":"我为独立开发者开发落地页模板（上）","content":"    \r"},"ship-langding-page-fast1_379":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_380":{"title":"我为独立开发者开发落地页模板（上）","content":"在 body 中导入分析组件\r"},"ship-langding-page-fast1_381":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_382":{"title":"我为独立开发者开发落地页模板（上）","content":"在 app/layout.tsx 文件里导入百度统计和谷歌分析的组件\r"},"ship-langding-page-fast1_383":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_384":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_385":{"title":"我为独立开发者开发落地页模板（上）","content":"import BaiDuAnalytics from \"@/app/BaiDuAnalytics\";\r"},"ship-langding-page-fast1_386":{"title":"我为独立开发者开发落地页模板（上）","content":"import GoogleAnalytics from \"@/app/GoogleAnalytics\";\r"},"ship-langding-page-fast1_387":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_388":{"title":"我为独立开发者开发落地页模板（上）","content":"// 省略其他代码……\r"},"ship-langding-page-fast1_389":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_390":{"title":"我为独立开发者开发落地页模板（上）","content":"export default async function RootLayout({ children }) {\r"},"ship-langding-page-fast1_391":{"title":"我为独立开发者开发落地页模板（上）","content":"  return (\r"},"ship-langding-page-fast1_392":{"title":"我为独立开发者开发落地页模板（上）","content":"    <html lang=\"en\" suppressHydrationWarning"},"ship-langding-page-fast1_393":{"title":"我为独立开发者开发落地页模板（上）","content":"      <head /"},"ship-langding-page-fast1_394":{"title":"我为独立开发者开发落地页模板（上）","content":"      <body"},"ship-langding-page-fast1_395":{"title":"我为独立开发者开发落地页模板（上）","content":"         {//}\r"},"ship-langding-page-fast1_396":{"title":"我为独立开发者开发落地页模板（上）","content":"        {process.env.NODE_ENV === \"development\" ? (\r"},"ship-langding-page-fast1_397":{"title":"我为独立开发者开发落地页模板（上）","content":"\t\t\t\t\t {//}\r"},"ship-langding-page-fast1_398":{"title":"我为独立开发者开发落地页模板（上）","content":"          <></"},"ship-langding-page-fast1_399":{"title":"我为独立开发者开发落地页模板（上）","content":"        ) : (\r"},"ship-langding-page-fast1_400":{"title":"我为独立开发者开发落地页模板（上）","content":"          <"},"ship-langding-page-fast1_401":{"title":"我为独立开发者开发落地页模板（上）","content":"            <GoogleAnalytics /"},"ship-langding-page-fast1_402":{"title":"我为独立开发者开发落地页模板（上）","content":"            <BaiDuAnalytics /"},"ship-langding-page-fast1_403":{"title":"我为独立开发者开发落地页模板（上）","content":"          </"},"ship-langding-page-fast1_404":{"title":"我为独立开发者开发落地页模板（上）","content":"        )}\r"},"ship-langding-page-fast1_405":{"title":"我为独立开发者开发落地页模板（上）","content":"      </body"},"ship-langding-page-fast1_406":{"title":"我为独立开发者开发落地页模板（上）","content":"    </html"},"ship-langding-page-fast1_407":{"title":"我为独立开发者开发落地页模板（上）","content":"  );\r"},"ship-langding-page-fast1_408":{"title":"我为独立开发者开发落地页模板（上）","content":"}\r"},"ship-langding-page-fast1_409":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_410":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_411":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_412":{"title":"我为独立开发者开发落地页模板（上）","content":"为了避免开发环境访问造成数据不准确，我们添加了环境判断，开发环境不会进行数据统计。\r"},"ship-langding-page-fast1_413":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_414":{"title":"我为独立开发者开发落地页模板（上）","content":"页面开发\r"},"ship-langding-page-fast1_415":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_416":{"title":"我为独立开发者开发落地页模板（上）","content":"教程第一篇的最后一步，划分页面内容模块。我们按照文章开篇分析的页面框架进行划分模块。\r"},"ship-langding-page-fast1_417":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_418":{"title":"我为独立开发者开发落地页模板（上）","content":"引入 Shadcn/ui\r"},"ship-langding-page-fast1_419":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_420":{"title":"我为独立开发者开发落地页模板（上）","content":"在 Next.js 社区，最热门的组件库非属  不可。这个组件库虽然才发布一年，但因为独特的设计思路——导入方式提供源码而非打包后的执行码——而广受社区欢迎。\r"},"ship-langding-page-fast1_421":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_422":{"title":"我为独立开发者开发落地页模板（上）","content":"我们的启动模板已经支持了 ，如果你还不了解这个库，可以用以下方式安装：\r"},"ship-langding-page-fast1_423":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_424":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_425":{"title":"我为独立开发者开发落地页模板（上）","content":"npx shadcn-ui@latest init\r"},"ship-langding-page-fast1_426":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_427":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_428":{"title":"我为独立开发者开发落地页模板（上）","content":"根据提示选择你想要的配置：\r"},"ship-langding-page-fast1_429":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_430":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_431":{"title":"我为独立开发者开发落地页模板（上）","content":"Would you like to use TypeScript (recommended)? no / yes\r"},"ship-langding-page-fast1_432":{"title":"我为独立开发者开发落地页模板（上）","content":"Which style would you like to use? › Default\r"},"ship-langding-page-fast1_433":{"title":"我为独立开发者开发落地页模板（上）","content":"Which color would you like to use as base color? › Blue\r"},"ship-langding-page-fast1_434":{"title":"我为独立开发者开发落地页模板（上）","content":"Where is your global CSS file? › › app/globals.css\r"},"ship-langding-page-fast1_435":{"title":"我为独立开发者开发落地页模板（上）","content":"Do you want to use CSS variables for colors? › no / yes\r"},"ship-langding-page-fast1_436":{"title":"我为独立开发者开发落地页模板（上）","content":"Are you using a custom tailwind prefix eg. tw-? (Leave blank if not) ...\r"},"ship-langding-page-fast1_437":{"title":"我为独立开发者开发落地页模板（上）","content":"Where is your tailwind.config.js located? › tailwind.config.js\r"},"ship-langding-page-fast1_438":{"title":"我为独立开发者开发落地页模板（上）","content":"Configure the import alias for components: › @/components\r"},"ship-langding-page-fast1_439":{"title":"我为独立开发者开发落地页模板（上）","content":"Configure the import alias for utils: › @/lib/utils\r"},"ship-langding-page-fast1_440":{"title":"我为独立开发者开发落地页模板（上）","content":"Are you using React Server Components? › no / yes\r"},"ship-langding-page-fast1_441":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_442":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_443":{"title":"我为独立开发者开发落地页模板（上）","content":"安装完成后，就可以单独引入你需要的组件，例如：\r"},"ship-langding-page-fast1_444":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_445":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_446":{"title":"我为独立开发者开发落地页模板（上）","content":"npx shadcn-ui@latest add button\r"},"ship-langding-page-fast1_447":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_448":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_449":{"title":"我为独立开发者开发落地页模板（上）","content":"这样就可以在  文件夹下看到  组件。如果你认为组件提供的样式有问题，你甚至可以直接在  文件夹下修改组件代码。\r"},"ship-langding-page-fast1_450":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_451":{"title":"我为独立开发者开发落地页模板（上）","content":"页面框架搭建\r"},"ship-langding-page-fast1_452":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_453":{"title":"我为独立开发者开发落地页模板（上）","content":"本文主要涉及整体的设计思路，所以只提供页面框架，下一篇文章会对每一个模块展开介绍，并完成最终的开发工作。\r"},"ship-langding-page-fast1_454":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_455":{"title":"我为独立开发者开发落地页模板（上）","content":"现在先按照划分的页面逻辑，为落地页创建组件：\r"},"ship-langding-page-fast1_456":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_457":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_458":{"title":"我为独立开发者开发落地页模板（上）","content":"├── components\r"},"ship-langding-page-fast1_459":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │── Home\r"},"ship-langding-page-fast1_460":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── Introduction.tsx             产品介绍\r"},"ship-langding-page-fast1_461":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── BuyButton.tsx                引导购买按钮（调用两次）\r"},"ship-langding-page-fast1_462":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── UserPurchaseAvatar.tsx       已购买用户展示\r"},"ship-langding-page-fast1_463":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── Feature.tsx                  特性介绍\r"},"ship-langding-page-fast1_464":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── Price.tsx                    价格展示\r"},"ship-langding-page-fast1_465":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── WallOfLove.tsx               客户评价\r"},"ship-langding-page-fast1_466":{"title":"我为独立开发者开发落地页模板（上）","content":"│   │   │── FQA.tsx                      FQA\r"},"ship-langding-page-fast1_467":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_468":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_469":{"title":"我为独立开发者开发落地页模板（上）","content":"这是落地页框架的设计思路：\r"},"ship-langding-page-fast1_470":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_471":{"title":"我为独立开发者开发落地页模板（上）","content":"- 页面顶部大字号显示 slogan 和介绍，要追求把用户的注意力聚焦到我们的落地页\r"},"ship-langding-page-fast1_472":{"title":"我为独立开发者开发落地页模板（上）","content":"- 对于了解过产品的人，可能不需要看整个落地页的信息就有购买意愿，所以顶部要留一个购买按钮\r"},"ship-langding-page-fast1_473":{"title":"我为独立开发者开发落地页模板（上）","content":"- 接下来展示能表示产品受欢迎的信息，例如已购用户的列表、合作伙伴、媒体报道等\r"},"ship-langding-page-fast1_474":{"title":"我为独立开发者开发落地页模板（上）","content":"- 产品特性介绍，这是落地页的核心信息之一，所以应该加到 Header 的锚点上\r"},"ship-langding-page-fast1_475":{"title":"我为独立开发者开发落地页模板（上）","content":"- 价格是用户最关系的信息，所以也应该加到 Header 的锚点上\r"},"ship-langding-page-fast1_476":{"title":"我为独立开发者开发落地页模板（上）","content":"- 展示客户评价的模块，英文中称作「Wall of Love」，当用户看完特性和价格后仍未下定决心购买服务，那么一个好的 Wall of Love 模块可能会帮助你说服潜在用户下决心购买\r"},"ship-langding-page-fast1_477":{"title":"我为独立开发者开发落地页模板（上）","content":"- FQA 是预设用户可能疑惑的问题进行解答，在落地页中不是必须的\r"},"ship-langding-page-fast1_478":{"title":"我为独立开发者开发落地页模板（上）","content":"- 在落地页末尾，一定要再次引导购买，所以再放一个购买按钮\r"},"ship-langding-page-fast1_479":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_480":{"title":"我为独立开发者开发落地页模板（上）","content":"Header 添加锚点\r"},"ship-langding-page-fast1_481":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_482":{"title":"我为独立开发者开发落地页模板（上）","content":"现在落地页整体框架都搭建好了，我们可以在 Header 上添加锚点了。\r"},"ship-langding-page-fast1_483":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_484":{"title":"我为独立开发者开发落地页模板（上）","content":"我们用id来定义锚点，给每一个组件都定义一个id：\r"},"ship-langding-page-fast1_485":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_486":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_487":{"title":"我为独立开发者开发落地页模板（上）","content":"import BuyButton from \"@/components/Home/BuyButton\";\r"},"ship-langding-page-fast1_488":{"title":"我为独立开发者开发落地页模板（上）","content":"import FQA from \"@/components/Home/FQA\";\r"},"ship-langding-page-fast1_489":{"title":"我为独立开发者开发落地页模板（上）","content":"import Feature from \"@/components/Home/Feature\";\r"},"ship-langding-page-fast1_490":{"title":"我为独立开发者开发落地页模板（上）","content":"import Introduction from \"@/components/Home/Introduction\";\r"},"ship-langding-page-fast1_491":{"title":"我为独立开发者开发落地页模板（上）","content":"import Pricing from \"@/components/Home/Pricing\";\r"},"ship-langding-page-fast1_492":{"title":"我为独立开发者开发落地页模板（上）","content":"import UserPurchaseAvatar from \"@/components/Home/UserPurchaseAvatar\";\r"},"ship-langding-page-fast1_493":{"title":"我为独立开发者开发落地页模板（上）","content":"import WallOfLove from \"@/components/Home/WallOfLove\";\r"},"ship-langding-page-fast1_494":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_495":{"title":"我为独立开发者开发落地页模板（上）","content":"export default function Home() {\r"},"ship-langding-page-fast1_496":{"title":"我为独立开发者开发落地页模板（上）","content":"  return (\r"},"ship-langding-page-fast1_497":{"title":"我为独立开发者开发落地页模板（上）","content":"    <"},"ship-langding-page-fast1_498":{"title":"我为独立开发者开发落地页模板（上）","content":"      <Introduction /"},"ship-langding-page-fast1_499":{"title":"我为独立开发者开发落地页模板（上）","content":"      <UserPurchaseAvatar /"},"ship-langding-page-fast1_500":{"title":"我为独立开发者开发落地页模板（上）","content":"      <Feature id=\"Feature\" /"},"ship-langding-page-fast1_501":{"title":"我为独立开发者开发落地页模板（上）","content":"      <Pricing id=\"Price\" /"},"ship-langding-page-fast1_502":{"title":"我为独立开发者开发落地页模板（上）","content":"      <WallOfLove id=\"WallOfLove\" /"},"ship-langding-page-fast1_503":{"title":"我为独立开发者开发落地页模板（上）","content":"      <FQA id=\"FQA\" /"},"ship-langding-page-fast1_504":{"title":"我为独立开发者开发落地页模板（上）","content":"      <BuyButton /"},"ship-langding-page-fast1_505":{"title":"我为独立开发者开发落地页模板（上）","content":"    </"},"ship-langding-page-fast1_506":{"title":"我为独立开发者开发落地页模板（上）","content":"  );\r"},"ship-langding-page-fast1_507":{"title":"我为独立开发者开发落地页模板（上）","content":"}\r"},"ship-langding-page-fast1_508":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_509":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_510":{"title":"我为独立开发者开发落地页模板（上）","content":"现在到 Header 组件里添加一下锚点跳转按钮：\r"},"ship-langding-page-fast1_511":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_512":{"title":"我为独立开发者开发落地页模板（上）","content":"tsx\r"},"ship-langding-page-fast1_513":{"title":"我为独立开发者开发落地页模板（上）","content":"\"use client\";\r"},"ship-langding-page-fast1_514":{"title":"我为独立开发者开发落地页模板（上）","content":"import HeaderLinks from \"@/components/HeaderLinks\";\r"},"ship-langding-page-fast1_515":{"title":"我为独立开发者开发落地页模板（上）","content":"import { siteConfig } from \"@/config/site\";\r"},"ship-langding-page-fast1_516":{"title":"我为独立开发者开发落地页模板（上）","content":"import { MenuIcon } from \"lucide-react\";\r"},"ship-langding-page-fast1_517":{"title":"我为独立开发者开发落地页模板（上）","content":"import Image from \"next/image\";\r"},"ship-langding-page-fast1_518":{"title":"我为独立开发者开发落地页模板（上）","content":"import Link from \"next/link\";\r"},"ship-langding-page-fast1_519":{"title":"我为独立开发者开发落地页模板（上）","content":"import { useState } from \"react\";\r"},"ship-langding-page-fast1_520":{"title":"我为独立开发者开发落地页模板（上）","content":"import { CgClose } from \"react-icons/cg\";\r"},"ship-langding-page-fast1_521":{"title":"我为独立开发者开发落地页模板（上）","content":"import { ThemeProvider, ThemedButton } from \"./ThemedButton\";\r"},"ship-langding-page-fast1_522":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_523":{"title":"我为独立开发者开发落地页模板（上）","content":"const links = [\r"},"ship-langding-page-fast1_524":{"title":"我为独立开发者开发落地页模板（上）","content":"  {\r"},"ship-langding-page-fast1_525":{"title":"我为独立开发者开发落地页模板（上）","content":"    label: \"Features\",\r"},"ship-langding-page-fast1_526":{"title":"我为独立开发者开发落地页模板（上）","content":"    href: \"/#features\",\r"},"ship-langding-page-fast1_527":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_528":{"title":"我为独立开发者开发落地页模板（上）","content":"  {\r"},"ship-langding-page-fast1_529":{"title":"我为独立开发者开发落地页模板（上）","content":"    label: \"Pricing\",\r"},"ship-langding-page-fast1_530":{"title":"我为独立开发者开发落地页模板（上）","content":"    href: \"/#pricing\",\r"},"ship-langding-page-fast1_531":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_532":{"title":"我为独立开发者开发落地页模板（上）","content":"  {\r"},"ship-langding-page-fast1_533":{"title":"我为独立开发者开发落地页模板（上）","content":"    label: \"WallOfLove\",\r"},"ship-langding-page-fast1_534":{"title":"我为独立开发者开发落地页模板（上）","content":"    href: \"/#WallOfLove\",\r"},"ship-langding-page-fast1_535":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_536":{"title":"我为独立开发者开发落地页模板（上）","content":"  {\r"},"ship-langding-page-fast1_537":{"title":"我为独立开发者开发落地页模板（上）","content":"    label: \"FQA\",\r"},"ship-langding-page-fast1_538":{"title":"我为独立开发者开发落地页模板（上）","content":"    href: \"/#FQA\",\r"},"ship-langding-page-fast1_539":{"title":"我为独立开发者开发落地页模板（上）","content":"  },\r"},"ship-langding-page-fast1_540":{"title":"我为独立开发者开发落地页模板（上）","content":"];\r"},"ship-langding-page-fast1_541":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_542":{"title":"我为独立开发者开发落地页模板（上）","content":"const Header = () =\r"},"ship-langding-page-fast1_543":{"title":"我为独立开发者开发落地页模板（上）","content":"  const [isMenuOpen, setIsMenuOpen] = useState(false);\r"},"ship-langding-page-fast1_544":{"title":"我为独立开发者开发落地页模板（上）","content":"  return (\r"},"ship-langding-page-fast1_545":{"title":"我为独立开发者开发落地页模板（上）","content":"    <header className=\"py-10 mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\""},"ship-langding-page-fast1_546":{"title":"我为独立开发者开发落地页模板（上）","content":"      <nav className=\"relative z-50 flex justify-between\""},"ship-langding-page-fast1_547":{"title":"我为独立开发者开发落地页模板（上）","content":"        <div>{//}</div"},"ship-langding-page-fast1_548":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_549":{"title":"我为独立开发者开发落地页模板（上）","content":"\t\t\t\t<div>{//}</div"},"ship-langding-page-fast1_550":{"title":"我为独立开发者开发落地页模板（上）","content":"        <ul className=\"hidden items-center gap-8 md:flex\""},"ship-langding-page-fast1_551":{"title":"我为独立开发者开发落地页模板（上）","content":"          {links.map((link) =\r"},"ship-langding-page-fast1_552":{"title":"我为独立开发者开发落地页模板（上）","content":"            <li key={link.label}"},"ship-langding-page-fast1_553":{"title":"我为独立开发者开发落地页模板（上）","content":"              <Link\r"},"ship-langding-page-fast1_554":{"title":"我为独立开发者开发落地页模板（上）","content":"                href={link.href}\r"},"ship-langding-page-fast1_555":{"title":"我为独立开发者开发落地页模板（上）","content":"                aria-label={link.label}\r"},"ship-langding-page-fast1_556":{"title":"我为独立开发者开发落地页模板（上）","content":"                title={link.label}\r"},"ship-langding-page-fast1_557":{"title":"我为独立开发者开发落地页模板（上）","content":"                className=\"tracking-wide transition-colors duration-200 font-norma\"\r"},"ship-langding-page-fast1_558":{"title":"我为独立开发者开发落地页模板（上）","content":"              "},"ship-langding-page-fast1_559":{"title":"我为独立开发者开发落地页模板（上）","content":"                {link.label}\r"},"ship-langding-page-fast1_560":{"title":"我为独立开发者开发落地页模板（上）","content":"              </Link"},"ship-langding-page-fast1_561":{"title":"我为独立开发者开发落地页模板（上）","content":"            </li"},"ship-langding-page-fast1_562":{"title":"我为独立开发者开发落地页模板（上）","content":"          ))}\r"},"ship-langding-page-fast1_563":{"title":"我为独立开发者开发落地页模板（上）","content":"        </ul"},"ship-langding-page-fast1_564":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_565":{"title":"我为独立开发者开发落地页模板（上）","content":"        <div>{//}</div"},"ship-langding-page-fast1_566":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_567":{"title":"我为独立开发者开发落地页模板（上）","content":"\t\t\t   <div>{//}</div"},"ship-langding-page-fast1_568":{"title":"我为独立开发者开发落地页模板（上）","content":"      </nav"},"ship-langding-page-fast1_569":{"title":"我为独立开发者开发落地页模板（上）","content":"    </header"},"ship-langding-page-fast1_570":{"title":"我为独立开发者开发落地页模板（上）","content":"  );\r"},"ship-langding-page-fast1_571":{"title":"我为独立开发者开发落地页模板（上）","content":"};\r"},"ship-langding-page-fast1_572":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_573":{"title":"我为独立开发者开发落地页模板（上）","content":"export default Header;\r"},"ship-langding-page-fast1_574":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_575":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_576":{"title":"我为独立开发者开发落地页模板（上）","content":"实测体验一下，锚点点击可以正确跳转。\r"},"ship-langding-page-fast1_577":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_578":{"title":"我为独立开发者开发落地页模板（上）","content":"总结\r"},"ship-langding-page-fast1_579":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_580":{"title":"我为独立开发者开发落地页模板（上）","content":"通过本文的实践，我们已经学到落地页的设计思路和落地页框架的搭建、更合理的 Next.js 的项目结构设计和网站信息统一配置、百度统计、谷歌分析、shadcn/ui 等第三方工具和库的使用。\r"},"ship-langding-page-fast1_581":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_582":{"title":"我为独立开发者开发落地页模板（上）","content":"下一篇文章我们将对落地页各个模块的设计进行思考和实践、引入动画库实现更有吸引力的落地页效果、完善多语言支持和暗黑模式，让我们的落地页能够吸引到世界上多个地区的用户。\r"},"ship-langding-page-fast1_583":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_584":{"title":"我为独立开发者开发落地页模板（上）","content":"相关资源：\r"},"ship-langding-page-fast1_585":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_586":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_587":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_588":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_589":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_590":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_591":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_592":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_593":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_594":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_595":{"title":"我为独立开发者开发落地页模板（上）","content":"关于我\r"},"ship-langding-page-fast1_596":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_597":{"title":"我为独立开发者开发落地页模板（上）","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"ship-langding-page-fast1_598":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_599":{"title":"我为独立开发者开发落地页模板（上）","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"ship-langding-page-fast1_600":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_601":{"title":"我为独立开发者开发落地页模板（上）","content":"欢迎在以下平台关注我：\r"},"ship-langding-page-fast1_602":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"ship-langding-page-fast1_603":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_604":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_605":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_606":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_607":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_608":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_609":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_610":{"title":"我为独立开发者开发落地页模板（上）","content":"- : 「BigYe程普」\r"},"ship-langding-page-fast1_611":{"title":"我为独立开发者开发落地页模板（上）","content":"- : \r"},"ship-langding-page-fast1_612":{"title":"我为独立开发者开发落地页模板（上）","content":"\r"},"react-v19-beta":{"title":"React正式更新！开始学习React 19！","content":"React正式更新！开始学习React 19！","display":"\r"},"react-v19-beta_0":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_1":{"title":"React正式更新！开始学习React 19！","content":"今年2月份，React 发布消息确认今年发布 v19 版本，尘封两年的版本号终于要更新了（详情点击：）。那时候，React 成员  明确了新版本将在3月或4月发布。\r"},"react-v19-beta_2":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_3":{"title":"React正式更新！开始学习React 19！","content":"要不怎么说「DDL是第一生产力」，这不4月底了，新版本就踩点发布了。这次发布的版本号是19.0.0-Beta。\r"},"react-v19-beta_4":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_5":{"title":"React正式更新！开始学习React 19！","content":"虽然只是 Beta 版，但也够让社区兴奋了：\r"},"react-v19-beta_6":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_7":{"title":"React正式更新！开始学习React 19！","content":" 说「they did what」\r"},"react-v19-beta_8":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_9":{"title":"React正式更新！开始学习React 19！","content":" 说「React 19: Never forwardRef again」\r"},"react-v19-beta_10":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_11":{"title":"React正式更新！开始学习React 19！","content":" 说「Lots of nice quality-of-life improvements here!」\r"},"react-v19-beta_12":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_13":{"title":"React正式更新！开始学习React 19！","content":"唯一的遗憾是，经 React 成员 lauren 确认，React Compiler 又跳票了。这个东西原来的名称叫做「React Forget」，真就是 Forget 属性拉满了。\r"},"react-v19-beta_14":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_15":{"title":"React正式更新！开始学习React 19！","content":"总结一下 19.0.0-Beta 版本的发布的特性就是：\r"},"react-v19-beta_16":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_17":{"title":"React正式更新！开始学习React 19！","content":"1. 一个 Actions\r"},"react-v19-beta_18":{"title":"React正式更新！开始学习React 19！","content":"2. 三个新 hook\r"},"react-v19-beta_19":{"title":"React正式更新！开始学习React 19！","content":"3. 一个新 API\r"},"react-v19-beta_20":{"title":"React正式更新！开始学习React 19！","content":"4. ref 和 context 用法更方便\r"},"react-v19-beta_21":{"title":"React正式更新！开始学习React 19！","content":"5. 其他支撑类更新、服务端能力更新\r"},"react-v19-beta_22":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_23":{"title":"React正式更新！开始学习React 19！","content":"接下来本文一个个介绍。\r"},"react-v19-beta_24":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_25":{"title":"React正式更新！开始学习React 19！","content":"<Aside"},"react-v19-beta_26":{"title":"React正式更新！开始学习React 19！","content":"欢迎加入「🌍」，一起学习交流前端和Node技术\r"},"react-v19-beta_27":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_28":{"title":"React正式更新！开始学习React 19！","content":"</Aside"},"react-v19-beta_29":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_30":{"title":"React正式更新！开始学习React 19！","content":"Actions\r"},"react-v19-beta_31":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_32":{"title":"React正式更新！开始学习React 19！","content":"Actions 不是一个 API，是一种简化请求数据处理的方法统称。一个合格的 Actions 要能够简化异步操作，让开发者更专注于业务逻辑而不是状态管理。\r"},"react-v19-beta_33":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_34":{"title":"React正式更新！开始学习React 19！","content":"让我们通过一个简单的例子来理解Actions的作用。假设我们有一个表单，用户可以通过该表单更新他们的姓名。以前，我们可能会使用useState来手动管理表单状态、错误状态和提交状态，代码可能会看起来像这样：\r"},"react-v19-beta_35":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_36":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_37":{"title":"React正式更新！开始学习React 19！","content":"function UpdateName() {\r"},"react-v19-beta_38":{"title":"React正式更新！开始学习React 19！","content":"  const [name, setName] = useState(\"\");\r"},"react-v19-beta_39":{"title":"React正式更新！开始学习React 19！","content":"  const [error, setError] = useState(null);\r"},"react-v19-beta_40":{"title":"React正式更新！开始学习React 19！","content":"  const [isPending, setIsPending] = useState(false);\r"},"react-v19-beta_41":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_42":{"title":"React正式更新！开始学习React 19！","content":"  const handleSubmit = async () =\r"},"react-v19-beta_43":{"title":"React正式更新！开始学习React 19！","content":"    setIsPending(true);\r"},"react-v19-beta_44":{"title":"React正式更新！开始学习React 19！","content":"    const error = await updateName(name);\r"},"react-v19-beta_45":{"title":"React正式更新！开始学习React 19！","content":"    setIsPending(false);\r"},"react-v19-beta_46":{"title":"React正式更新！开始学习React 19！","content":"    if (error) {\r"},"react-v19-beta_47":{"title":"React正式更新！开始学习React 19！","content":"      setError(error);\r"},"react-v19-beta_48":{"title":"React正式更新！开始学习React 19！","content":"      return;\r"},"react-v19-beta_49":{"title":"React正式更新！开始学习React 19！","content":"    } \r"},"react-v19-beta_50":{"title":"React正式更新！开始学习React 19！","content":"    redirect(\"/path\");\r"},"react-v19-beta_51":{"title":"React正式更新！开始学习React 19！","content":"  };\r"},"react-v19-beta_52":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_53":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_54":{"title":"React正式更新！开始学习React 19！","content":"    <div"},"react-v19-beta_55":{"title":"React正式更新！开始学习React 19！","content":"      <input value={name} onChange={(event) =\r"},"react-v19-beta_56":{"title":"React正式更新！开始学习React 19！","content":"      <button onClick={handleSubmit} disabled={isPending}"},"react-v19-beta_57":{"title":"React正式更新！开始学习React 19！","content":"        Update\r"},"react-v19-beta_58":{"title":"React正式更新！开始学习React 19！","content":"      </button"},"react-v19-beta_59":{"title":"React正式更新！开始学习React 19！","content":"      {error && <p>{error}</p>}\r"},"react-v19-beta_60":{"title":"React正式更新！开始学习React 19！","content":"    </div"},"react-v19-beta_61":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_62":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_63":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_64":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_65":{"title":"React正式更新！开始学习React 19！","content":"这段代码需要手动处理许多细节。但是，有了 React 19 的 Actions，情况就有所优化，我们可以使用  hook 来处理表单提交，它会自动处理 pending 状态，让我们的代码更加简洁：\r"},"react-v19-beta_66":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_67":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_68":{"title":"React正式更新！开始学习React 19！","content":"function UpdateName() {\r"},"react-v19-beta_69":{"title":"React正式更新！开始学习React 19！","content":"  const [name, setName] = useState(\"\");\r"},"react-v19-beta_70":{"title":"React正式更新！开始学习React 19！","content":"  const [error, setError] = useState(null);\r"},"react-v19-beta_71":{"title":"React正式更新！开始学习React 19！","content":"  const [isPending, startTransition] = useTransition();\r"},"react-v19-beta_72":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_73":{"title":"React正式更新！开始学习React 19！","content":"  const handleSubmit = async () =\r"},"react-v19-beta_74":{"title":"React正式更新！开始学习React 19！","content":"    startTransition(async () =\r"},"react-v19-beta_75":{"title":"React正式更新！开始学习React 19！","content":"      const error = await updateName(name);\r"},"react-v19-beta_76":{"title":"React正式更新！开始学习React 19！","content":"      if (error) {\r"},"react-v19-beta_77":{"title":"React正式更新！开始学习React 19！","content":"        setError(error);\r"},"react-v19-beta_78":{"title":"React正式更新！开始学习React 19！","content":"        return;\r"},"react-v19-beta_79":{"title":"React正式更新！开始学习React 19！","content":"      } \r"},"react-v19-beta_80":{"title":"React正式更新！开始学习React 19！","content":"      redirect(\"/path\");\r"},"react-v19-beta_81":{"title":"React正式更新！开始学习React 19！","content":"    })\r"},"react-v19-beta_82":{"title":"React正式更新！开始学习React 19！","content":"  };\r"},"react-v19-beta_83":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_84":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_85":{"title":"React正式更新！开始学习React 19！","content":"    <div"},"react-v19-beta_86":{"title":"React正式更新！开始学习React 19！","content":"      <input value={name} onChange={(event) =\r"},"react-v19-beta_87":{"title":"React正式更新！开始学习React 19！","content":"      <button onClick={handleSubmit} disabled={isPending}"},"react-v19-beta_88":{"title":"React正式更新！开始学习React 19！","content":"        Update\r"},"react-v19-beta_89":{"title":"React正式更新！开始学习React 19！","content":"      </button"},"react-v19-beta_90":{"title":"React正式更新！开始学习React 19！","content":"      {error && <p>{error}</p>}\r"},"react-v19-beta_91":{"title":"React正式更新！开始学习React 19！","content":"    </div"},"react-v19-beta_92":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_93":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_94":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_95":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_96":{"title":"React正式更新！开始学习React 19！","content":"在  函数中，异步请求的逻辑被放入  的回调中。 被调用时，React 会立即将  设为 true，表示过渡（请求）正在进行。然后 React 会在后台执行  的回调函数，发送异步请求。在请求完成后，React 会自动将  切换为 false。\r"},"react-v19-beta_97":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_98":{"title":"React正式更新！开始学习React 19！","content":"我们只要将  绑定到提交按钮的  属性，这样在请求进行期间按钮会自动进入禁用状态，避免用户重复提交。\r"},"react-v19-beta_99":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_100":{"title":"React正式更新！开始学习React 19！","content":"下面总结一下 React 对 Actions 的约定和说明：\r"},"react-v19-beta_101":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_102":{"title":"React正式更新！开始学习React 19！","content":"- ：使用异步过渡的函数可以被称为“Actions”。\r"},"react-v19-beta_103":{"title":"React正式更新！开始学习React 19！","content":"- ：Actions 自动管理提交数据的挂起状态。当发起请求时，挂起状态会自动启动，当最终状态更新后，挂起状态就会自动重置。这样可以确保用户在等待数据提交时能够获得反馈，同时在请求完成后清除挂起状态。\r"},"react-v19-beta_104":{"title":"React正式更新！开始学习React 19！","content":"- ：Actions 支持乐观更新，即在等待请求提交时就向用户显示正确的提交结果。如果最终请求失败，乐观更新会自动恢复到其原始值。\r"},"react-v19-beta_105":{"title":"React正式更新！开始学习React 19！","content":"- ：Actions 提供了内置的错误处理功能。当请求失败时，你可以使用错误边界来显示错误信息。\r"},"react-v19-beta_106":{"title":"React正式更新！开始学习React 19！","content":"- ： 元素现在支持将函数传递给  和  属性。通过将函数传递给  属性，可以使用 Actions 来处理表单提交，默认情况下会在提交后自动重置表单。这简化了表单处理的过程，使其更加直观和高效。\r"},"react-v19-beta_107":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_108":{"title":"React正式更新！开始学习React 19！","content":"三个新 Hook\r"},"react-v19-beta_109":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_110":{"title":"React正式更新！开始学习React 19！","content":"为什么要先介绍 Actions 呢？因为 React 19 在 Actions 基础上引入了三个新 Hook，每一个都是为了简化开发者操作状态的复杂度。\r"},"react-v19-beta_111":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_112":{"title":"React正式更新！开始学习React 19！","content":"useOptimistic\r"},"react-v19-beta_113":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_114":{"title":"React正式更新！开始学习React 19！","content":" 的主要目的是让我们可以在等待异步操作结果的时候，先假设操作成功并更新状态，然后再根据实际结果来确认状态。\r"},"react-v19-beta_115":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_116":{"title":"React正式更新！开始学习React 19！","content":"它的基本用法如下：\r"},"react-v19-beta_117":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_118":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_119":{"title":"React正式更新！开始学习React 19！","content":"import { useOptimistic } from 'react';\r"},"react-v19-beta_120":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_121":{"title":"React正式更新！开始学习React 19！","content":"function AppContainer() {\r"},"react-v19-beta_122":{"title":"React正式更新！开始学习React 19！","content":"  const [optimisticState, addOptimistic] = useOptimistic(\r"},"react-v19-beta_123":{"title":"React正式更新！开始学习React 19！","content":"    state,\r"},"react-v19-beta_124":{"title":"React正式更新！开始学习React 19！","content":"    // updateFn\r"},"react-v19-beta_125":{"title":"React正式更新！开始学习React 19！","content":"    (currentState, optimisticValue) =\r"},"react-v19-beta_126":{"title":"React正式更新！开始学习React 19！","content":"      // merge and return new state\r"},"react-v19-beta_127":{"title":"React正式更新！开始学习React 19！","content":"      // with optimistic value\r"},"react-v19-beta_128":{"title":"React正式更新！开始学习React 19！","content":"    }\r"},"react-v19-beta_129":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_130":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_131":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_132":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_133":{"title":"React正式更新！开始学习React 19！","content":"其中：\r"},"react-v19-beta_134":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_135":{"title":"React正式更新！开始学习React 19！","content":"- : 初始状态和没有正在进行的操作时返回的状态。\r"},"react-v19-beta_136":{"title":"React正式更新！开始学习React 19！","content":"- : 一个纯函数，接受当前状态和  传入的乐观更新值，返回合并后的乐观状态。\r"},"react-v19-beta_137":{"title":"React正式更新！开始学习React 19！","content":"- : 乐观状态,如果没有正在进行的操作，则等于 ，否则等于  的返回值。\r"},"react-v19-beta_138":{"title":"React正式更新！开始学习React 19！","content":"- : 一个用于触发乐观更新的函数，接受一个任意类型的  参数，并将其传递给 。\r"},"react-v19-beta_139":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_140":{"title":"React正式更新！开始学习React 19！","content":" 的使用场景非常广泛，例如：表单提交、点赞、收藏、删除等需要即时反馈的场景均适用。\r"},"react-v19-beta_141":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_142":{"title":"React正式更新！开始学习React 19！","content":"这是一个删除数据乐观更新的例子：\r"},"react-v19-beta_143":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_144":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_145":{"title":"React正式更新！开始学习React 19！","content":"import React, { useState } from 'react';\r"},"react-v19-beta_146":{"title":"React正式更新！开始学习React 19！","content":"import { useOptimistic } from 'react';\r"},"react-v19-beta_147":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_148":{"title":"React正式更新！开始学习React 19！","content":"function AppContainer() {\r"},"react-v19-beta_149":{"title":"React正式更新！开始学习React 19！","content":"\t// 默认数据\r"},"react-v19-beta_150":{"title":"React正式更新！开始学习React 19！","content":"  const [state, setState] = useState([\r"},"react-v19-beta_151":{"title":"React正式更新！开始学习React 19！","content":"    { id: 1, name: 'Item 1' },\r"},"react-v19-beta_152":{"title":"React正式更新！开始学习React 19！","content":"    { id: 2, name: 'Item 2' },\r"},"react-v19-beta_153":{"title":"React正式更新！开始学习React 19！","content":"    { id: 3, name: 'Item 3' },\r"},"react-v19-beta_154":{"title":"React正式更新！开始学习React 19！","content":"  ]);\r"},"react-v19-beta_155":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_156":{"title":"React正式更新！开始学习React 19！","content":"\t// 定义更新函数，该函数基于当前状态和乐观值（要删除的条目的ID）来更新状态\r"},"react-v19-beta_157":{"title":"React正式更新！开始学习React 19！","content":"  const updateFn = (currentState, optimisticId) =\r"},"react-v19-beta_158":{"title":"React正式更新！开始学习React 19！","content":"    return currentState.filter(item =\r"},"react-v19-beta_159":{"title":"React正式更新！开始学习React 19！","content":"  };\r"},"react-v19-beta_160":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_161":{"title":"React正式更新！开始学习React 19！","content":"  const [optimisticState, addOptimistic] = useOptimistic(state, updateFn);\r"},"react-v19-beta_162":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_163":{"title":"React正式更新！开始学习React 19！","content":"\t// 删除item\r"},"react-v19-beta_164":{"title":"React正式更新！开始学习React 19！","content":"  const deleteItem = async (itemId) =\r"},"react-v19-beta_165":{"title":"React正式更新！开始学习React 19！","content":"    // 首先乐观地更新 UI\r"},"react-v19-beta_166":{"title":"React正式更新！开始学习React 19！","content":"    addOptimistic(itemId);\r"},"react-v19-beta_167":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_168":{"title":"React正式更新！开始学习React 19！","content":"    // 模拟 API 请求延迟\r"},"react-v19-beta_169":{"title":"React正式更新！开始学习React 19！","content":"    setTimeout(() =\r"},"react-v19-beta_170":{"title":"React正式更新！开始学习React 19！","content":"      // 假设这里是 API 删除调用，完成后更新实际状态\r"},"react-v19-beta_171":{"title":"React正式更新！开始学习React 19！","content":"      setItems(currentItems =\r"},"react-v19-beta_172":{"title":"React正式更新！开始学习React 19！","content":"    }, 2000);\r"},"react-v19-beta_173":{"title":"React正式更新！开始学习React 19！","content":"  };\r"},"react-v19-beta_174":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_175":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_176":{"title":"React正式更新！开始学习React 19！","content":"    <div"},"react-v19-beta_177":{"title":"React正式更新！开始学习React 19！","content":"      <h1>Optimistically Deleting Items</h1"},"react-v19-beta_178":{"title":"React正式更新！开始学习React 19！","content":"      <ul"},"react-v19-beta_179":{"title":"React正式更新！开始学习React 19！","content":"        {optimisticState.map(item =\r"},"react-v19-beta_180":{"title":"React正式更新！开始学习React 19！","content":"          <li key={item.id}"},"react-v19-beta_181":{"title":"React正式更新！开始学习React 19！","content":"            {item.name} <button onClick={() =\r"},"react-v19-beta_182":{"title":"React正式更新！开始学习React 19！","content":"          </li"},"react-v19-beta_183":{"title":"React正式更新！开始学习React 19！","content":"        ))}\r"},"react-v19-beta_184":{"title":"React正式更新！开始学习React 19！","content":"      </ul"},"react-v19-beta_185":{"title":"React正式更新！开始学习React 19！","content":"    </div"},"react-v19-beta_186":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_187":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_188":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_189":{"title":"React正式更新！开始学习React 19！","content":"export default AppContainer;\r"},"react-v19-beta_190":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_191":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_192":{"title":"React正式更新！开始学习React 19！","content":"useActionState\r"},"react-v19-beta_193":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_194":{"title":"React正式更新！开始学习React 19！","content":" 原名叫做 ，19版本启用新名称，返回参数也发生了变化（奇怪的是，React 还未更新  的文档，欺负程序员不看文档吗？🐶）。\r"},"react-v19-beta_195":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_196":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_197":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_198":{"title":"React正式更新！开始学习React 19！","content":"这是 useActionState 的最新基本用法：\r"},"react-v19-beta_199":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_200":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_201":{"title":"React正式更新！开始学习React 19！","content":"const [state, action， pending] = useActionState(fn, initialState, permalink?);\r"},"react-v19-beta_202":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_203":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_204":{"title":"React正式更新！开始学习React 19！","content":"其中返回参数有：\r"},"react-v19-beta_205":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_206":{"title":"React正式更新！开始学习React 19！","content":"- : 表示当前的状态。在第一次渲染时，它等于初始状态 。在执行操作后，它将是最新结果。\r"},"react-v19-beta_207":{"title":"React正式更新！开始学习React 19！","content":"- : 这是一个函数，用于执行操作。当调用这个函数时，它将触发  函数的执行，并更新状态。\r"},"react-v19-beta_208":{"title":"React正式更新！开始学习React 19！","content":"- : 这是新增参数，它是一个布尔值，表示当前是否正在执行操作。如果正在执行操作，则为 ，否则为 。\r"},"react-v19-beta_209":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_210":{"title":"React正式更新！开始学习React 19！","content":"传入的参数有：\r"},"react-v19-beta_211":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_212":{"title":"React正式更新！开始学习React 19！","content":"- ：这是一个函数，action被调用时会触发，随后返回新的值。\r"},"react-v19-beta_213":{"title":"React正式更新！开始学习React 19！","content":"- ：这是初始值，如果没有初值，要设置为null。\r"},"react-v19-beta_214":{"title":"React正式更新！开始学习React 19！","content":"- ：这是一个可选的字符串参数，通常与server action一起使用。\r"},"react-v19-beta_215":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_216":{"title":"React正式更新！开始学习React 19！","content":"下面是  与 form action 一起使用的例子，实现了更新名称的功能，如果更新失败，页面上显示 error，如果更新成功，跳转到更新后的页面：\r"},"react-v19-beta_217":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_218":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_219":{"title":"React正式更新！开始学习React 19！","content":"import { useActionState } from 'react';\r"},"react-v19-beta_220":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_221":{"title":"React正式更新！开始学习React 19！","content":"function ChangeName({ name, setName }) {\r"},"react-v19-beta_222":{"title":"React正式更新！开始学习React 19！","content":"  // 使用 useActionState 创建与表单操作相关联的状态\r"},"react-v19-beta_223":{"title":"React正式更新！开始学习React 19！","content":"  const [error, submitAction, isPending] = useActionState(\r"},"react-v19-beta_224":{"title":"React正式更新！开始学习React 19！","content":"    // 第一个参数：表单操作函数\r"},"react-v19-beta_225":{"title":"React正式更新！开始学习React 19！","content":"    async (previousState, formData) =\r"},"react-v19-beta_226":{"title":"React正式更新！开始学习React 19！","content":"      // 在此定义表单操作的逻辑\r"},"react-v19-beta_227":{"title":"React正式更新！开始学习React 19！","content":"      // 这个函数会在表单提交时被调用\r"},"react-v19-beta_228":{"title":"React正式更新！开始学习React 19！","content":"      // 它接收两个参数：\r"},"react-v19-beta_229":{"title":"React正式更新！开始学习React 19！","content":"      // - previousState: 前一个状态，初始为 null，之后为上一次操作的返回值\r"},"react-v19-beta_230":{"title":"React正式更新！开始学习React 19！","content":"      // - formData: 表单数据对象，可通过 formData.get(\"name\") 获取表单字段的值\r"},"react-v19-beta_231":{"title":"React正式更新！开始学习React 19！","content":"      const error = await updateName(formData.get(\"name\"));\r"},"react-v19-beta_232":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_233":{"title":"React正式更新！开始学习React 19！","content":"      // 如果操作中出现了错误，则返回错误信息\r"},"react-v19-beta_234":{"title":"React正式更新！开始学习React 19！","content":"      if (error) {\r"},"react-v19-beta_235":{"title":"React正式更新！开始学习React 19！","content":"        return error;\r"},"react-v19-beta_236":{"title":"React正式更新！开始学习React 19！","content":"      }\r"},"react-v19-beta_237":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_238":{"title":"React正式更新！开始学习React 19！","content":"      // 如果操作成功，则执行重定向\r"},"react-v19-beta_239":{"title":"React正式更新！开始学习React 19！","content":"      redirect(\"/path\");\r"},"react-v19-beta_240":{"title":"React正式更新！开始学习React 19！","content":"    }, \r"},"react-v19-beta_241":{"title":"React正式更新！开始学习React 19！","content":"    // 第二个参数：初始状态，这里为 null，因为初始状态并不重要\r"},"react-v19-beta_242":{"title":"React正式更新！开始学习React 19！","content":"    null\r"},"react-v19-beta_243":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_244":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_245":{"title":"React正式更新！开始学习React 19！","content":"  // 返回表单及相关的状态和行为\r"},"react-v19-beta_246":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_247":{"title":"React正式更新！开始学习React 19！","content":"    <form action={submitAction}"},"react-v19-beta_248":{"title":"React正式更新！开始学习React 19！","content":"      <input type=\"text\" name=\"name\" /"},"react-v19-beta_249":{"title":"React正式更新！开始学习React 19！","content":"      <button type=\"submit\" disabled={isPending}"},"react-v19-beta_250":{"title":"React正式更新！开始学习React 19！","content":"        提交\r"},"react-v19-beta_251":{"title":"React正式更新！开始学习React 19！","content":"      </button"},"react-v19-beta_252":{"title":"React正式更新！开始学习React 19！","content":"      \r"},"react-v19-beta_253":{"title":"React正式更新！开始学习React 19！","content":"      {//}\r"},"react-v19-beta_254":{"title":"React正式更新！开始学习React 19！","content":"      {error && <p>{error}</p>}\r"},"react-v19-beta_255":{"title":"React正式更新！开始学习React 19！","content":"    </form"},"react-v19-beta_256":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_257":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_258":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_259":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_260":{"title":"React正式更新！开始学习React 19！","content":"useFormStatus\r"},"react-v19-beta_261":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_262":{"title":"React正式更新！开始学习React 19！","content":" 用来获取表单提交的状态信息。它的基本用法如下：\r"},"react-v19-beta_263":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_264":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_265":{"title":"React正式更新！开始学习React 19！","content":"const { pending, data, method, action } = useFormStatus();\r"},"react-v19-beta_266":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_267":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_268":{"title":"React正式更新！开始学习React 19！","content":"其中：\r"},"react-v19-beta_269":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_270":{"title":"React正式更新！开始学习React 19！","content":"- : 一个布尔值，表示父级  是否正在提交。如果为 ，表示表单正在提交，否则为 。\r"},"react-v19-beta_271":{"title":"React正式更新！开始学习React 19！","content":"- : 一个实现了 FormData 接口的对象，包含父级  正在提交的数据。如果没有正在进行的提交或没有父级 ，则为 。\r"},"react-v19-beta_272":{"title":"React正式更新！开始学习React 19！","content":"- : 一个字符串值，表示父级  使用的 HTTP 方法，可以是 get 或 post。\r"},"react-v19-beta_273":{"title":"React正式更新！开始学习React 19！","content":"- : 一个指向传递给父级  的 action 属性的函数的引用。如果没有父级 ，则该属性为 。\r"},"react-v19-beta_274":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_275":{"title":"React正式更新！开始学习React 19！","content":"例如，在 form action 中，开发者可以通过  获取表单状态：\r"},"react-v19-beta_276":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_277":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_278":{"title":"React正式更新！开始学习React 19！","content":"import { useFormStatus } from \"react-dom\";\r"},"react-v19-beta_279":{"title":"React正式更新！开始学习React 19！","content":"import action from './actions';\r"},"react-v19-beta_280":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_281":{"title":"React正式更新！开始学习React 19！","content":"function Submit() {\r"},"react-v19-beta_282":{"title":"React正式更新！开始学习React 19！","content":"  const status = useFormStatus();\r"},"react-v19-beta_283":{"title":"React正式更新！开始学习React 19！","content":"  return <button disabled={status.pending}>Submit</button"},"react-v19-beta_284":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_285":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_286":{"title":"React正式更新！开始学习React 19！","content":"export default function App() {\r"},"react-v19-beta_287":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_288":{"title":"React正式更新！开始学习React 19！","content":"    <form action={action}"},"react-v19-beta_289":{"title":"React正式更新！开始学习React 19！","content":"      <Submit /"},"react-v19-beta_290":{"title":"React正式更新！开始学习React 19！","content":"    </form"},"react-v19-beta_291":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_292":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_293":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_294":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_295":{"title":"React正式更新！开始学习React 19！","content":"这个写法是不是熟悉又陌生？如果你想到了 context，那就对了，你可以理解为  替代了一部分 context provider 的能力，而且写法比 context 要更加简洁。\r"},"react-v19-beta_296":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_297":{"title":"React正式更新！开始学习React 19！","content":"使用  还有两个注意点：\r"},"react-v19-beta_298":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_299":{"title":"React正式更新！开始学习React 19！","content":"1.  Hook 必须在渲染在  内部的组件中调用。\r"},"react-v19-beta_300":{"title":"React正式更新！开始学习React 19！","content":"2.  只会返回父级  的状态信息，而不会返回同一组件或其子组件中任何其他  的状态信息。\r"},"react-v19-beta_301":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_302":{"title":"React正式更新！开始学习React 19！","content":"一个新 API——use\r"},"react-v19-beta_303":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_304":{"title":"React正式更新！开始学习React 19！","content":"以前  是被归类到 hook，但是 19 版本的文档把  放在 API 文档里面，所以它就成了一个新的 API 啦！\r"},"react-v19-beta_305":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_306":{"title":"React正式更新！开始学习React 19！","content":"use 用于在组件中读取资源的值，这个资源可以是一个 Promise 或者一个 context。\r"},"react-v19-beta_307":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_308":{"title":"React正式更新！开始学习React 19！","content":"它的基本用法如下：\r"},"react-v19-beta_309":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_310":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_311":{"title":"React正式更新！开始学习React 19！","content":"const value = use(resource);\r"},"react-v19-beta_312":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_313":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_314":{"title":"React正式更新！开始学习React 19！","content":"在实际代码中可能是这样：\r"},"react-v19-beta_315":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_316":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_317":{"title":"React正式更新！开始学习React 19！","content":"import { use } from 'react';\r"},"react-v19-beta_318":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_319":{"title":"React正式更新！开始学习React 19！","content":"function MessageComponent({ messagePromise }) {\r"},"react-v19-beta_320":{"title":"React正式更新！开始学习React 19！","content":"  const message = use(messagePromise);\r"},"react-v19-beta_321":{"title":"React正式更新！开始学习React 19！","content":"  const theme = use(ThemeContext);\r"},"react-v19-beta_322":{"title":"React正式更新！开始学习React 19！","content":"  // ...\r"},"react-v19-beta_323":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_324":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_325":{"title":"React正式更新！开始学习React 19！","content":"use 主要是给 Next.js 这样的上层框架使用的。以 Next.js 为例，如果是在服务端组件中获取数据，更推荐使用 async…await，而不是 use。如果是在客户端组件中获取数据，也推荐在服务端组件里创建 Promise，以 props 传递给客户端组件调用。\r"},"react-v19-beta_326":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_327":{"title":"React正式更新！开始学习React 19！","content":"use 还可以与 Suspense 边界共用。如果调用  的组件被包裹在一个 Suspense 边界内，会显示指定的 fallback。一旦 Promise 被 resolve，Suspense 的 fallback 就会被返回的数据替换。如果传给  的 Promise 被 reject，最近的错误边界的 fallback 将会被显示。\r"},"react-v19-beta_328":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_329":{"title":"React正式更新！开始学习React 19！","content":"ref 和 context 用法简化\r"},"react-v19-beta_330":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_331":{"title":"React正式更新！开始学习React 19！","content":"如果你只使用 React 客户端的能力，那么这一节介绍的变更会是你最关注的。\r"},"react-v19-beta_332":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_333":{"title":"React正式更新！开始学习React 19！","content":"ref 抛弃 forwardRef\r"},"react-v19-beta_334":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_335":{"title":"React正式更新！开始学习React 19！","content":"你还记得被  支配的恐惧吗？从 React 19 开始，我们可以抛弃  了。现在开始，ref 可以当作 prop 进行传递。\r"},"react-v19-beta_336":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_337":{"title":"React正式更新！开始学习React 19！","content":"举个例子：假设我们有一个函数组件 ，它是一个简单的输入框组件，接受一个  属性用于设置输入框的占位符文本。现在，我们希望在父组件中获取到输入框的引用，以便在需要时聚焦到输入框上，代码可以这么写：\r"},"react-v19-beta_338":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_339":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_340":{"title":"React正式更新！开始学习React 19！","content":"import React, { useRef } from 'react';\r"},"react-v19-beta_341":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_342":{"title":"React正式更新！开始学习React 19！","content":"// 定义一个函数组件 TextInput\r"},"react-v19-beta_343":{"title":"React正式更新！开始学习React 19！","content":"function TextInput({ placeholder, ref }) {\r"},"react-v19-beta_344":{"title":"React正式更新！开始学习React 19！","content":"  return <input placeholder={placeholder} ref={ref} />;\r"},"react-v19-beta_345":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_346":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_347":{"title":"React正式更新！开始学习React 19！","content":"// 父组件\r"},"react-v19-beta_348":{"title":"React正式更新！开始学习React 19！","content":"function ParentComponent() {\r"},"react-v19-beta_349":{"title":"React正式更新！开始学习React 19！","content":"  // 创建一个 ref 来存储输入框的引用\r"},"react-v19-beta_350":{"title":"React正式更新！开始学习React 19！","content":"  const inputRef = useRef(null);\r"},"react-v19-beta_351":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_352":{"title":"React正式更新！开始学习React 19！","content":"  // 在某个事件处理函数中获取输入框的引用并聚焦\r"},"react-v19-beta_353":{"title":"React正式更新！开始学习React 19！","content":"  const focusInput = () =\r"},"react-v19-beta_354":{"title":"React正式更新！开始学习React 19！","content":"    inputRef.current.focus();\r"},"react-v19-beta_355":{"title":"React正式更新！开始学习React 19！","content":"  };\r"},"react-v19-beta_356":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_357":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_358":{"title":"React正式更新！开始学习React 19！","content":"    <div"},"react-v19-beta_359":{"title":"React正式更新！开始学习React 19！","content":"      {/* \r"},"react-v19-beta_360":{"title":"React正式更新！开始学习React 19！","content":"        将 inputRef 传递给 TextInput 组件，\r"},"react-v19-beta_361":{"title":"React正式更新！开始学习React 19！","content":"        这样 TextInput 组件内部就可以使用这个 ref 了\r"},"react-v19-beta_362":{"title":"React正式更新！开始学习React 19！","content":"      */}\r"},"react-v19-beta_363":{"title":"React正式更新！开始学习React 19！","content":"      <TextInput placeholder=\"Enter your name\" ref={inputRef} /"},"react-v19-beta_364":{"title":"React正式更新！开始学习React 19！","content":"      <button onClick={focusInput}>Focus Input</button"},"react-v19-beta_365":{"title":"React正式更新！开始学习React 19！","content":"    </div"},"react-v19-beta_366":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_367":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_368":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_369":{"title":"React正式更新！开始学习React 19！","content":"export default ParentComponent;\r"},"react-v19-beta_370":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_371":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_372":{"title":"React正式更新！开始学习React 19！","content":"是不是心智负担比使用 forwardRef 要轻得多？\r"},"react-v19-beta_373":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_374":{"title":"React正式更新！开始学习React 19！","content":"context 可当作 provider\r"},"react-v19-beta_375":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_376":{"title":"React正式更新！开始学习React 19！","content":"从在 React 19 开始，开发者可以直接将  直接作为 provider，而不是使用 。\r"},"react-v19-beta_377":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_378":{"title":"React正式更新！开始学习React 19！","content":"假设我们有一个名为  的 context，用于管理主题信息。在 React 19 中，我们可以像下面这样使用  作为提供者：\r"},"react-v19-beta_379":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_380":{"title":"React正式更新！开始学习React 19！","content":"tsx\r"},"react-v19-beta_381":{"title":"React正式更新！开始学习React 19！","content":"import React, { createContext } from 'react';\r"},"react-v19-beta_382":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_383":{"title":"React正式更新！开始学习React 19！","content":"// 创建一个主题上下文\r"},"react-v19-beta_384":{"title":"React正式更新！开始学习React 19！","content":"const ThemeContext = createContext('');\r"},"react-v19-beta_385":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_386":{"title":"React正式更新！开始学习React 19！","content":"// App 组件作为主题提供者\r"},"react-v19-beta_387":{"title":"React正式更新！开始学习React 19！","content":"function App({ children }) {\r"},"react-v19-beta_388":{"title":"React正式更新！开始学习React 19！","content":"  return (\r"},"react-v19-beta_389":{"title":"React正式更新！开始学习React 19！","content":"    <ThemeContext value=\"dark\""},"react-v19-beta_390":{"title":"React正式更新！开始学习React 19！","content":"      {children}\r"},"react-v19-beta_391":{"title":"React正式更新！开始学习React 19！","content":"    </ThemeContext"},"react-v19-beta_392":{"title":"React正式更新！开始学习React 19！","content":"  );\r"},"react-v19-beta_393":{"title":"React正式更新！开始学习React 19！","content":"}\r"},"react-v19-beta_394":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_395":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_396":{"title":"React正式更新！开始学习React 19！","content":"未来  会被弃用并移除。\r"},"react-v19-beta_397":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_398":{"title":"React正式更新！开始学习React 19！","content":"其他更新\r"},"react-v19-beta_399":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_400":{"title":"React正式更新！开始学习React 19！","content":"本次发布的新特性还有一些属于支撑类特性和拓展服务端能力的特性，因为纯客户端的 React 开发中使用场景很少，所以不再详细介绍，只简单提炼要点：\r"},"react-v19-beta_401":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_402":{"title":"React正式更新！开始学习React 19！","content":"- 服务端组件和  将成为稳定特性，这两个概念属于熟悉 Next.js/Remix 的人已经烂熟于心，而不用 Next.js/Remix 的人根本用不到。\r"},"react-v19-beta_403":{"title":"React正式更新！开始学习React 19！","content":"-  增加了第二个参数，可选，用来表示初始值。即现在  的用法是这样： \r"},"react-v19-beta_404":{"title":"React正式更新！开始学习React 19！","content":"- 支持在 React 代码里编写 document metadata，即在页面组件编写  和  标签会自动添加应用的  上面：\r"},"react-v19-beta_405":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_406":{"title":"React正式更新！开始学习React 19！","content":"    tsx\r"},"react-v19-beta_407":{"title":"React正式更新！开始学习React 19！","content":"    function BlogPost({post}) {\r"},"react-v19-beta_408":{"title":"React正式更新！开始学习React 19！","content":"      return (\r"},"react-v19-beta_409":{"title":"React正式更新！开始学习React 19！","content":"        <article"},"react-v19-beta_410":{"title":"React正式更新！开始学习React 19！","content":"          <h1>{post.title}</h1"},"react-v19-beta_411":{"title":"React正式更新！开始学习React 19！","content":"          <title>{post.title}</title"},"react-v19-beta_412":{"title":"React正式更新！开始学习React 19！","content":"          <meta name=\"author\" content=\"Josh\" /"},"react-v19-beta_413":{"title":"React正式更新！开始学习React 19！","content":"          <link rel=\"author\" href=\"https://twitter.com/joshcstory/\" /"},"react-v19-beta_414":{"title":"React正式更新！开始学习React 19！","content":"          <meta name=\"keywords\" content={post.keywords} /"},"react-v19-beta_415":{"title":"React正式更新！开始学习React 19！","content":"          <p"},"react-v19-beta_416":{"title":"React正式更新！开始学习React 19！","content":"            Eee equals em-see-squared...\r"},"react-v19-beta_417":{"title":"React正式更新！开始学习React 19！","content":"          </p"},"react-v19-beta_418":{"title":"React正式更新！开始学习React 19！","content":"        </article"},"react-v19-beta_419":{"title":"React正式更新！开始学习React 19！","content":"      );\r"},"react-v19-beta_420":{"title":"React正式更新！开始学习React 19！","content":"    }\r"},"react-v19-beta_421":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_422":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_423":{"title":"React正式更新！开始学习React 19！","content":"- 支持在 React 代码里编写 stylesheets，即在页面组件编写 \r"},"react-v19-beta_424":{"title":"React正式更新！开始学习React 19！","content":"- 支持在 React 代码里编写 ，最终也会自动添加到  标签内\r"},"react-v19-beta_425":{"title":"React正式更新！开始学习React 19！","content":"- 支持预加载资源，最终也会自动添加到  标签内：\r"},"react-v19-beta_426":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_427":{"title":"React正式更新！开始学习React 19！","content":"    tsx\r"},"react-v19-beta_428":{"title":"React正式更新！开始学习React 19！","content":"    import { prefetchDNS, preconnect, preload, preinit } from 'react-dom'\r"},"react-v19-beta_429":{"title":"React正式更新！开始学习React 19！","content":"    function MyComponent() {\r"},"react-v19-beta_430":{"title":"React正式更新！开始学习React 19！","content":"      preinit('https://.../path/to/some/script.js', {as: 'script' }) // loads and executes this script eagerly\r"},"react-v19-beta_431":{"title":"React正式更新！开始学习React 19！","content":"      preload('https://.../path/to/font.woff', { as: 'font' }) // preloads this font\r"},"react-v19-beta_432":{"title":"React正式更新！开始学习React 19！","content":"      preload('https://.../path/to/stylesheet.css', { as: 'style' }) // preloads this stylesheet\r"},"react-v19-beta_433":{"title":"React正式更新！开始学习React 19！","content":"      prefetchDNS('https://...') // when you may not actually request anything from this host\r"},"react-v19-beta_434":{"title":"React正式更新！开始学习React 19！","content":"      preconnect('https://...') // when you will request something but aren't sure what\r"},"react-v19-beta_435":{"title":"React正式更新！开始学习React 19！","content":"    }\r"},"react-v19-beta_436":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_437":{"title":"React正式更新！开始学习React 19！","content":"    \r"},"react-v19-beta_438":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_439":{"title":"React正式更新！开始学习React 19！","content":"总结\r"},"react-v19-beta_440":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_441":{"title":"React正式更新！开始学习React 19！","content":"最后，让我用黄玄的一段话作为总结：「Probably the single most critical principle I've learned from React is to be fearless in defining new conceptual abstractions and never compromise on the accuracy and composability of these definitions——我从 React 身上学到的最重要的一条原则可能就是，在定义新的概念抽象时要无所畏惧，绝不要在这些定义的准确性和可组合性上妥协」。\r"},"react-v19-beta_442":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_443":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_444":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_445":{"title":"React正式更新！开始学习React 19！","content":"关于我\r"},"react-v19-beta_446":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_447":{"title":"React正式更新！开始学习React 19！","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"react-v19-beta_448":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_449":{"title":"React正式更新！开始学习React 19！","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"react-v19-beta_450":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_451":{"title":"React正式更新！开始学习React 19！","content":"欢迎在以下平台关注我：\r"},"react-v19-beta_452":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-beta_453":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_454":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_455":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_456":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_457":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_458":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_459":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_460":{"title":"React正式更新！开始学习React 19！","content":"- : 「BigYe程普」\r"},"react-v19-beta_461":{"title":"React正式更新！开始学习React 19！","content":"- : \r"},"react-v19-beta_462":{"title":"React正式更新！开始学习React 19！","content":"\r"},"react-v19-preview":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 19 发布在即，抢先学习一下新特性","display":"\r"},"react-v19-preview_0":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_1":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 上一次发布版本还要追溯到2022年6月14日，版本号是18.2.0。在大前端领域，一项热门技术更新如此缓慢属实罕见。这也引起社区里一些大佬的不满，在我的上一篇文章里有提到，感兴趣的朋友可以点击查看：。\r"},"react-v19-preview_2":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_3":{"title":"React 19 发布在即，抢先学习一下新特性","content":"在社区不满的声音越来越大的背景下，React 新版本的消息终于来了。\r"},"react-v19-preview_4":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_5":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 团队也回应了迟迟未发布新的正式版本的质疑：此前发布到 Canary 版本的多项特性，因为这些特性是相互关联的，所以 React 团队需要投入大量时间确保它们能够协同工作，然后才能逐步发布到 Stable 版本。\r"},"react-v19-preview_6":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_7":{"title":"React 19 发布在即，抢先学习一下新特性","content":"事实也确实如此，虽然在这将近两年的时间里 React 没有发布正式版本，但是 Canary 却有一些重磅更新，例如：、 hook，、 指令。这些更新客观上丰富了 React 生态系统，特别是推动了 Next.js 和 Remix 等全栈框架的高速发展。\r"},"react-v19-preview_8":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_9":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 团队已经确定，下一个版本将是大版本号，即版本号会是 19.0.0。\r"},"react-v19-preview_10":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_11":{"title":"React 19 发布在即，抢先学习一下新特性","content":"<Aside"},"react-v19-preview_12":{"title":"React 19 发布在即，抢先学习一下新特性","content":"欢迎加入「🌍」，一起交流学习前端和Node技术\r"},"react-v19-preview_13":{"title":"React 19 发布在即，抢先学习一下新特性","content":"</Aside"},"react-v19-preview_14":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_15":{"title":"React 19 发布在即，抢先学习一下新特性","content":"v19 新特性预测\r"},"react-v19-preview_16":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_17":{"title":"React 19 发布在即，抢先学习一下新特性","content":"现在，让我们根据 React 团队最新发布的消息，来抢先学习一下 v19 版本可能正式发布的新特性。\r"},"react-v19-preview_18":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_19":{"title":"React 19 发布在即，抢先学习一下新特性","content":"自动记忆化\r"},"react-v19-preview_20":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_21":{"title":"React 19 发布在即，抢先学习一下新特性","content":"你是否还记得 React Conf 2021 上黄玄介绍的 React Forget？\r"},"react-v19-preview_22":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_23":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_24":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_25":{"title":"React 19 发布在即，抢先学习一下新特性","content":"现在，它来了。\r"},"react-v19-preview_26":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_27":{"title":"React 19 发布在即，抢先学习一下新特性","content":"它是一个编译器，目前已经在 instagram 的生产环境中应用，React 团队计划在 Meta 的更多平台中应用，并且未来会进行开源发布。\r"},"react-v19-preview_28":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_29":{"title":"React 19 发布在即，抢先学习一下新特性","content":"在使用新编译器以前，我们使用  和  来手动缓存状态，以减少不必要的重新渲染，这种实现方式虽然可行，但 React 团队认为这并不是他们认为理想的方式，他们一直寻找让 React 在状态变化时自动且只重新渲染必要部分的方案。经过多年的攻坚，现在新的编译器成功落地了。\r"},"react-v19-preview_30":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_31":{"title":"React 19 发布在即，抢先学习一下新特性","content":"新的 React 编译器会是一个开箱即用的特性，对开发者来说是又一次开发范式的改变，这也是 v19 最让人期待的功能。\r"},"react-v19-preview_32":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_33":{"title":"React 19 发布在即，抢先学习一下新特性","content":"好玩的是，React 团队在介绍新编译器时完全没有提到“React Forget”，这也让好事的网友爆梗了：They forget React Forget & forget to mentioned Forget in the Forget section.🤣\r"},"react-v19-preview_34":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_35":{"title":"React 19 发布在即，抢先学习一下新特性","content":"Actions\r"},"react-v19-preview_36":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_37":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React Actions 是 React 团队在探索客户端向服务器发送数据的解决方案过程中发展出来的，这个功能允许开发者向 DOM 元素（如 ）传递一个函数：\r"},"react-v19-preview_38":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_39":{"title":"React 19 发布在即，抢先学习一下新特性","content":"html\r"},"react-v19-preview_40":{"title":"React 19 发布在即，抢先学习一下新特性","content":"<form action={search}"},"react-v19-preview_41":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  <input name=\"query\" /"},"react-v19-preview_42":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  <button type=\"submit\">Search</button"},"react-v19-preview_43":{"title":"React 19 发布在即，抢先学习一下新特性","content":"</form"},"react-v19-preview_44":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_45":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_46":{"title":"React 19 发布在即，抢先学习一下新特性","content":"action 函数可以同步或异步操作。使用 action 时，React 将为开发者管理数据提交的生命周期，我们可以通过  这两个 hook 来访问表单操作的当前状态和响应。\r"},"react-v19-preview_47":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_48":{"title":"React 19 发布在即，抢先学习一下新特性","content":"action 可以在执行数据库变更（如增加、删除、更新数据）和实现表单（如登录表单、注册表单）等中使用。\r"},"react-v19-preview_49":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_50":{"title":"React 19 发布在即，抢先学习一下新特性","content":"action 不仅可以与  结合使用，还可以用与  结合使用。详细展开篇幅就会很长了，你可以关注我，很快我会单独写一篇文章介绍 action 的详细用法。\r"},"react-v19-preview_51":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_52":{"title":"React 19 发布在即，抢先学习一下新特性","content":"指令：use client 与 use server\r"},"react-v19-preview_53":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_54":{"title":"React 19 发布在即，抢先学习一下新特性","content":" 两个指令在 Canary 版本发布已久，终于也要在 v19 版本里加入 Stable 版本了。\r"},"react-v19-preview_55":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_56":{"title":"React 19 发布在即，抢先学习一下新特性","content":"此前社区频频有人因为 Next.js 在生产环境使用这两个指令而指责 Next.js 在破坏 React 生态、批评 React 团队纵容 Next.js 超前使用非稳定特性。其实大可不必，因为这两个指令就是为 Next.js 和 Remix 这样的全栈框架设计的，短期内普通开发者使用 React 开发应用几乎不会用到它们。\r"},"react-v19-preview_57":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_58":{"title":"React 19 发布在即，抢先学习一下新特性","content":"如果你是使用 React，而不是使用全栈框架，你只需要了解这两个指令的作用即可： 标记了前端和服务端两个环境的“分割点”， 标签，而  告诉打包工具生成一个POST端点。这两个指令能够让开发者在一份文件里同时写客户端代码和服务端代码。\r"},"react-v19-preview_59":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_60":{"title":"React 19 发布在即，抢先学习一下新特性","content":"<Aside"},"react-v19-preview_61":{"title":"React 19 发布在即，抢先学习一下新特性","content":"如果你对这两个指令感兴趣，可以来看我的另一篇文章：「🌍」\r"},"react-v19-preview_62":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_63":{"title":"React 19 发布在即，抢先学习一下新特性","content":"</Aside"},"react-v19-preview_64":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_65":{"title":"React 19 发布在即，抢先学习一下新特性","content":"useOptimistic 乐观更新\r"},"react-v19-preview_66":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_67":{"title":"React 19 发布在即，抢先学习一下新特性","content":"<Aside"},"react-v19-preview_68":{"title":"React 19 发布在即，抢先学习一下新特性","content":"：是一种在前端开发中常用的处理异步操作反馈的策略。它基于一种“乐观”的假设：即假设无论我们向服务器发送什么请求，这些操作都将成功执行，因此在得到服务器响应之前，我们就提前在用户界面上渲染这些改变。使用场景：点赞、评论、任务添加编辑等。\r"},"react-v19-preview_69":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_70":{"title":"React 19 发布在即，抢先学习一下新特性","content":"</Aside"},"react-v19-preview_71":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_72":{"title":"React 19 发布在即，抢先学习一下新特性","content":" 允许你在异步操作（如网络请求）进行时，乐观地更新 UI。它通过接受当前状态和一个更新函数作为参数，返回一个在异步操作期间可能会有所不同的状态副本。你需要提供一个函数，这个函数接收当前状态和操作的输入，并返回在操作等待期间使用的乐观状态。\r"},"react-v19-preview_73":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_74":{"title":"React 19 发布在即，抢先学习一下新特性","content":"它的用法定义如下：\r"},"react-v19-preview_75":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_76":{"title":"React 19 发布在即，抢先学习一下新特性","content":"jsx\r"},"react-v19-preview_77":{"title":"React 19 发布在即，抢先学习一下新特性","content":"const [optimisticState, addOptimistic] = useOptimistic(state, updateFn);\r"},"react-v19-preview_78":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_79":{"title":"React 19 发布在即，抢先学习一下新特性","content":"// or\r"},"react-v19-preview_80":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_81":{"title":"React 19 发布在即，抢先学习一下新特性","content":"const [optimisticState, addOptimistic] = useOptimistic(\r"},"react-v19-preview_82":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  state,\r"},"react-v19-preview_83":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  // updateFn\r"},"react-v19-preview_84":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  (currentState, optimisticValue) =\r"},"react-v19-preview_85":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    // merge and return new state with optimistic value\r"},"react-v19-preview_86":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  }\r"},"react-v19-preview_87":{"title":"React 19 发布在即，抢先学习一下新特性","content":");\r"},"react-v19-preview_88":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_89":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_90":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_91":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_92":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : 初始状态值，以及在没有操作进行时返回的值。\r"},"react-v19-preview_93":{"title":"React 19 发布在即，抢先学习一下新特性","content":"-  的乐观值，返回结果乐观状态。 和  和  的合并值。\r"},"react-v19-preview_94":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_95":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_96":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_97":{"title":"React 19 发布在即，抢先学习一下新特性","content":"-  返回的值，没有操作正在进行，它等于 。\r"},"react-v19-preview_98":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- （任意类型），并调用带有  的 。\r"},"react-v19-preview_99":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_100":{"title":"React 19 发布在即，抢先学习一下新特性","content":"更详细的用法如下：\r"},"react-v19-preview_101":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_102":{"title":"React 19 发布在即，抢先学习一下新特性","content":"jsx\r"},"react-v19-preview_103":{"title":"React 19 发布在即，抢先学习一下新特性","content":"import { useOptimistic } from 'react';\r"},"react-v19-preview_104":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_105":{"title":"React 19 发布在即，抢先学习一下新特性","content":"function AppContainer() {\r"},"react-v19-preview_106":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  const [state, setState] = useState(initialState); // 假设有一个初始状态\r"},"react-v19-preview_107":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  const [optimisticState, addOptimistic] = useOptimistic(\r"},"react-v19-preview_108":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    state,\r"},"react-v19-preview_109":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    // updateFn\r"},"react-v19-preview_110":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    (currentState, optimisticValue) =\r"},"react-v19-preview_111":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      // 合并返回：新状态、乐观值\r"},"react-v19-preview_112":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      return { ...currentState, ...optimisticValue };\r"},"react-v19-preview_113":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    }\r"},"react-v19-preview_114":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  );\r"},"react-v19-preview_115":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_116":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  // 假设有一个异步操作，如提交表单\r"},"react-v19-preview_117":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  function handleSubmit(data) {\r"},"react-v19-preview_118":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    // 在实际数据提交前，使用乐观更新\r"},"react-v19-preview_119":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    addOptimistic({ data: 'optimistic data' });\r"},"react-v19-preview_120":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_121":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    // 然后执行异步操作\r"},"react-v19-preview_122":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    fetch('/api/submit', {\r"},"react-v19-preview_123":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      method: 'POST',\r"},"react-v19-preview_124":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      headers: {\r"},"react-v19-preview_125":{"title":"React 19 发布在即，抢先学习一下新特性","content":"        'Content-Type': 'application/json',\r"},"react-v19-preview_126":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      },\r"},"react-v19-preview_127":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      body: JSON.stringify(data),\r"},"react-v19-preview_128":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    })\r"},"react-v19-preview_129":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    .then(response =\r"},"react-v19-preview_130":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    .then(realData =\r"},"react-v19-preview_131":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      // 使用实际数据更新状态\r"},"react-v19-preview_132":{"title":"React 19 发布在即，抢先学习一下新特性","content":"      setState(prevState =\r"},"react-v19-preview_133":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    });\r"},"react-v19-preview_134":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  }\r"},"react-v19-preview_135":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_136":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  return (\r"},"react-v19-preview_137":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    // 使用 optimisticState 来渲染 UI\r"},"react-v19-preview_138":{"title":"React 19 发布在即，抢先学习一下新特性","content":"    <div>{optimisticState.data}</div"},"react-v19-preview_139":{"title":"React 19 发布在即，抢先学习一下新特性","content":"  );\r"},"react-v19-preview_140":{"title":"React 19 发布在即，抢先学习一下新特性","content":"}\r"},"react-v19-preview_141":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_142":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_143":{"title":"React 19 发布在即，抢先学习一下新特性","content":"useOptimistic 会在异步操作进行时先渲染预期的结果，等到异步操作完成，状态更新后，再渲染真实的返回结果（无论成功和失败）。\r"},"react-v19-preview_144":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_145":{"title":"React 19 发布在即，抢先学习一下新特性","content":"其它更新\r"},"react-v19-preview_146":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_147":{"title":"React 19 发布在即，抢先学习一下新特性","content":"除此之外，React 团队成员  还透露2024年还会有以下变化：\r"},"react-v19-preview_148":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_149":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- forwardRef → ref is a prop：简化对子组件内部元素或组件的引用方式，使  作为一个普通的prop传递\r"},"react-v19-preview_150":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- React.lazy → RSC, promise-as-child：增强了代码分割和懒加载能力\r"},"react-v19-preview_151":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- useContext → use(Context)：提供一种新的方式来访问 Context\r"},"react-v19-preview_152":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- throw promise → use(promise)：改进异步数据加载的处理方式\r"},"react-v19-preview_153":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- \\<Context.Provider\r"},"react-v19-preview_154":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_155":{"title":"React 19 发布在即，抢先学习一下新特性","content":"但目前 React 官网没有对以上潜在更新提供详细的信息。\r"},"react-v19-preview_156":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_157":{"title":"React 19 发布在即，抢先学习一下新特性","content":"总结\r"},"react-v19-preview_158":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_159":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 的愿景很大，他们希望打破前端和后端的边界，在维持自身客户端能力优势的基础上，同时为社区的全栈框架提供基建。我非常认可他们的做法，因为打破了端的边界，才能帮助前端工程师打破职业天花板。\r"},"react-v19-preview_160":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_161":{"title":"React 19 发布在即，抢先学习一下新特性","content":"React 19 会是引入 hooks 之后又一次里程碑式版本， 说新版本将在 3 月或 4 月发布，让我们拭目以待！\r"},"react-v19-preview_162":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_163":{"title":"React 19 发布在即，抢先学习一下新特性","content":"关于我\r"},"react-v19-preview_164":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_165":{"title":"React 19 发布在即，抢先学习一下新特性","content":"我是一名全栈工程师，Next.js 开源手艺人，AI降临派。\r"},"react-v19-preview_166":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_167":{"title":"React 19 发布在即，抢先学习一下新特性","content":"今年致力于 Next.js 和 Node.js 领域的开源项目开发和知识分享。\r"},"react-v19-preview_168":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_169":{"title":"React 19 发布在即，抢先学习一下新特性","content":"欢迎在以下平台关注我：\r"},"react-v19-preview_170":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"react-v19-preview_171":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_172":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_173":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_174":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_175":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_176":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_177":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_178":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : 「BigYe程普」\r"},"react-v19-preview_179":{"title":"React 19 发布在即，抢先学习一下新特性","content":"- : \r"},"react-v19-preview_180":{"title":"React 19 发布在即，抢先学习一下新特性","content":"\r"},"indie-hacker-tech-stack-tools":{"title":"我整理了一份独立开发者出海技术栈","content":"我整理了一份独立开发者出海技术栈","display":"\r"},"indie-hacker-tech-stack-tools_0":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_1":{"title":"我整理了一份独立开发者出海技术栈","content":"出海第一步，搞定工具库。\r"},"indie-hacker-tech-stack-tools_2":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_3":{"title":"我整理了一份独立开发者出海技术栈","content":"<img src=\"/assets/044/1.jpg\" width=\"30%\" /"},"indie-hacker-tech-stack-tools_4":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_5":{"title":"我整理了一份独立开发者出海技术栈","content":"最近把一位只会 Vue 的同事掰成 React 程序员了😼。为了让他更快了解 Next.js 和出海需要的技术栈，我根据自己的经验和 、 分享的信息，整理了一份独立开发者出海工具库发到 Github，24小时突破了500 star。\r"},"indie-hacker-tech-stack-tools_6":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_7":{"title":"我整理了一份独立开发者出海技术栈","content":"Github地址：https://github.com/weijunext/indie-hacker-tools\r"},"indie-hacker-tech-stack-tools_8":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_9":{"title":"我整理了一份独立开发者出海技术栈","content":"Web 开发模板\r"},"indie-hacker-tech-stack-tools_10":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_11":{"title":"我整理了一份独立开发者出海技术栈","content":"| 模板 | 特性 |\r"},"indie-hacker-tech-stack-tools_12":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_13":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://github.com/weijunext/smart-excel-ai | Next.js。集成登录、支付（lemon squeezy）、AI功能 |\r"},"indie-hacker-tech-stack-tools_14":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://github.com/wasp-lang/open-saas/ | React + Node.js。集成登录、支付（stripe）、邮件、AI功能 |\r"},"indie-hacker-tech-stack-tools_15":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://shipfa.st/ | Next.js。集成登录、支付（stripe）、邮件、AI功能 |\r"},"indie-hacker-tech-stack-tools_16":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_17":{"title":"我整理了一份独立开发者出海技术栈","content":"Chrome 插件开发模板\r"},"indie-hacker-tech-stack-tools_18":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_19":{"title":"我整理了一份独立开发者出海技术栈","content":"| 模板 | 特性 |\r"},"indie-hacker-tech-stack-tools_20":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_21":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.plasmo.com/ | 支持 React、Vue 等多种前端框架 |\r"},"indie-hacker-tech-stack-tools_22":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://wxt.dev/ | 支持 Vue、Svelte 等多种前端框架 |\r"},"indie-hacker-tech-stack-tools_23":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_24":{"title":"我整理了一份独立开发者出海技术栈","content":"技术栈推荐\r"},"indie-hacker-tech-stack-tools_25":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_26":{"title":"我整理了一份独立开发者出海技术栈","content":"前端\r"},"indie-hacker-tech-stack-tools_27":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_28":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_29":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_30":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://nextjs.org/🌟 | 基于 React。附属学习教程：https://nextjs.weijunext.com/ |\r"},"indie-hacker-tech-stack-tools_31":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://remix.run/ | 基于 React |\r"},"indie-hacker-tech-stack-tools_32":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://nuxt.com/ | 基于 Vue |\r"},"indie-hacker-tech-stack-tools_33":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_34":{"title":"我整理了一份独立开发者出海技术栈","content":"后端\r"},"indie-hacker-tech-stack-tools_35":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_36":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_37":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_38":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://docs.nestjs.com/ | 基于 Node.js |\r"},"indie-hacker-tech-stack-tools_39":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://midwayjs.org/ | 基于 Node.js |\r"},"indie-hacker-tech-stack-tools_40":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_41":{"title":"我整理了一份独立开发者出海技术栈","content":"数据库\r"},"indie-hacker-tech-stack-tools_42":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_43":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_44":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_45":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://supabase.com/🌟 | 支持数据库、文件存储、登录鉴权 |\r"},"indie-hacker-tech-stack-tools_46":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://console.upstash.com/🌟 | 支持 Redis、kafka、向量数据库 |\r"},"indie-hacker-tech-stack-tools_47":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.mongodb.com/products/platform/cloud🌟 | Mongodb 官方提供一个免费数据库 |\r"},"indie-hacker-tech-stack-tools_48":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_49":{"title":"我整理了一份独立开发者出海技术栈","content":"ORM\r"},"indie-hacker-tech-stack-tools_50":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_51":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_52":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_53":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://prisma.io/🌟 |  |\r"},"indie-hacker-tech-stack-tools_54":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_55":{"title":"我整理了一份独立开发者出海技术栈","content":"样式与UI库\r"},"indie-hacker-tech-stack-tools_56":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_57":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_58":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_59":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://tailwindcss.com/🌟 |  |\r"},"indie-hacker-tech-stack-tools_60":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://ui.shadcn.com/🌟 |  |\r"},"indie-hacker-tech-stack-tools_61":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_62":{"title":"我整理了一份独立开发者出海技术栈","content":"登录鉴权\r"},"indie-hacker-tech-stack-tools_63":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_64":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_65":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_66":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://clerk.com/🌟 |  |\r"},"indie-hacker-tech-stack-tools_67":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://supabase.com/ | PostgreSQL数据库、文件存储、登录鉴权 |\r"},"indie-hacker-tech-stack-tools_68":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://next-auth.js.org/ |  |\r"},"indie-hacker-tech-stack-tools_69":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://authjs.dev/getting-started/introduction | v5 配置和 v4 不同，请注意区分。https://github.com/AntonioErdeljac/next-auth-v5-advanced-guide |\r"},"indie-hacker-tech-stack-tools_70":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_71":{"title":"我整理了一份独立开发者出海技术栈","content":"支付\r"},"indie-hacker-tech-stack-tools_72":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_73":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_74":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_75":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.lemonsqueezy.com/🌟 | 支持个人香港卡、虚拟卡，国内开发者首选 |\r"},"indie-hacker-tech-stack-tools_76":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://stripe.com/ | 需要企业资质 |\r"},"indie-hacker-tech-stack-tools_77":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_78":{"title":"我整理了一份独立开发者出海技术栈","content":"邮件\r"},"indie-hacker-tech-stack-tools_79":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_80":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_81":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_82":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://resend.com/ |  |\r"},"indie-hacker-tech-stack-tools_83":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://github.com/nodemailer/nodemailer |  |\r"},"indie-hacker-tech-stack-tools_84":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://react.email/ |  |\r"},"indie-hacker-tech-stack-tools_85":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_86":{"title":"我整理了一份独立开发者出海技术栈","content":"网站分析\r"},"indie-hacker-tech-stack-tools_87":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_88":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_89":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_90":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://analytics.google.com/analytics/web/ |  |\r"},"indie-hacker-tech-stack-tools_91":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://plausible.io/ |  |\r"},"indie-hacker-tech-stack-tools_92":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_93":{"title":"我整理了一份独立开发者出海技术栈","content":"在线客服\r"},"indie-hacker-tech-stack-tools_94":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_95":{"title":"我整理了一份独立开发者出海技术栈","content":"| 技术栈 | 备注 |\r"},"indie-hacker-tech-stack-tools_96":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_97":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://tawk.to/ | 中国地区可注册 |\r"},"indie-hacker-tech-stack-tools_98":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_99":{"title":"我整理了一份独立开发者出海技术栈","content":"部署与托管\r"},"indie-hacker-tech-stack-tools_100":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_101":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_102":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_103":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://vercel.com/dashboard🌟 | 首选 |\r"},"indie-hacker-tech-stack-tools_104":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://aircode.io/ | 字节跳动出品 |\r"},"indie-hacker-tech-stack-tools_105":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://zeabur.com/ | 国内出海团队出品 |\r"},"indie-hacker-tech-stack-tools_106":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://railway.app/ |  |\r"},"indie-hacker-tech-stack-tools_107":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.netlify.com/ |  |\r"},"indie-hacker-tech-stack-tools_108":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://pages.github.com/ |  |\r"},"indie-hacker-tech-stack-tools_109":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://developers.cloudflare.com/pages/ |  |\r"},"indie-hacker-tech-stack-tools_110":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_111":{"title":"我整理了一份独立开发者出海技术栈","content":"域名购买\r"},"indie-hacker-tech-stack-tools_112":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_113":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_114":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_115":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.namesilo.com/🌟 | 自动屏蔽whois |\r"},"indie-hacker-tech-stack-tools_116":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.namecheap.com/ | 据说比较便宜 |\r"},"indie-hacker-tech-stack-tools_117":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.godaddy.com/ | 狗爹，懂的都懂 |\r"},"indie-hacker-tech-stack-tools_118":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://wanwang.aliyun.com/domain https://cloud.tencent.com/act/pro/domain-sale https://www.volcengine.com/product/domain-service | 国内平台，cn域名首选平台 |\r"},"indie-hacker-tech-stack-tools_119":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_120":{"title":"我整理了一份独立开发者出海技术栈","content":"文档管理\r"},"indie-hacker-tech-stack-tools_121":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_122":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_123":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_124":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://notion.so/ |  |\r"},"indie-hacker-tech-stack-tools_125":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_126":{"title":"我整理了一份独立开发者出海技术栈","content":"logo\r"},"indie-hacker-tech-stack-tools_127":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_128":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_129":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_130":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://iconbuddy.app/logo-maker | logo 设计 |\r"},"indie-hacker-tech-stack-tools_131":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://icon.ray.so/ | logo 设计 |\r"},"indie-hacker-tech-stack-tools_132":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://icon.horse/ | logo 探测 |\r"},"indie-hacker-tech-stack-tools_133":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://realfavicongenerator.net/ | 生成多平台多种类logo(ico、PNG、SVG) |\r"},"indie-hacker-tech-stack-tools_134":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://www.bitbug.net/ | PNG/JPG 转 ico |\r"},"indie-hacker-tech-stack-tools_135":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_136":{"title":"我整理了一份独立开发者出海技术栈","content":"图标库\r"},"indie-hacker-tech-stack-tools_137":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_138":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_139":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_140":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://iconbuddy.app/ |  |\r"},"indie-hacker-tech-stack-tools_141":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://fontawesome.com/icons |  |\r"},"indie-hacker-tech-stack-tools_142":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_143":{"title":"我整理了一份独立开发者出海技术栈","content":"图片视频处理工具\r"},"indie-hacker-tech-stack-tools_144":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_145":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_146":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_147":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://tinypng.com/ | 图片压缩 |\r"},"indie-hacker-tech-stack-tools_148":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://tinify.cn/ | 图片压缩 - 国内版 |\r"},"indie-hacker-tech-stack-tools_149":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://ezgif.com/video-to-gif | 视频转 GIF |\r"},"indie-hacker-tech-stack-tools_150":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_151":{"title":"我整理了一份独立开发者出海技术栈","content":"录屏\r"},"indie-hacker-tech-stack-tools_152":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_153":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_154":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_155":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://gemoo.com/focusee/ |  |\r"},"indie-hacker-tech-stack-tools_156":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_157":{"title":"我整理了一份独立开发者出海技术栈","content":"短链\r"},"indie-hacker-tech-stack-tools_158":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_159":{"title":"我整理了一份独立开发者出海技术栈","content":"| 平台 | 备注 |\r"},"indie-hacker-tech-stack-tools_160":{"title":"我整理了一份独立开发者出海技术栈","content":"|  |  |\r"},"indie-hacker-tech-stack-tools_161":{"title":"我整理了一份独立开发者出海技术栈","content":"| https://github.com/dubinc/dub | 免费用户每个月可以创建25个链接 |\r"},"indie-hacker-tech-stack-tools_162":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_163":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_164":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_165":{"title":"我整理了一份独立开发者出海技术栈","content":"- 帮助独立开发者提升开发效率\r"},"indie-hacker-tech-stack-tools_166":{"title":"我整理了一份独立开发者出海技术栈","content":"- 帮助独立开发者降低成本\r"},"indie-hacker-tech-stack-tools_167":{"title":"我整理了一份独立开发者出海技术栈","content":"- 市场上足够流行\r"},"indie-hacker-tech-stack-tools_168":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"indie-hacker-tech-stack-tools_169":{"title":"我整理了一份独立开发者出海技术栈","content":"Github 持续更新中，欢迎关注👉：https://github.com/weijunext/indie-hacker-tools\r"},"indie-hacker-tech-stack-tools_170":{"title":"我整理了一份独立开发者出海技术栈","content":"\r"},"react-server-components-discussion":{"title":"React Server Components引发的分歧与机遇","content":"React Server Components引发的分歧与机遇","display":"\r"},"react-server-components-discussion_0":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_1":{"title":"React Server Components引发的分歧与机遇","content":"介绍 React Server Components\r"},"react-server-components-discussion_2":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_3":{"title":"React Server Components引发的分歧与机遇","content":"在以前，当用户访问一个 React 应用时，服务端会返回一个空的 HMTL 文件，里面包含一个或多个 JavaScript 文件，浏览器解析 HTML，然后下载 JavaScript 文件，并在客户端呈现网页。\r"},"react-server-components-discussion_4":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_5":{"title":"React Server Components引发的分歧与机遇","content":"<Aside"},"react-server-components-discussion_6":{"title":"React Server Components引发的分歧与机遇","content":"欢迎加入「🌍」，一起学习交流前端和Node技术\r"},"react-server-components-discussion_7":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_8":{"title":"React Server Components引发的分歧与机遇","content":"</Aside"},"react-server-components-discussion_9":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_10":{"title":"React Server Components引发的分歧与机遇","content":"React Server Components（RSC）的出现拓展了 React 的范围。顾名思义，React Server Components 就是 React 的服务端组件，它们只在服务端运行，可以调用服务端的方法、访问数据库等。RSC 每次预渲染后把 HTML 发送到客户端，由客户端进行水合（hydrate）并正式渲染。这种做法的好处是，一部分原本要打包在客户端 JavaScript 文件里的代码，现在可以放在服务端运行了，从而减轻客户端的负担，提升应用的整体性能和响应速度。\r"},"react-server-components-discussion_11":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_12":{"title":"React Server Components引发的分歧与机遇","content":"「充分利用服务器资源」是发布 RSC 的最大动机，换句话说就是：一切不需要交互的内容都应当放到服务端。React 官方举了一个非常典型的例子——渲染 markdown 内容，\r"},"react-server-components-discussion_13":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_14":{"title":"React Server Components引发的分歧与机遇","content":"jsx\r"},"react-server-components-discussion_15":{"title":"React Server Components引发的分歧与机遇","content":"// 客户端组件渲染\r"},"react-server-components-discussion_16":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_17":{"title":"React Server Components引发的分歧与机遇","content":"import marked from 'marked'; // 35.9K (11.2K gzipped)\r"},"react-server-components-discussion_18":{"title":"React Server Components引发的分歧与机遇","content":"import sanitizeHtml from 'sanitize-html'; // 206K (63.3K gzipped)\r"},"react-server-components-discussion_19":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_20":{"title":"React Server Components引发的分歧与机遇","content":"function NoteWithMarkdown({text}) {\r"},"react-server-components-discussion_21":{"title":"React Server Components引发的分歧与机遇","content":"  const html = sanitizeHtml(marked(text));\r"},"react-server-components-discussion_22":{"title":"React Server Components引发的分歧与机遇","content":"  return (//);\r"},"react-server-components-discussion_23":{"title":"React Server Components引发的分歧与机遇","content":"}\r"},"react-server-components-discussion_24":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_25":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_26":{"title":"React Server Components引发的分歧与机遇","content":"这个例子中，如果用客户端组件渲染，客户端至少要下载 200 多k的文件才能渲染出内容，但这里的 markdown 内容其实不需要交互，也不会因为用户的操作产生更新信息的需求，非常符合使用 RSC 的理念。如果使用 RSC，\r"},"react-server-components-discussion_27":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_28":{"title":"React Server Components引发的分歧与机遇","content":"jsx\r"},"react-server-components-discussion_29":{"title":"React Server Components引发的分歧与机遇","content":"// 服务器组件渲染\r"},"react-server-components-discussion_30":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_31":{"title":"React Server Components引发的分歧与机遇","content":"import marked from 'marked'; // 零打包大小\r"},"react-server-components-discussion_32":{"title":"React Server Components引发的分歧与机遇","content":"import sanitizeHtml from 'sanitize-html'; // 零打包大小\r"},"react-server-components-discussion_33":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_34":{"title":"React Server Components引发的分歧与机遇","content":"function NoteWithMarkdown({text}) {\r"},"react-server-components-discussion_35":{"title":"React Server Components引发的分歧与机遇","content":"  // 与之前相同\r"},"react-server-components-discussion_36":{"title":"React Server Components引发的分歧与机遇","content":"}\r"},"react-server-components-discussion_37":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_38":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_39":{"title":"React Server Components引发的分歧与机遇","content":"依赖包放在服务端，服务端只返回用户需要看到的内容，客户端包一下子就小了 200 多k。\r"},"react-server-components-discussion_40":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_41":{"title":"React Server Components引发的分歧与机遇","content":"直到这里，社区主流观点都是积极的，直到 Next.js 基于 RSC 的特性野蛮狂奔，分歧出现了。\r"},"react-server-components-discussion_42":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_43":{"title":"React Server Components引发的分歧与机遇","content":"社区分歧\r"},"react-server-components-discussion_44":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_45":{"title":"React Server Components引发的分歧与机遇","content":"出现分歧的最根本原因是 React 引入了服务端的概念，服务端组件和客户端组件有着明显差异：\r"},"react-server-components-discussion_46":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_47":{"title":"React Server Components引发的分歧与机遇","content":"- 服务器组件不能使用像  和  这样的 React hook；客户端则可以；\r"},"react-server-components-discussion_48":{"title":"React Server Components引发的分歧与机遇","content":"- 服务器组件无权访问浏览器 API；客户端有完整的浏览器 API 权限；\r"},"react-server-components-discussion_49":{"title":"React Server Components引发的分歧与机遇","content":"- 服务端有权限直接访问服务端程序和 API；而客户端组件只能通过请求访问部分程序。\r"},"react-server-components-discussion_50":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_51":{"title":"React Server Components引发的分歧与机遇","content":"随着 Next.js v13 和 v14 版本发布，React 仍然是金丝雀版本的 RSC 被 Next.js 搬到生产环境， 和  被越来越多人讨论，开发者们说现在有「两个 React」，社区开始争吵 React 这些年在进步还是在退步？\r"},"react-server-components-discussion_52":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_53":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_54":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_55":{"title":"React Server Components引发的分歧与机遇","content":"社区里反对的声音\r"},"react-server-components-discussion_56":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_57":{"title":"React Server Components引发的分歧与机遇","content":"首先是知名软件工程师 ，她指出 React 这两年的发展问题：\r"},"react-server-components-discussion_58":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_59":{"title":"React Server Components引发的分歧与机遇","content":"- 「两个 React」带来的新概念对大多数人来说并不是清晰易懂的知识，这种分裂可能导致了额外的混淆和学习障碍。\r"},"react-server-components-discussion_60":{"title":"React Server Components引发的分歧与机遇","content":"- 自 2022 年 6 月以来 React 不仅没有新的发布，还鼓励开发者使用上层框架，而这些上层框架不等 RSC 升级成稳定版，就发布了基于 RSC 的特性（就差点名 Next.js 了）。\r"},"react-server-components-discussion_61":{"title":"React Server Components引发的分歧与机遇","content":"- React 近些年有成员加入其他上层框架的团队，不仅疏于更新版本，还疏于更新文档。\r"},"react-server-components-discussion_62":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_63":{"title":"React Server Components引发的分歧与机遇","content":"React Query 的开发者  也对 React 的发展表达了担忧和不满：\r"},"react-server-components-discussion_64":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_65":{"title":"React Server Components引发的分歧与机遇","content":"- 自从 React 引入 hooks 和 suspense API 以来，React 过分专注于少数几个概念，这些新概念虽然在技术上推动了单线程 UI API 的极限和边界，但对他日常为用户提供价值的工作影响甚微。\r"},"react-server-components-discussion_66":{"title":"React Server Components引发的分歧与机遇","content":"- 从 RSC 发布看出来，React 团队对客户端性能已经没有那么强烈的追求了。\r"},"react-server-components-discussion_67":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_68":{"title":"React Server Components引发的分歧与机遇","content":"地图技术和可视化技术专家  对 React 生态系统的分裂进行了批评：\r"},"react-server-components-discussion_69":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_70":{"title":"React Server Components引发的分歧与机遇","content":"- 当前 React 更新缓慢，反而是两个上层框架Remix（由 Shopify 资助）和 Next.js（由 Vercel 资助）在激烈竞争。\r"},"react-server-components-discussion_71":{"title":"React Server Components引发的分歧与机遇","content":"- React 团队和 Next.js 团队交集过多，让 Vercel 获得了领先优势，那些不属于 Vercel 和 Facebook 生态系统的其他框架，如 Remix，它们会受到 React 中已修复但未发布错误的影响。\r"},"react-server-components-discussion_72":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_73":{"title":"React Server Components引发的分歧与机遇","content":"社区里积极的态度\r"},"react-server-components-discussion_74":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_75":{"title":"React Server Components引发的分歧与机遇","content":"面对社区里越来越多的反对声音，React 主要贡献者  也多次发表里自己看法，他对技术的变革持开放态度：\r"},"react-server-components-discussion_76":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_77":{"title":"React Server Components引发的分歧与机遇","content":"- Next.js 的 App Router 有着雄心壮志，但是现在还是发展初期，未来会迭代得更优秀。\r"},"react-server-components-discussion_78":{"title":"React Server Components引发的分歧与机遇","content":"- 客户端组件的工作是 UI = f(state)，服务端组件的工作是 UI = f(data)，React 希望组合二者的优势，实现 UI = f(data, state)，他号召社区共同推动实现这一目标。\r"},"react-server-components-discussion_79":{"title":"React Server Components引发的分歧与机遇","content":"- 对于 Next.js 把 RSC 发布到生产版本，Dan 认为“生产就绪”是一个主观的判断，虽然 RSC 还是金丝雀版本，但是 Facebook 也已经大量使用了。他认为在实践中验证才能更快完善技术，最终达到成熟和稳定。\r"},"react-server-components-discussion_80":{"title":"React Server Components引发的分歧与机遇","content":"- 新技术的发展是一个渐进的过程，涉及到不断地测试、反馈和迭代，社区的力量非常重要。\r"},"react-server-components-discussion_81":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_82":{"title":"React Server Components引发的分歧与机遇","content":"总的来说，Dan 是希望大家放下偏见，共同在实践中摸索出 React 下一阶段的变革。\r"},"react-server-components-discussion_83":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_84":{"title":"React Server Components引发的分歧与机遇","content":"我的观点\r"},"react-server-components-discussion_85":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_86":{"title":"React Server Components引发的分歧与机遇","content":"在 RSC 的讨论中，我比较认同 Dan 提出的开放和包容性的观点。我认为，面对技术的发展，要抛弃个人偏见，可以实践验证，也可以持续观察它们的发展。只有心态上拥抱变革，开发者才能在变革中找到机遇。\r"},"react-server-components-discussion_87":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_88":{"title":"React Server Components引发的分歧与机遇","content":"RSC 在提升现代 Web 应用开发绝对是有积极意义的，最显而易见的优势是它可以提高大型应用的性能、减少客户端负载、优化数据获取流程等，通过 RSC 完成这些工作会比以往的 SSR 方案要更加方便。\r"},"react-server-components-discussion_89":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"react-server-components-discussion_90":{"title":"React Server Components引发的分歧与机遇","content":"随着 Node v20 的发布和 RSC 的应用，前端和服务端的距离进一步缩小，我们有机会见证前端工作“后端化”——前端工程师会处理更多传统上属于后端的工作，如数据查询优化、服务器资源管理等。这实际上为前端工程师打开了一扇门，让我们有机会更全面地掌握整个 web 应用的开发流程，也就是我们常说的“全栈开发”。这样的转变势必会提高前端的职业天花板和扩大前端工作的广度。\r"},"react-server-components-discussion_91":{"title":"React Server Components引发的分歧与机遇","content":"\r"},"2023-summary-of-front-end-and-ai":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","display":"\r"},"2023-summary-of-front-end-and-ai_0":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_1":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"去年12月初，一位朋友给我发来消息：一个 hack ChatGPT 接口的 Chrome 插件火了，迅速获得10万用户。彼时我对 AI 的认知还是「会下围棋的机器人」，我对 ChatGPT 的想法则是「让子弹飞一会儿」。因为这些年互联网有太多雷声大雨点小的概念，比如区块链、VR/AR；还有些甚至留下一堆乱摊子的概念，比如比特币、P2P；有这些前车之鉴，我很难对这个新来的 ChatGPT 有美妙的幻想。\r"},"2023-summary-of-front-end-and-ai_2":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_3":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"春江水暖鸭先知，资本嗅出了新时代即将来临。2023年3月份，多方消息显示，上面那个 Chrome 插件被200万收购，创作者的无心插柳竟让自己财富自由（广义上）。收购方是深耕企微生态圈的开发商，他们表示买下这个插件就是表明决心下一阶段深耕AI生态圈。随后，我们看到越来越多大厂跑马圈地的故事。\r"},"2023-summary-of-front-end-and-ai_4":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_5":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"现在，我们回想这12个月AI的发展进程和带来的变革，完全可以说是 ChatGPT “轰”地炸开了一个完全不同的2023年。在那之前，我们谈论Vue3、小程序、低代码和面试，在那之后，我们谈论AI、AI、AI和面试，掘金还推出了AI面试。沉闷多年的技术圈终于迎来新的周期。\r"},"2023-summary-of-front-end-and-ai_6":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_7":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"在将近一年的时间里，我忙碌地了解AI、调用AI，在年终开始为我热爱的前端和同行们思考：在新的技术周期里，前端工程师有哪些选择？\r"},"2023-summary-of-front-end-and-ai_8":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_9":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"本文首发于博客「」，欢迎加入「🌍」，一起学习交流前端和Node技术\r"},"2023-summary-of-front-end-and-ai_10":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_11":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"AI会带来什么？\r"},"2023-summary-of-front-end-and-ai_12":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_13":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"生成式AI的能力取决于模型算法、训练数据和提问（也就是Prompt）的精确度。作为用户，我们能做的是选择一个模型算法和训练数据合格的AI，然后保证提问的精确度，就能获得一位最佳助手。\r"},"2023-summary-of-front-end-and-ai_14":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_15":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"当你拥有一位任何时候都能快速响应你的需求的助手，那你就拥有了知识平权的机会。没错，我认为AI带来最大的变革就是——知识平权。AI当然无法带来完全的知识平权，但是我们可以相信它们会带来比以往更平等的知识获取权利。\r"},"2023-summary-of-front-end-and-ai_16":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_17":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"我举几个例子：\r"},"2023-summary-of-front-end-and-ai_18":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_19":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"- 翻译：你不仅可以用AI翻译，还能让AI以中文阅读习惯进行翻译；\r"},"2023-summary-of-front-end-and-ai_20":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"- 设计：通过Figma或即时设计的AI工具，你只需要描述需求，AI就能为你完成UI设计；\r"},"2023-summary-of-front-end-and-ai_21":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"- 学习：如果你是一名前端，你想学习后端或运维的知识，可以边实操边提问，AI的帮助绝对比你在搜索引擎寻找答案快速；\r"},"2023-summary-of-front-end-and-ai_22":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"- 素材资源：你不会设计，却可以让AI为你生成图片，比如这篇文章的封面图；\r"},"2023-summary-of-front-end-and-ai_23":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"- 复杂公式：以往你根本记不住的正则规则、sql语句，现在只要一句文字描述就能获得正确答案，还有比这更有冲击力的用法吗？\r"},"2023-summary-of-front-end-and-ai_24":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_25":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"在我使用AI之前，简直无法想象一个人可以快速完成这些工作，因为每一项都需要专业知识或技能的积累，而我只是一名前端工程师。拥有AI之后，在以上领域我都以极低的成本获益，这就是AI带来的知识平权。\r"},"2023-summary-of-front-end-and-ai_26":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_27":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"AI会引起技术圈巨变吗？\r"},"2023-summary-of-front-end-and-ai_28":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_29":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"时至今日，仍有很多开发人员没有从AI获益，当你没有获益的时候就很难想象AI带来的影响。\r"},"2023-summary-of-front-end-and-ai_30":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_31":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"Github与哈佛商学院的一项研究表明，到2030年，开发人员从生成式AI中受益的生产力提升预计可为全球经济贡献1.5万亿美元；而且AI工具将帮助开发人员提升30%的效率，相当于多了1500名专业开发人员（对「专业开发人员」定义不同得到的数据会不同，此处仅引用研究结果）。\r"},"2023-summary-of-front-end-and-ai_32":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_33":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_34":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_35":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"很显然，AI将给技术圈大环境带来改变。\r"},"2023-summary-of-front-end-and-ai_36":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_37":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"还有另一项数据，根据Github官方年度数据，2023年生成式AI项目数量呈现爆发式增长。在2023年以前，开发人员使用  等机器学习库构建AI项目，从2023年开始，有更多的开发人员使用AI模型和LLM（例如ChatGPT API）开发了AI项目。\r"},"2023-summary-of-front-end-and-ai_38":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_39":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_40":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_41":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"这一切归功于优秀的AI模型蓬勃发展。AI模型一旦开放API，就会降低普通开发人员的开发成本，从而促进有创意的开发人员创造出更多的AI工具，进一步降低了普通人使用AI的门槛。这是一种良性循环，而现在才第一年。\r"},"2023-summary-of-front-end-and-ai_42":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_43":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"AI大模型和普通用户之间，正是我们这些开发人员。我们既可以做AI变革下的受益者，也可以做AI变革中的一环。所以我相信，无论开发人员是使用AI工具，还是开发AI工具，都一定能挖掘出一些新的机会。\r"},"2023-summary-of-front-end-and-ai_44":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_45":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"2023前端现状如何？\r"},"2023-summary-of-front-end-and-ai_46":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_47":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"从去年到今年上半年，“前端已死论”甚嚣尘上，如今这种论调自己“已死”。因为技术是实实在在的东西，它不会因为你的雄辩和诡辩而改变。事实是这一年大前端仍在快速发展，大前端的触角伸向了更多的技术场景。\r"},"2023-summary-of-front-end-and-ai_48":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_49":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"从编程语言角度看，JavaScript持续霸占第一名，今年TypeScript也超越了Java，进入前三。\r"},"2023-summary-of-front-end-and-ai_50":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_51":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_52":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_53":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"TypeScript排名能够上升和社区的推广密不可分，但还有一个隐藏的原因则是基于AI模型开发的产品中有相当一部分是使用前端框架+Node.js或者全栈框架完成开发。\r"},"2023-summary-of-front-end-and-ai_54":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_55":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"在开源项目贡献者排行榜上，大前端与AI项目并驾齐驱，共享榜单。\r"},"2023-summary-of-front-end-and-ai_56":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_57":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_58":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_59":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"开源仓库的Star榜单，依然是大前端和AI霸榜。其中  都推出了 JavaScript 的开发库，这么做的原因也正是因为 JavaScript 拥有大量的开发者。\r"},"2023-summary-of-front-end-and-ai_60":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_61":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"一切能让 JavaScript 开发者轻松使用的库，总是能以最快速度普及开来。各家AI模型如此， 也是如此。\r"},"2023-summary-of-front-end-and-ai_62":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_63":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_64":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_65":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"如果你把前端当作用 cli 创建项目、cv 组件库代码，再写几个 if-else，那么这样的前端天花板确实很低。如果前端仅仅是这样，JavaScript 也不会成为世界第一语言。\r"},"2023-summary-of-front-end-and-ai_66":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_67":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"从各项数据我们都能看出来，前端的蛋糕足够大，而且会更大，JavaScript 已经在机器学习领域获得一席之地了，就不会被时代抛下。\r"},"2023-summary-of-front-end-and-ai_68":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_69":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"前端有哪些转型机会？\r"},"2023-summary-of-front-end-and-ai_70":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_71":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"又到了大家最喜闻乐见的话题了。\r"},"2023-summary-of-front-end-and-ai_72":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_73":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"一般的观点都是：技术人员的上限是CTO，而CTO需要有足够多的项目设计试错和积累才能诞生，前端没有这样的场景和机会，前端的天花板就是前端组长。\r"},"2023-summary-of-front-end-and-ai_74":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_75":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"如果你在纵向规划职业生涯，那么这个观点是有价值的。但你不妨脑筋急转弯一下：如果带着对行业与技术的理解，换个地方爬升，或许能打造出新的一番天地。\r"},"2023-summary-of-front-end-and-ai_76":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_77":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_78":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_79":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"我是从玉伯的演讲文章里第一次知道「产品工程师」这个概念。玉伯认为前端更了解用户，可以去做【产品经理+前端工程师】，也就是产品工程师。他本身也确实这么做，而且获得了用户的认可。我完全认可他的想法。\r"},"2023-summary-of-front-end-and-ai_80":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_81":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_82":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_83":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"在一个团队里，前端如果遇上一位不懂前端但是强势的设计师，那种感觉比遇上需求说不清的产品经理还难受，所以做一名「懂前端的UI设计师」也是一个不错的机会。\r"},"2023-summary-of-front-end-and-ai_84":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_85":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"在我的身边，就有一位老前端，他从 jQuery 时代走来，边做前端边自学UI设计，到了框架时代，转型全职UI设计师，他的设计稿能够做到既兼顾开发的可行性，又让客户认可，曾经有一个客户多次找我们领导夸界面设计超出预期。\r"},"2023-summary-of-front-end-and-ai_86":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_87":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_88":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_89":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"Node端工程师和全栈工程师在国内的需求比较小，但在国外，JS全栈是非常流行的做法。近些年风靡技术圈的低代码、无代码技术，大多也都依赖于Node端来做。\r"},"2023-summary-of-front-end-and-ai_90":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_91":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"如果你学会了Node，即使公司里没有需求，你依然可以用前端和Node技术独立做一个副业产品，给自己发展出人生的第二曲线。例如机遇 AI 大模型的 API 开发出你自己的 AI 工具。\r"},"2023-summary-of-front-end-and-ai_92":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_93":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"我希望国内前端程序员能一起学习Node端和全栈知识，推动整个行业发展，扩大前端工程师的生存空间。\r"},"2023-summary-of-front-end-and-ai_94":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_95":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"如果你想尝试全栈开发，Next.js 和 Nuxt.js 可能是不错的入门教程，它们分别是 React 和 Vue 的上层框架，学习成本较低。\r"},"2023-summary-of-front-end-and-ai_96":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_97":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_98":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_99":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_100":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_101":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"前端是一门涉及面很广的技术，JavaScript（React、Vue、Node）、CSS（包含SVG、Canvas、动画三大分支）、移动端（RN、Flutter）、客户端（Electron、Tauir）有任一项你能够深入学习，只要你觉得学有所得，就可以写技术分享文章，这样能获得正反馈，会进一步激励你继续学习。长此以往，你不仅可以成为技术专家，还能为自己在技术圈积累一些名声。\r"},"2023-summary-of-front-end-and-ai_102":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_103":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"为什么我觉得这是一项大众皆可行的方案，因为以前你为了学透一个难点，你要不断查资料、闭门思考，一个难题可能消耗十天半个月，但是现在你可以和AI讨论，AI会给你启发，让你减少闭门思考的时间。\r"},"2023-summary-of-front-end-and-ai_104":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_105":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_106":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_107":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"AI领域的机会肯定还有很多，只是现在还是发展初期，我们看到了大模型争奇斗艳，但缺乏AI技术基础和想象力，所以很难发现这个领域的机会。\r"},"2023-summary-of-front-end-and-ai_108":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_109":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"如果有人想进入机器学习的领域，我会建议去了解以下技术：\r"},"2023-summary-of-front-end-and-ai_110":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_111":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"：用于在 Web 浏览器和 Node.js 中训练和部署机器学习模型的 。\r"},"2023-summary-of-front-end-and-ai_112":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_113":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"：使用 AI 驱动的图形构建 3D 游戏和应用程序的。\r"},"2023-summary-of-front-end-and-ai_114":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_115":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"：，包括游戏、音乐和艺术\r"},"2023-summary-of-front-end-and-ai_116":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_117":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"其实总结下来，无论转型还是深耕自己熟悉的领域，都需要投入大量的时间学习。这不仅是对于前端工程师来说，是所有岗位都是如此。真正的机会和机遇都藏在不断学习和折腾之中，AI时代的知识平权则会让我们在学习与折腾里少走一些弯路。\r"},"2023-summary-of-front-end-and-ai_118":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_119":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"这是AI爆发后新技术周期的第一年，无论你是否认可AI的能力，你都得相信未来AI的能力会到达你脑子里的理想状态。无论你选择什么样的职业道路，都应尽快拥抱AI，成为新技术周期较早入场的人，去享受这个周期的技术红利，去找到自己在这个时代的技术转型机遇。\r"},"2023-summary-of-front-end-and-ai_120":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_121":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"结语\r"},"2023-summary-of-front-end-and-ai_122":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"2023-summary-of-front-end-and-ai_123":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"我原本想写大前端总结，比如写写Vue2走到生命尽头、React转型底层框架、Selvet放弃TypeScript，但思来想去，这些信息背后有再多故事也只是给前端娱乐圈增加素材，不如认真思考一下前端工程师路在何方，于是就有了这篇文章。谢谢阅读～\r"},"2023-summary-of-front-end-and-ai_124":{"title":"年终总结：新的技术周期，每个前端都有更好的职业转型机遇","content":"\r"},"css-feature-scope":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"CSS前瞻：用@scope 定义你的CSS作用域","display":"\r"},"css-feature-scope_0":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_1":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"CSS又整活了！最近，CSS的新特性  开始被浏览器兼容了。这个新特性为CSS样式提供了更精细的作用域控制，让开发者能够更灵活地管理和应用样式。\r"},"css-feature-scope_2":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_3":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"欢迎加入「🌍」，一起学习交流前端和Node技术\r"},"css-feature-scope_4":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_5":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"定义和作用\r"},"css-feature-scope_6":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_7":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":" 是一个CSS的块级规则，它允许你创建一个作用域，这个作用域定义了一组样式规则应用的特定区域。说到这里是不是让你想到了Less和SCSS的作用域？没错，它们的“作用域”是一个概念。\r"},"css-feature-scope_8":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_9":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"基本使用\r"},"css-feature-scope_10":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_11":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"作用域由两部分组成：作用域根和作用域限制。\r"},"css-feature-scope_12":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_13":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"- 作用域根(\\<scope-start>)：定义样式开始应用的节点\r"},"css-feature-scope_14":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"- 作用域限制(\\<scope-end>)（可选）：定义不受作用域影响的节点\r"},"css-feature-scope_15":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"- 样式规则（\\<rule-list>）： 内定义的样式\r"},"css-feature-scope_16":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_17":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_18":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope [(<scope-start>)]? [to (<scope-end>)]? {\r"},"css-feature-scope_19":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  <rule-list"},"css-feature-scope_20":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_21":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_22":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_23":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"示例1：使用作用域根\r"},"css-feature-scope_24":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_25":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"假设你有一个博客文章页面，它包含一个文章区块和一个评论区块。你想让这两个区块中的链接有不同的颜色。\r"},"css-feature-scope_26":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_27":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_28":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"//\r"},"css-feature-scope_29":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.article-section) {\r"},"css-feature-scope_30":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  //\r"},"css-feature-scope_31":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  a { color: blue; }\r"},"css-feature-scope_32":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_33":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_34":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"//\r"},"css-feature-scope_35":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.comments-section) {\r"},"css-feature-scope_36":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  //\r"},"css-feature-scope_37":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  a { color: green; }\r"},"css-feature-scope_38":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_39":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_40":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_41":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"在这个例子中， 内的所有链接将会是蓝色，而  内的链接将会是绿色。\r"},"css-feature-scope_42":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_43":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"示例2：使用作用域限制\r"},"css-feature-scope_44":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_45":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"现在，假设在你的文章区块中，你有一个特别的引用部分，你不希望在这个部分应用上述的蓝色链接样式。\r"},"css-feature-scope_46":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_47":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_48":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"//\r"},"css-feature-scope_49":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.article-section) to (.news-section .quote) {\r"},"css-feature-scope_50":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  a { color: blue; }\r"},"css-feature-scope_51":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_52":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_53":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_54":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"在这个例子中， 内的链接仍然是蓝色，但文章里  类中的链接不会受这个作用域限制。（请到里查看）\r"},"css-feature-scope_55":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_56":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_57":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"的高级特性\r"},"css-feature-scope_58":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_59":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"现在来看一些高级用法。\r"},"css-feature-scope_60":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_61":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"特殊选择器： 和 \r"},"css-feature-scope_62":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_63":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"我们可以用  和  指代作用域根元素，例如\r"},"css-feature-scope_64":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_65":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"html\r"},"css-feature-scope_66":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"<div class=\"container\""},"css-feature-scope_67":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    <p>这是一段文本。</p"},"css-feature-scope_68":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    <div class=\"sub-container\""},"css-feature-scope_69":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"        <p>这是另一段文本。</p"},"css-feature-scope_70":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\t      <div>这是一个div</div"},"css-feature-scope_71":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    </div"},"css-feature-scope_72":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"</div"},"css-feature-scope_73":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_74":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_75":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"分别测试  和 ，会发现效果一样，因为此时它们都等价于 .\r"},"css-feature-scope_76":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_77":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_78":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.container) {\r"},"css-feature-scope_79":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    :scope \r"},"css-feature-scope_80":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_81":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.container) {\r"},"css-feature-scope_82":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    & \r"},"css-feature-scope_83":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_84":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_85":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_86":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"作用域嵌套\r"},"css-feature-scope_87":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_88":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"嵌套规则： 规则可以嵌套。嵌套规则允许开发者创建复杂的样式结构，同时避免样式的冲突和污染。\r"},"css-feature-scope_89":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_90":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_91":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"//\r"},"css-feature-scope_92":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope (.outer-scope) {\r"},"css-feature-scope_93":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  p { color: red; }\r"},"css-feature-scope_94":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_95":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  //\r"},"css-feature-scope_96":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  @scope (.inner-scope) {\r"},"css-feature-scope_97":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"    p { color: blue; }\r"},"css-feature-scope_98":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  }\r"},"css-feature-scope_99":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_100":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_101":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_102":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_103":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"在这个例子中， 内的段落是红色的，但在  内的段落是蓝色的。\r"},"css-feature-scope_104":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_105":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"使用数据属性定义作用域\r"},"css-feature-scope_106":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_107":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":" 还可以与HTML的数据属性（如 ）结合使用，以创建更具体的作用域。例如，你可以通过给不同部分的HTML元素添加不同的数据属性，然后在CSS中使用这些属性来定义作用域：\r"},"css-feature-scope_108":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_109":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"css\r"},"css-feature-scope_110":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"//\r"},"css-feature-scope_111":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope ([data-scope='main-section']) {\r"},"css-feature-scope_112":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  p { color: red; }\r"},"css-feature-scope_113":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_114":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_115":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"@scope ([data-scope='sidebar']) {\r"},"css-feature-scope_116":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"  p { color: blue; }\r"},"css-feature-scope_117":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"}\r"},"css-feature-scope_118":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_119":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_120":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_121":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"在这个例子中， 的段落将会是红色，而  的段落将会是蓝色。\r"},"css-feature-scope_122":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_123":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"结语\r"},"css-feature-scope_124":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_125":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":" 规则的引入是CSS发展中的一次重要进步，虽然现在浏览器支持度还不够高，但对于这样重要的特性，显然不会让开发者等太久，相信很快主流浏览器都会支持的。\r"},"css-feature-scope_126":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_127":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"css-feature-scope_128":{"title":"CSS前瞻：用@scope 定义你的CSS作用域","content":"\r"},"learn-neumorphic":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"CSS技巧：人人都能看懂的新拟态实现思路","display":"\r"},"learn-neumorphic_0":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_1":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"曾经有段时间新拟态火爆前端圈，时过境迁，新拟态并没有走入千家万户，而只存在于一些小众的产品上。究其原因，首先是设计成本太高，其次是前端程序员知道新拟态是用  来实现，但就是不知道怎么才能做出符合自己审美的新拟态。\r"},"learn-neumorphic_2":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_3":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"今天，我们就来扒一扒新拟态的奥妙，以前端工程师的角度总结出实现新拟态的正确思路。\r"},"learn-neumorphic_4":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_5":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"在我看了一众新拟态的设计后，总结了三个要点：光与背景、、细节打磨。且看我下文分析，看我的思路对不对。\r"},"learn-neumorphic_6":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_7":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"欢迎加入「🌍」，一起学习交流前端和Node技术。\r"},"learn-neumorphic_8":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_9":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"光与背景\r"},"learn-neumorphic_10":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_11":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"理解新拟态设计的第一步，不是学习  的用法，而是思考光与背景的作用。新拟态的设计方法可以总结为：有光（打在平面上）就有了 。我们得通过平面来强调光的效果，不信你看下面这张图：\r"},"learn-neumorphic_12":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_13":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_14":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_15":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"上下两个新拟态按钮，除了背景不同，其他代码一样，下面的看起来明显更立体。这就是背景的作用，合理的背景能让用户好像看到光源一样。背景之于新拟态设计，就是画龙点睛的那一笔。\r"},"learn-neumorphic_16":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_17":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"那么什么样的搭配更合理？我总结出来这样的规律：\r"},"learn-neumorphic_18":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_19":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"- 以白色的主题为例，背景不能用白色，而要使用较浅的色调，如灰色、蓝灰色或暖色调，这样才能指示出光源方向（如图中按钮左上白色区域）\r"},"learn-neumorphic_20":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"- 按钮可以用与背景一样或相近的颜色，这样更有凹凸感。\r"},"learn-neumorphic_21":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_22":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"你也可以去观察新拟态设计的产品，他们的背景和按钮/方块也基本符合这样的规律。\r"},"learn-neumorphic_23":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_24":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow详细用法\r"},"learn-neumorphic_25":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_26":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"如果背景的选择能帮你打开新拟态的设计思路，那么学好  则会让你打开创造新拟态产品的大门。\r"},"learn-neumorphic_27":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_28":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":" 属性在CSS中用于向框添加一个或多个阴影。它可以接受多组的值来创建多层阴影，每组值描述了一个阴影的外观。以下是可能的值：\r"},"learn-neumorphic_29":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_30":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"1.  (可选)：如果不使用这个值，阴影将在框的外部；如果使用了这个值，阴影在框的内部（即凹陷效果）。\r"},"learn-neumorphic_31":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"2.  (必须)：水平阴影的位置。正值阴影向右，负值向左。\r"},"learn-neumorphic_32":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"3.  (必须)：垂直阴影的位置。正值阴影向下，负值向上。\r"},"learn-neumorphic_33":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"4.  (可选)：模糊距离。其值越大，阴影就越大且越模糊。如果没有设置这个值，阴影的边缘将是硬边缘。\r"},"learn-neumorphic_34":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"5.  (可选)：扩散半径。正值会使阴影扩大且边缘更加模糊，负值会使阴影收缩。\r"},"learn-neumorphic_35":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"6.  (可选)：定义阴影的颜色。可以使用任何CSS颜色值（如 , , , ,  等）。\r"},"learn-neumorphic_36":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_37":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"使用示例：\r"},"learn-neumorphic_38":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_39":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"css\r"},"learn-neumorphic_40":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_41":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: 5px 5px 0 0 black;\r"},"learn-neumorphic_42":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_43":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_44":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: 3px 3px 5px black;\r"},"learn-neumorphic_45":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_46":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_47":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: 3px 3px 5px 1px black;\r"},"learn-neumorphic_48":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_49":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_50":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: inset 3px 3px 5px black;\r"},"learn-neumorphic_51":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_52":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_53":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: 3px 3px 5px black, -3px 0 5px grey;\r"},"learn-neumorphic_54":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_55":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"//\r"},"learn-neumorphic_56":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.5);\r"},"learn-neumorphic_57":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_58":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_59":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_60":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"box-shadow 的值不复杂，但如果不常使用，我们是很难直观看出数值对应的效果，所以还是熟能生巧，多练练。\r"},"learn-neumorphic_61":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_62":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"细节打磨\r"},"learn-neumorphic_63":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_64":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"上面两节介绍的是新拟态的核心设计方法，但如果你实操一下，仍然会觉得创造出来的效果跟预期依然有所差异，但又不知道问题在哪里。这里还有一些设计细节的建议可以供你参考：\r"},"learn-neumorphic_65":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_66":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"1. 阴影和光效:\r"},"learn-neumorphic_67":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 双重阴影：利用内阴影和外阴影来创造凹凸感。通常使用较浅的阴影（浅色）模拟光源，以及较深的阴影（暗色）模拟深度。\r"},"learn-neumorphic_68":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 柔和阴影：阴影应该是柔和且分布广泛，避免使用过于尖锐或深色的阴影。\r"},"learn-neumorphic_69":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"2. 几何形状和边框:\r"},"learn-neumorphic_70":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 圆角：新拟态设计倾向于使用圆角。这些圆角可以帮助元素更自然地融入背景。\r"},"learn-neumorphic_71":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 简洁边框：边框通常细致且不突出，有时甚至是透明的，以增加立体感。\r"},"learn-neumorphic_72":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"3. 交互效果:\r"},"learn-neumorphic_73":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 交互状态：为不同的状态（如hover、active）设计不同的视觉效果，比如改变阴影深度或颜色。\r"},"learn-neumorphic_74":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 过渡动画：使用平滑的过渡效果，使状态变化更自然、更有吸引力。\r"},"learn-neumorphic_75":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"4. 字体和图标:\r"},"learn-neumorphic_76":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 简洁字体：使用简洁、易读的字体，以保持整体设计的一致性。\r"},"learn-neumorphic_77":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"    - 图标风格：图标应与整体风格保持一致，避免过于复杂或扁平化的设计。\r"},"learn-neumorphic_78":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_79":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"作为一名不会设计的前端工程师，只能通过不断打磨细节来提升自己的设计能力啦～\r"},"learn-neumorphic_80":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_81":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"你可以在看我写的demo👇\r"},"learn-neumorphic_82":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_83":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"结语\r"},"learn-neumorphic_84":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"learn-neumorphic_85":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"你看，看起来高大上的新拟态总结起来也不过就这么点内容，拿出你的CSS，码一个自己满意的新拟态吧！\r"},"learn-neumorphic_86":{"title":"CSS技巧：人人都能看懂的新拟态实现思路","content":"\r"},"media-scripting":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"CSS前瞻：@media (scripting)助你优雅降级","display":"\r"},"media-scripting_0":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_1":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"你能想象在CSS里判断JavaScript有没有被禁用吗？现在，CSS整活了，通过  特性，开发者就可以判断当前环境JavaScript的可用性。\r"},"media-scripting_2":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_3":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"特性简介\r"},"media-scripting_4":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_5":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":" 是CSS3新发布的媒体查询特性，它允许开发者基于客户端脚本（如 JavaScript）的支持情况来应用不同的样式。\r"},"media-scripting_6":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_7":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"这个特性主要有三个值：\r"},"media-scripting_8":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_9":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"-  表示不支持脚本\r"},"media-scripting_10":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"-  表示仅在页面加载时执行脚本\r"},"media-scripting_11":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"-  则表示脚本完全可用\r"},"media-scripting_12":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_13":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"应用场景\r"},"media-scripting_14":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_15":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"- 禁用脚本的网页：为那些因为辅助技术或安全设置禁用JavaScript的用户提供替代样式。\r"},"media-scripting_16":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"- 渐进增强和优雅降级：为不支持脚本的浏览器进行样式降级。\r"},"media-scripting_17":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"- 广告和追踪阻止：对于使用广告拦截器的用户，提供不依赖于脚本的内容和布局。\r"},"media-scripting_18":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_19":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"使用示例\r"},"media-scripting_20":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_21":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"考虑一个动态内容加载区域，它依赖于JavaScript。在不支持脚本的环境中，我们可以使用  提供一个备选的静态内容显示或友好的消息提示。以下是代码示例：\r"},"media-scripting_22":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_23":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"css\r"},"media-scripting_24":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":".dynamic-content {\r"},"media-scripting_25":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"  color: blue;\r"},"media-scripting_26":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"  //\r"},"media-scripting_27":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"}\r"},"media-scripting_28":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_29":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"@media (scripting: none) {\r"},"media-scripting_30":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"  .dynamic-content {\r"},"media-scripting_31":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"    color: gray;\r"},"media-scripting_32":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"    text-decoration: line-through;\r"},"media-scripting_33":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"    //\r"},"media-scripting_34":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"  }\r"},"media-scripting_35":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"}\r"},"media-scripting_36":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_37":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_38":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_39":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"结语\r"},"media-scripting_40":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_41":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"你问兼容性？额……年轻人，我们聊下一个话题吧\r"},"media-scripting_42":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"media-scripting_43":{"title":"CSS前瞻：@media (scripting)助你优雅降级","content":"\r"},"dive-into-react-fiber":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"万字长文介绍React Fiber架构的原理和工作模式","display":"\r"},"dive-into-react-fiber_0":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_1":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"<Aside"},"dive-into-react-fiber_2":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"为了写这篇文章，我花了5天时间阅读Fiber的核心源码，尽管本文字符数过万，但相对于几十万行Fiber源码来说，只能算是介绍了Fiber的基础知识，所以如果内容有纰漏，请在评论区为我指正，我会进行更新，如果阅读文章后有哪个关于Fiber的专题你想了解，也可以评论区提出来，我很乐意继续研究源码和分享知识。\r"},"dive-into-react-fiber_3":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_4":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"</Aside"},"dive-into-react-fiber_5":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_6":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"自React 16开始，React引入了架构，解决了以前的更新机制的问题，即在长时间的更新过程中，主线程会被阻塞，导致应用无法及时响应用户输入。本文我们就来聊聊Fiber是什么以及它的底层原理，学习完本文可以让你对Fiber架构的原理有一个比较清晰的认识。\r"},"dive-into-react-fiber_7":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_8":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"本文首发于我的博客「」\r"},"dive-into-react-fiber_9":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_10":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"欢迎加入「🌍」，一起学习交流前端和Node端技术\r"},"dive-into-react-fiber_11":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_12":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber是什么？\r"},"dive-into-react-fiber_13":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_14":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"首先，我们先聊聊React的基本组成：当我们写React组件并使用JSX时，React在底层会将JSX转换为元素的对象结构。例如：\r"},"dive-into-react-fiber_15":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_16":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_17":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"const element = <h1>Hello, world</h1>;\r"},"dive-into-react-fiber_18":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_19":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_20":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"上述代码会被转换为以下形式：\r"},"dive-into-react-fiber_21":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_22":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_23":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"const element = React.createElement(\r"},"dive-into-react-fiber_24":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  'h1',\r"},"dive-into-react-fiber_25":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  null,\r"},"dive-into-react-fiber_26":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  'Hello, world'\r"},"dive-into-react-fiber_27":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":");\r"},"dive-into-react-fiber_28":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_29":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_30":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"为了将这个元素渲染到DOM上，React需要创建一种内部实例，用来追踪该组件的所有信息和状态。在早期版本的React中，我们称之为“实例”或“虚拟DOM对象”。但在Fiber架构中，这个新的工作单元就叫做Fiber。\r"},"dive-into-react-fiber_31":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_32":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"所以，在本质上，，代表React的一个工作单元，它包含了与组件相关的信息。一个简化的Fiber对象长这样：\r"},"dive-into-react-fiber_33":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_34":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_35":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"{\r"},"dive-into-react-fiber_36":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  type: 'h1',  // 组件类型\r"},"dive-into-react-fiber_37":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  key: null,   // React key\r"},"dive-into-react-fiber_38":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  props: { ... }, // 输入的props\r"},"dive-into-react-fiber_39":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  state: { ... }, // 组件的state (如果是class组件或带有state的function组件)\r"},"dive-into-react-fiber_40":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  child: Fiber | null,  // 第一个子元素的Fiber\r"},"dive-into-react-fiber_41":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  sibling: Fiber | null,  // 下一个兄弟元素的Fiber\r"},"dive-into-react-fiber_42":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  return: Fiber | null,  // 父元素的Fiber\r"},"dive-into-react-fiber_43":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  // ...其他属性\r"},"dive-into-react-fiber_44":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_45":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_46":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_47":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"当React开始工作时，它会沿着Fiber树形结构进行，试图完成每个Fiber的工作（例如，比较旧的props与新的props，确定是否需要更新组件等）。如果主线程有更重要的工作（例如，响应用户输入），则React可以中断当前工作并返回执行主线程上的任务。\r"},"dive-into-react-fiber_48":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_49":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"因此，Fiber不仅仅是代表组件的一个内部对象，它还是React的调度和更新机制的核心组成部分。\r"},"dive-into-react-fiber_50":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_51":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"为什么需要Fiber？\r"},"dive-into-react-fiber_52":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_53":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"在React 16之前的版本中，是使用递归的方式处理组件树更新，称为，这种方法一旦开始就不能中断，直到整个组件树都被遍历完。这种机制在处理大量数据或复杂视图时可能导致主线程被阻塞，从而使应用无法及时响应用户的输入或其他高优先级任务。\r"},"dive-into-react-fiber_54":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_55":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber的引入改变了这一情况。Fiber可以理解为是React自定义的一个带有链接关系的DOM树，每个Fiber都代表了一个工作单元，React可以在处理任何Fiber之前判断是否有足够的时间完成该工作，并在必要时中断和恢复工作。\r"},"dive-into-react-fiber_56":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_57":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber的结构\r"},"dive-into-react-fiber_58":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_59":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"我们来看一下源码里FiberNode的结构：\r"},"dive-into-react-fiber_60":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_61":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_62":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function FiberNode(\r"},"dive-into-react-fiber_63":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this: $FlowFixMe,\r"},"dive-into-react-fiber_64":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  tag: WorkTag,\r"},"dive-into-react-fiber_65":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  pendingProps: mixed,\r"},"dive-into-react-fiber_66":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  key: null | string,\r"},"dive-into-react-fiber_67":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  mode: TypeOfMode,\r"},"dive-into-react-fiber_68":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":") {\r"},"dive-into-react-fiber_69":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  // 基本属性\r"},"dive-into-react-fiber_70":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.tag = tag; // 描述此Fiber的启动模式的值（LegacyRoot = 0; ConcurrentRoot = 1）\r"},"dive-into-react-fiber_71":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.key = key; // React key\r"},"dive-into-react-fiber_72":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.elementType = null; // 描述React元素的类型。例如，对于JSX<App />，elementType是App\r"},"dive-into-react-fiber_73":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.type = null; // 组件类型\r"},"dive-into-react-fiber_74":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.stateNode = null; // 对于类组件，这是类的实例；对于DOM元素，它是对应的DOM节点。\r"},"dive-into-react-fiber_75":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_76":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  // Fiber链接\r"},"dive-into-react-fiber_77":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.return = null; // 指向父Fiber\r"},"dive-into-react-fiber_78":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.child = null; // 指向第一个子Fiber\r"},"dive-into-react-fiber_79":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.sibling = null; // 指向其兄弟Fiber\r"},"dive-into-react-fiber_80":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.index = 0; // 子Fiber中的索引位置\r"},"dive-into-react-fiber_81":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_82":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.ref = null; // 如果组件上有ref属性，则该属性指向它\r"},"dive-into-react-fiber_83":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.refCleanup = null; // 如果组件上的ref属性在更新中被删除或更改，此字段会用于追踪需要清理的旧ref\r"},"dive-into-react-fiber_84":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_85":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// Props & State\r"},"dive-into-react-fiber_86":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.pendingProps = pendingProps; // 正在等待处理的新props\r"},"dive-into-react-fiber_87":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.memoizedProps = null; // 上一次渲染时的props\r"},"dive-into-react-fiber_88":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.updateQueue = null; // 一个队列，包含了该Fiber上的状态更新和副作用\r"},"dive-into-react-fiber_89":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.memoizedState = null; // 上一次渲染时的state\r"},"dive-into-react-fiber_90":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.dependencies = null; // 该Fiber订阅的上下文或其他资源的描述\r"},"dive-into-react-fiber_91":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_92":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 工作模式\r"},"dive-into-react-fiber_93":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.mode = mode; // 描述Fiber工作模式的标志（例如Concurrent模式、Blocking模式等）。\r"},"dive-into-react-fiber_94":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_95":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  // Effects\r"},"dive-into-react-fiber_96":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.flags = NoFlags; // 描述该Fiber发生的副作用的标志（十六进制的标识）\r"},"dive-into-react-fiber_97":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.subtreeFlags = NoFlags; // 描述该Fiber子树中发生的副作用的标志（十六进制的标识）\r"},"dive-into-react-fiber_98":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.deletions = null; // 在commit阶段要删除的子Fiber数组\r"},"dive-into-react-fiber_99":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_100":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.lanes = NoLanes; // 与React的并发模式有关的调度概念。\r"},"dive-into-react-fiber_101":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.childLanes = NoLanes; // 与React的并发模式有关的调度概念。\r"},"dive-into-react-fiber_102":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_103":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  this.alternate = null; // Current Tree和Work-in-progress (WIP) Tree的互相指向对方tree里的对应单元\r"},"dive-into-react-fiber_104":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_105":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 如果启用了性能分析\r"},"dive-into-react-fiber_106":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  if (enableProfilerTimer) {\r"},"dive-into-react-fiber_107":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_108":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  }\r"},"dive-into-react-fiber_109":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_110":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 开发模式中\r"},"dive-into-react-fiber_111":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  if () {\r"},"dive-into-react-fiber_112":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    // ……\r"},"dive-into-react-fiber_113":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  }\r"},"dive-into-react-fiber_114":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_115":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_116":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_117":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"其实可以理解为是一个更强大的虚拟DOM。\r"},"dive-into-react-fiber_118":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_119":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber工作原理\r"},"dive-into-react-fiber_120":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_121":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber工作原理中最核心的点就是：可以中断和恢复，这个特性增强了React的并发性和响应性。\r"},"dive-into-react-fiber_122":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_123":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"实现可中断和恢复的原因就在于：Fiber的数据结构里提供的信息让React可以追踪工作进度、管理调度和同步更新到DOM\r"},"dive-into-react-fiber_124":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_125":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"现在我们来聊聊Fiber工作原理中的几个关键点：\r"},"dive-into-react-fiber_126":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_127":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- ：每个Fiber节点代表一个单元，所有Fiber节点共同组成一个Fiber链表树（有链接属性，同时又有树的结构），这种结构让React可以细粒度控制节点的行为。\r"},"dive-into-react-fiber_128":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- ： 和  字段构成了Fiber之间的链接关系，使React能够遍历组件树并知道从哪里开始、继续或停止工作。\r"},"dive-into-react-fiber_129":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_130":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_131":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_132":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- ：React在更新时，会根据现有的Fiber树（）创建一个新的临时树（），WIP-Tree包含了当前更新受影响的最高节点直至其所有子孙节点。Current Tree是当前显示在页面上的视图，WIP-Tree则是在后台进行更新，WIP-Tree更新完成后会复制其它节点，并最终替换掉Current Tree，成为新的Current Tree。因为React在更新时总是维护了两个Fiber树，所以可以随时进行比较、中断或恢复等操作，而且这种机制让React能够同时具备拥有优秀的渲染性能和UI的稳定性。\r"},"dive-into-react-fiber_133":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_134":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_135":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    \r"},"dive-into-react-fiber_136":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- ：、 字段让React知道组件的上一个状态和即将应用的状态。通过比较这些值，React可以决定组件是否需要更新，从而避免不必要的渲染，提高性能。\r"},"dive-into-react-fiber_137":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- ： 和  字段标识Fiber及其子树中需要执行的副作用，例如DOM更新、生命周期方法调用等。React会积累这些副作用，然后在Commit阶段一次性执行，从而提高效率。\r"},"dive-into-react-fiber_138":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_139":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Fiber工作流程\r"},"dive-into-react-fiber_140":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_141":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"了解了Fiber的工作原理后，我们可以通过阅读源码来加深对Fiber的理解。React Fiber的工作流程主要分为两个阶段：\r"},"dive-into-react-fiber_142":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_143":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"第一阶段：Reconciliation（调和）\r"},"dive-into-react-fiber_144":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_145":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- : 确定哪些部分的UI需要更新。\r"},"dive-into-react-fiber_146":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- : 这是React构建工作进度树的阶段，会比较新的props和旧的Fiber树来确定哪些部分需要更新。\r"},"dive-into-react-fiber_147":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_148":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"调和阶段又分为三个小阶段：\r"},"dive-into-react-fiber_149":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_150":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1、创建与标记更新节点：\r"},"dive-into-react-fiber_151":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_152":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1. ：\r"},"dive-into-react-fiber_153":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_154":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_155":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberBeginWork.js\r"},"dive-into-react-fiber_156":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是beginWork的完整源码\r"},"dive-into-react-fiber_157":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function beginWork(\r"},"dive-into-react-fiber_158":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  current: Fiber | null,\r"},"dive-into-react-fiber_159":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  workInProgress: Fiber,\r"},"dive-into-react-fiber_160":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  renderLanes: Lanes,\r"},"dive-into-react-fiber_161":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"): Fiber | null {\r"},"dive-into-react-fiber_162":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tif (current !== null) {\r"},"dive-into-react-fiber_163":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 这是旧节点，需要检查props和context是否有变化再确认是否需要更新节点\r"},"dive-into-react-fiber_164":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tconst oldProps = current.memoizedProps;\r"},"dive-into-react-fiber_165":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    const newProps = workInProgress.pendingProps;\r"},"dive-into-react-fiber_166":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_167":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tif(oldProps !== newProps || hasLegacyContextChanged()) {\r"},"dive-into-react-fiber_168":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\tdidReceiveUpdate = true; // props和context有变化，说明节点有更新\r"},"dive-into-react-fiber_169":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t} else {\r"},"dive-into-react-fiber_170":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t// 其它特殊情况的判断\r"},"dive-into-react-fiber_171":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t}\r"},"dive-into-react-fiber_172":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t} else {\r"},"dive-into-react-fiber_173":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tdidReceiveUpdate = false; // 这是新节点，要创建，而不是更新\r"},"dive-into-react-fiber_174":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t}\r"},"dive-into-react-fiber_175":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_176":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tworkInProgress.lanes = NoLanes; // 进入beginWork表示开始新的工作阶段，所以要把旧的workInProgress优先级清除掉\r"},"dive-into-react-fiber_177":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_178":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tswitch (workInProgress.tag) {\r"},"dive-into-react-fiber_179":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 通过workInProgress的tag属性来确定如何处理当前的Fiber节点\r"},"dive-into-react-fiber_180":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 每一种tag对应一种不同的Fiber类型，进入不同的调和过程（reconcileChildren()）\r"},"dive-into-react-fiber_181":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcase IndeterminateComponent: // 尚未确定其类型的组件\r"},"dive-into-react-fiber_182":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_183":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcase LazyComponent: // 懒加载组件\r"},"dive-into-react-fiber_184":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_185":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcase FunctionComponent: // 函数组件\r"},"dive-into-react-fiber_186":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_187":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcase ClassComponent: // 类组件\r"},"dive-into-react-fiber_188":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_189":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\r"},"dive-into-react-fiber_190":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 其它多种Fiber类型\r"},"dive-into-react-fiber_191":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// case ……\r"},"dive-into-react-fiber_192":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t}\r"},"dive-into-react-fiber_193":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_194":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_195":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_196":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1. \r"},"dive-into-react-fiber_197":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_198":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_199":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberBeginWork.js\r"},"dive-into-react-fiber_200":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"export function reconcileChildren(\r"},"dive-into-react-fiber_201":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  current: Fiber | null,\r"},"dive-into-react-fiber_202":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  workInProgress: Fiber,\r"},"dive-into-react-fiber_203":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  nextChildren: any, // 要调和的新的子元素\r"},"dive-into-react-fiber_204":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  renderLanes: Lanes,\r"},"dive-into-react-fiber_205":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":") {\r"},"dive-into-react-fiber_206":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  if (current === null) {\r"},"dive-into-react-fiber_207":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 如果current为空，说明这个Fiber是首次渲染，React会为nextChildren生成一组新的Fiber节点\r"},"dive-into-react-fiber_208":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    workInProgress.child = mountChildFibers(\r"},"dive-into-react-fiber_209":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      workInProgress,\r"},"dive-into-react-fiber_210":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      null,\r"},"dive-into-react-fiber_211":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      nextChildren,\r"},"dive-into-react-fiber_212":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      renderLanes,\r"},"dive-into-react-fiber_213":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    );\r"},"dive-into-react-fiber_214":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  } else {\r"},"dive-into-react-fiber_215":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 当current非空时，React会利用现有的Fiber节点（current.child）和新的子元素（nextChildren）进行调和\r"},"dive-into-react-fiber_216":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    workInProgress.child = reconcileChildFibers(\r"},"dive-into-react-fiber_217":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      workInProgress,\r"},"dive-into-react-fiber_218":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      current.child,\r"},"dive-into-react-fiber_219":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      nextChildren,\r"},"dive-into-react-fiber_220":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      renderLanes,\r"},"dive-into-react-fiber_221":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    );\r"},"dive-into-react-fiber_222":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  }\r"},"dive-into-react-fiber_223":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_224":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_225":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_226":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":" 最终会进入同一个方法  完成后，就会进入  流程。\r"},"dive-into-react-fiber_227":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_228":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"2、收集副作用列表：和\r"},"dive-into-react-fiber_229":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_230":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":" 负责遍历Fiber节点，同时记录了有副作用节点的关系。下面从源码上理解它的工作：\r"},"dive-into-react-fiber_231":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_232":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_233":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberWorkLoop.js\r"},"dive-into-react-fiber_234":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是completeUnitOfWork的完整源码\r"},"dive-into-react-fiber_235":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function completeUnitOfWork(unitOfWork: Fiber): void {\r"},"dive-into-react-fiber_236":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tlet completedWork: Fiber = unitOfWork; // 当前正在完成的工作单元\r"},"dive-into-react-fiber_237":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tdo {\r"},"dive-into-react-fiber_238":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tconst current = completedWork.alternate; // 当前Fiber节点在另一棵树上的版本\r"},"dive-into-react-fiber_239":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tconst returnFiber = completedWork.return; // 当前Fiber节点的父节点\r"},"dive-into-react-fiber_240":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_241":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tlet next;\r"},"dive-into-react-fiber_242":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    next = completeWork(current, completedWork, renderLanes); // 调用completeWork函数\r"},"dive-into-react-fiber_243":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_244":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tif (next !== null) {\r"},"dive-into-react-fiber_245":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t// 当前Fiber还有工作要完成\r"},"dive-into-react-fiber_246":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t  workInProgress = next;\r"},"dive-into-react-fiber_247":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t  return;\r"},"dive-into-react-fiber_248":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t}\r"},"dive-into-react-fiber_249":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tconst siblingFiber = completedWork.sibling;\r"},"dive-into-react-fiber_250":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    if (siblingFiber !== null) {\r"},"dive-into-react-fiber_251":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t// 如果有兄弟节点，则进入兄弟节点的工作\r"},"dive-into-react-fiber_252":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      workInProgress = siblingFiber;\r"},"dive-into-react-fiber_253":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      return;\r"},"dive-into-react-fiber_254":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    }\r"},"dive-into-react-fiber_255":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    // 如果没有兄弟节点，回到父节点继续\r"},"dive-into-react-fiber_256":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    completedWork = returnFiber;\r"},"dive-into-react-fiber_257":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    workInProgress = completedWork;\r"},"dive-into-react-fiber_258":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t} while (completedWork !== null);\r"},"dive-into-react-fiber_259":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_260":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 如果处理了整个Fiber树，更新workInProgressRootExitStatus为RootCompleted，表示调和已完成\r"},"dive-into-react-fiber_261":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  if (workInProgressRootExitStatus === RootInProgress) {\r"},"dive-into-react-fiber_262":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    workInProgressRootExitStatus = RootCompleted;\r"},"dive-into-react-fiber_263":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  } \r"},"dive-into-react-fiber_264":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_265":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_266":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_267":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":" 中被调用，下面是  里面\r"},"dive-into-react-fiber_268":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_269":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_270":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberCompleteWork.js\r"},"dive-into-react-fiber_271":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是completeWork的完整源码\r"},"dive-into-react-fiber_272":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function completeWork(\r"},"dive-into-react-fiber_273":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  current: Fiber | null,\r"},"dive-into-react-fiber_274":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  workInProgress: Fiber,\r"},"dive-into-react-fiber_275":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  renderLanes: Lanes,\r"},"dive-into-react-fiber_276":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"): Fiber | null {\r"},"dive-into-react-fiber_277":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  const newProps = workInProgress.pendingProps;\r"},"dive-into-react-fiber_278":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tswitch (workInProgress.tag) {\r"},"dive-into-react-fiber_279":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    // 多种tag\r"},"dive-into-react-fiber_280":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    case FunctionComponent:\r"},"dive-into-react-fiber_281":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    case ForwardRef:\r"},"dive-into-react-fiber_282":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    case SimpleMemoComponent:\r"},"dive-into-react-fiber_283":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t bubbleProperties(workInProgress)\r"},"dive-into-react-fiber_284":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      return null;\r"},"dive-into-react-fiber_285":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    case ClassComponent:\r"},"dive-into-react-fiber_286":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t // 省略逻辑\r"},"dive-into-react-fiber_287":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      // ……\r"},"dive-into-react-fiber_288":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t bubbleProperties(workInProgress)\r"},"dive-into-react-fiber_289":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      return null;\r"},"dive-into-react-fiber_290":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    case HostComponent:\r"},"dive-into-react-fiber_291":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t // 省略逻辑\r"},"dive-into-react-fiber_292":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      // ……\r"},"dive-into-react-fiber_293":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      return null;\r"},"dive-into-react-fiber_294":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    // 多种tag\r"},"dive-into-react-fiber_295":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_296":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  }\r"},"dive-into-react-fiber_297":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_298":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_299":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_300":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":" 完成了两个工作：\r"},"dive-into-react-fiber_301":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_302":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1. \r"},"dive-into-react-fiber_303":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"2. \r"},"dive-into-react-fiber_304":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_305":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"这两个工作都从下面这段代码中看出来：\r"},"dive-into-react-fiber_306":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_307":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_308":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberCompleteWork.js\r"},"dive-into-react-fiber_309":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是bubbleProperties的完整源码\r"},"dive-into-react-fiber_310":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function bubbleProperties(completedWork: Fiber) {\r"},"dive-into-react-fiber_311":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tconst didBailout =\r"},"dive-into-react-fiber_312":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    completedWork.alternate !== null &&\r"},"dive-into-react-fiber_313":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    completedWork.alternate.child === completedWork.child; // 当前的Fiber与其alternate（备用/上一次的Fiber）有相同的子节点，则跳过更新\r"},"dive-into-react-fiber_314":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_315":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  let newChildLanes = NoLanes; // 合并后的子Fiber的lanes\r"},"dive-into-react-fiber_316":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  let subtreeFlags = NoFlags; // 子树的flags。\r"},"dive-into-react-fiber_317":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_318":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tif (!didBailout) {\r"},"dive-into-react-fiber_319":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 没有bailout，需要冒泡子Fiber的属性到父Fiber\r"},"dive-into-react-fiber_320":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tlet child = completedWork.child;\r"},"dive-into-react-fiber_321":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 遍历子Fiber，并合并它们的lanes和flags\r"},"dive-into-react-fiber_322":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    while (child !== null) {\r"},"dive-into-react-fiber_323":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      newChildLanes = mergeLanes(\r"},"dive-into-react-fiber_324":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        newChildLanes,\r"},"dive-into-react-fiber_325":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        mergeLanes(child.lanes, child.childLanes),\r"},"dive-into-react-fiber_326":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      );\r"},"dive-into-react-fiber_327":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_328":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      subtreeFlags |= child.subtreeFlags;\r"},"dive-into-react-fiber_329":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      subtreeFlags |= child.flags;\r"},"dive-into-react-fiber_330":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_331":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      child.return = completedWork; // Fiber的return指向父Fiber，确保整个Fiber树的一致性\r"},"dive-into-react-fiber_332":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      child = child.sibling;\r"},"dive-into-react-fiber_333":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    }\r"},"dive-into-react-fiber_334":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcompletedWork.subtreeFlags |= subtreeFlags; // 合并所有flags（副作用）\r"},"dive-into-react-fiber_335":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t} else {\r"},"dive-into-react-fiber_336":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 有bailout，只冒泡那些具有“静态”生命周期的flags\r"},"dive-into-react-fiber_337":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tlet child = completedWork.child;\r"},"dive-into-react-fiber_338":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    while (child !== null) {\r"},"dive-into-react-fiber_339":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      newChildLanes = mergeLanes(\r"},"dive-into-react-fiber_340":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        newChildLanes,\r"},"dive-into-react-fiber_341":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        mergeLanes(child.lanes, child.childLanes),\r"},"dive-into-react-fiber_342":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      );\r"},"dive-into-react-fiber_343":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_344":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      subtreeFlags |= child.subtreeFlags & StaticMask; // 不同\r"},"dive-into-react-fiber_345":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      subtreeFlags |= child.flags & StaticMask; // 不同\r"},"dive-into-react-fiber_346":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_347":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      child.return = completedWork;\r"},"dive-into-react-fiber_348":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      child = child.sibling;\r"},"dive-into-react-fiber_349":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    }\r"},"dive-into-react-fiber_350":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tcompletedWork.subtreeFlags |= subtreeFlags;\r"},"dive-into-react-fiber_351":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t}\r"},"dive-into-react-fiber_352":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tcompletedWork.childLanes = newChildLanes; // 获取所有子Fiber的lanes。\r"},"dive-into-react-fiber_353":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_354":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\treturn didBailout;\r"},"dive-into-react-fiber_355":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_356":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_357":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_358":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"调和阶段知识拓展\r"},"dive-into-react-fiber_359":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_360":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_361":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_362":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"在上面这段代码里，我们还可以看出来为什么Fiber架构比以前的递归DOM计算要快： 是16进制的标识，在这里进行按位或()运算后，可以记录当前节点本身和子树的副作用类型，通过这个运算结果可以减少节点的遍历，举一个简单的例子说明：\r"},"dive-into-react-fiber_363":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_364":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_365":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"假设有两种标识符：\r"},"dive-into-react-fiber_366":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Placement (表示新插入的子节点)：0b001\r"},"dive-into-react-fiber_367":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"Update (表示子节点已更新)：0b010\r"},"dive-into-react-fiber_368":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_369":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"A\r"},"dive-into-react-fiber_370":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"├─ B (Update)\r"},"dive-into-react-fiber_371":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"│   └─ D (Placement)\r"},"dive-into-react-fiber_372":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"└─ C\r"},"dive-into-react-fiber_373":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"   └─ E\r"},"dive-into-react-fiber_374":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_375":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"这个例子里，计算逻辑是这样：\r"},"dive-into-react-fiber_376":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1、检查到A的flags没有副作用，直接复用，但subtreeFlags有副作用，那么递归检查B和C\r"},"dive-into-react-fiber_377":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"2、检查到B的flags有复用，更新B，subtreeFlags也有副作用，则继续检查D\r"},"dive-into-react-fiber_378":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"3、检查到C的flags没有副作用，subtreeFlags也没有副作用，那么直接复用C和E\r"},"dive-into-react-fiber_379":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"如果节点更多，则以此类推。\r"},"dive-into-react-fiber_380":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"这样的计算方式可以减少递归那些没有副作用的子树或节点，所以比以前的版本全部递归的算法要高效\r"},"dive-into-react-fiber_381":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_382":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_383":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_384":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_385":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"前面我们提到，调和过程可以被中断，现在我们就看看源码里是怎么进行中断和恢复的。首先，我们要明确可中断的能力是React并发模式（Concurrent Mode）的核心，这种能力使得React可以优先处理高优先级的更新，而推迟低优先级的更新。\r"},"dive-into-react-fiber_386":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_387":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"可以从下面这段代码理解中断与恢复的处理逻辑：\r"},"dive-into-react-fiber_388":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_389":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_390":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberWorkLoop.js\r"},"dive-into-react-fiber_391":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是renderRootConcurrent的完整源码\r"},"dive-into-react-fiber_392":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"function renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\r"},"dive-into-react-fiber_393":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 保存当前的执行上下文和 dispatcher\r"},"dive-into-react-fiber_394":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tconst prevExecutionContext = executionContext;\r"},"dive-into-react-fiber_395":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  executionContext |= RenderContext;\r"},"dive-into-react-fiber_396":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  const prevDispatcher = pushDispatcher(root.containerInfo);\r"},"dive-into-react-fiber_397":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  const prevCacheDispatcher = pushCacheDispatcher();\r"},"dive-into-react-fiber_398":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_399":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tif (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\r"},"dive-into-react-fiber_400":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 如果当前的工作进度树与传入的 root 或 lanes 不匹配，我们需要为新的渲染任务准备一个新的堆栈。\r"},"dive-into-react-fiber_401":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// ……\r"},"dive-into-react-fiber_402":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t}\r"},"dive-into-react-fiber_403":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_404":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 持续的工作循环，除非中断发生，否则会一直尝试完成渲染工作\r"},"dive-into-react-fiber_405":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\touter: do {\r"},"dive-into-react-fiber_406":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    try {\r"},"dive-into-react-fiber_407":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      if (\r"},"dive-into-react-fiber_408":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        workInProgressSuspendedReason !== NotSuspended &&\r"},"dive-into-react-fiber_409":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        workInProgress !== null\r"},"dive-into-react-fiber_410":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      ) {\r"},"dive-into-react-fiber_411":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        // 如果当前的工作进度是由于某种原因而被挂起的，并且仍然有工作待处理，那么会处理它\r"},"dive-into-react-fiber_412":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        const unitOfWork = workInProgress;\r"},"dive-into-react-fiber_413":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        const thrownValue = workInProgressThrownValue;\r"},"dive-into-react-fiber_414":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_415":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t // 根据不同挂起原因，进行中断、恢复等计算\r"},"dive-into-react-fiber_416":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        resumeOrUnwind: switch (workInProgressSuspendedReason) {\r"},"dive-into-react-fiber_417":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          case SuspendedOnError: {\r"},"dive-into-react-fiber_418":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            // 如果工作因错误被挂起，那么工作会被中断，并从最后一个已知的稳定点继续\r"},"dive-into-react-fiber_419":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t // ……省略逻辑\r"},"dive-into-react-fiber_420":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            break;\r"},"dive-into-react-fiber_421":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          }\r"},"dive-into-react-fiber_422":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          case SuspendedOnData: {\r"},"dive-into-react-fiber_423":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            // 工作因等待数据（通常是一个异步请求的结果）而被挂起，\r"},"dive-into-react-fiber_424":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t // ……省略逻辑\r"},"dive-into-react-fiber_425":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            break outer;\r"},"dive-into-react-fiber_426":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          }\r"},"dive-into-react-fiber_427":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t case SuspendedOnInstance: {\r"},"dive-into-react-fiber_428":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t // 将挂起的原因更新为SuspendedOnInstanceAndReadyToContinue并中断工作循环，标记为稍后准备好继续执行\r"},"dive-into-react-fiber_429":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            workInProgressSuspendedReason =\r"},"dive-into-react-fiber_430":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              SuspendedOnInstanceAndReadyToContinue;\r"},"dive-into-react-fiber_431":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            break outer;\r"},"dive-into-react-fiber_432":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          }\r"},"dive-into-react-fiber_433":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          case SuspendedAndReadyToContinue: {\r"},"dive-into-react-fiber_434":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t // 表示之前的挂起工作现在已经准备好继续执行\r"},"dive-into-react-fiber_435":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t\t if (isThenableResolved(thenable)) {\r"},"dive-into-react-fiber_436":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              // 如果已解析，这意味着需要的数据现在已经可用\r"},"dive-into-react-fiber_437":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressSuspendedReason = NotSuspended;\r"},"dive-into-react-fiber_438":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressThrownValue = null;\r"},"dive-into-react-fiber_439":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              replaySuspendedUnitOfWork(unitOfWork); // 恢复执行被挂起的工作\r"},"dive-into-react-fiber_440":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            } else {\r"},"dive-into-react-fiber_441":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressSuspendedReason = NotSuspended;\r"},"dive-into-react-fiber_442":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressThrownValue = null;\r"},"dive-into-react-fiber_443":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              throwAndUnwindWorkLoop(unitOfWork, thrownValue); // 继续循环\r"},"dive-into-react-fiber_444":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            }\r"},"dive-into-react-fiber_445":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            break;\r"},"dive-into-react-fiber_446":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"          }\r"},"dive-into-react-fiber_447":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  \t\t\t\t case SuspendedOnInstanceAndReadyToContinue: {\r"},"dive-into-react-fiber_448":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t // ……省略部分逻辑\r"},"dive-into-react-fiber_449":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t const isReady = preloadInstance(type, props);\r"},"dive-into-react-fiber_450":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t if (isReady) {\r"},"dive-into-react-fiber_451":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t\t  // 实例已经准备好\r"},"dive-into-react-fiber_452":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressSuspendedReason = NotSuspended; // 该fiber已完成，不需要再挂起\r"},"dive-into-react-fiber_453":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              workInProgressThrownValue = null;\r"},"dive-into-react-fiber_454":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              const sibling = hostFiber.sibling;\r"},"dive-into-react-fiber_455":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              if (sibling !== null) {\r"},"dive-into-react-fiber_456":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                workInProgress = sibling; // 有兄弟节点，开始处理兄弟节点\r"},"dive-into-react-fiber_457":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              } else {\r"},"dive-into-react-fiber_458":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t\t\t\t\t// 没有兄弟节点，回到父节点\r"},"dive-into-react-fiber_459":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                const returnFiber = hostFiber.return;\r"},"dive-into-react-fiber_460":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                if (returnFiber !== null) {\r"},"dive-into-react-fiber_461":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                  workInProgress = returnFiber;\r"},"dive-into-react-fiber_462":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                  completeUnitOfWork(returnFiber); // 收集副作用，前面有详细介绍\r"},"dive-into-react-fiber_463":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                } else {\r"},"dive-into-react-fiber_464":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                  workInProgress = null;\r"},"dive-into-react-fiber_465":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"                }\r"},"dive-into-react-fiber_466":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              }\r"},"dive-into-react-fiber_467":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"              break resumeOrUnwind;\r"},"dive-into-react-fiber_468":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"            }\r"},"dive-into-react-fiber_469":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t }\r"},"dive-into-react-fiber_470":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t\t\t\t // 还有其它case\r"},"dive-into-react-fiber_471":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"        }\r"},"dive-into-react-fiber_472":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      }\r"},"dive-into-react-fiber_473":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_474":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      workLoopConcurrent(); // 如果没有任何工作被挂起，那么就会继续处理工作循环。\r"},"dive-into-react-fiber_475":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      break;\r"},"dive-into-react-fiber_476":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    } catch (thrownValue) {\r"},"dive-into-react-fiber_477":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"      handleThrow(root, thrownValue);\r"},"dive-into-react-fiber_478":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    }\r"},"dive-into-react-fiber_479":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  } while (true);\r"},"dive-into-react-fiber_480":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_481":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 重置了之前保存的执行上下文和dispatcher，确保后续的代码不会受到这个函数的影响\r"},"dive-into-react-fiber_482":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  resetContextDependencies();\r"},"dive-into-react-fiber_483":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tpopDispatcher(prevDispatcher);\r"},"dive-into-react-fiber_484":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  popCacheDispatcher(prevCacheDispatcher);\r"},"dive-into-react-fiber_485":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  executionContext = prevExecutionContext;\r"},"dive-into-react-fiber_486":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_487":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 检查调和是否已完成\r"},"dive-into-react-fiber_488":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\tif (workInProgress !== null) {\r"},"dive-into-react-fiber_489":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 未完成\r"},"dive-into-react-fiber_490":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\treturn RootInProgress; // 返回一个状态值，表示还有未完成\r"},"dive-into-react-fiber_491":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t} else {\r"},"dive-into-react-fiber_492":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\t// 已完成\r"},"dive-into-react-fiber_493":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t\tworkInProgressRoot = null; // 重置root\r"},"dive-into-react-fiber_494":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    workInProgressRootRenderLanes = NoLanes; // 重置Lane\r"},"dive-into-react-fiber_495":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    finishQueueingConcurrentUpdates(); // 处理队列中的并发更新\r"},"dive-into-react-fiber_496":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"    return workInProgressRootExitStatus; // 返回当前渲染root的最终退出状态\r"},"dive-into-react-fiber_497":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t}\r"},"dive-into-react-fiber_498":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_499":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_500":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_501":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"第二阶段：Commit（提交）\r"},"dive-into-react-fiber_502":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_503":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- : 更新DOM并执行任何副作用。\r"},"dive-into-react-fiber_504":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"- : 遍历在Reconciliation阶段创建的副作用列表进行更新。\r"},"dive-into-react-fiber_505":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_506":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"源码里  是提交阶段的入口方法，在两个方法中，可以看出来提交阶段也有三个核心小阶段，我们一一讲解：\r"},"dive-into-react-fiber_507":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_508":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"1、遍历副作用列表：\r"},"dive-into-react-fiber_509":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_510":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_511":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberCommitWork.js\r"},"dive-into-react-fiber_512":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是commitBeforeMutationEffects的完整源码\r"},"dive-into-react-fiber_513":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"export function commitBeforeMutationEffects(\r"},"dive-into-react-fiber_514":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  root: FiberRoot,\r"},"dive-into-react-fiber_515":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  firstChild: Fiber,\r"},"dive-into-react-fiber_516":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"): boolean {\r"},"dive-into-react-fiber_517":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  nextEffect = firstChild; // nextEffect是遍历此链表时的当前fiber\r"},"dive-into-react-fiber_518":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  commitBeforeMutationEffects_begin(); // 遍历fiber，处理节点删除和确认节点在before mutation阶段是否有要处理的副作用\r"},"dive-into-react-fiber_519":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_520":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  const shouldFire = shouldFireAfterActiveInstanceBlur; // 当一个焦点元素被删除或隐藏时，它会被设置为 true\r"},"dive-into-react-fiber_521":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  shouldFireAfterActiveInstanceBlur = false;\r"},"dive-into-react-fiber_522":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  focusedInstanceHandle = null;\r"},"dive-into-react-fiber_523":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_524":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  return shouldFire;\r"},"dive-into-react-fiber_525":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_526":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_527":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_528":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"2、正式提交：\r"},"dive-into-react-fiber_529":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_530":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_531":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberCommitWork.js\r"},"dive-into-react-fiber_532":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// 以下只是核心逻辑的代码，不是commitMutationEffects的完整源码\r"},"dive-into-react-fiber_533":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"export function commitMutationEffects(\r"},"dive-into-react-fiber_534":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  root: FiberRoot,\r"},"dive-into-react-fiber_535":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  finishedWork: Fiber,\r"},"dive-into-react-fiber_536":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  committedLanes: Lanes,\r"},"dive-into-react-fiber_537":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":") {\r"},"dive-into-react-fiber_538":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// lanes和root被设置为\"in progress\"状态，表示它们正在被处理\r"},"dive-into-react-fiber_539":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressLanes = committedLanes;\r"},"dive-into-react-fiber_540":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressRoot = root;\r"},"dive-into-react-fiber_541":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_542":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 递归遍历Fiber，更新副作用节点\r"},"dive-into-react-fiber_543":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  commitMutationEffectsOnFiber(finishedWork, root, committedLanes);\r"},"dive-into-react-fiber_544":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_545":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 重置进行中的lanes和root\r"},"dive-into-react-fiber_546":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressLanes = null;\r"},"dive-into-react-fiber_547":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressRoot = null;\r"},"dive-into-react-fiber_548":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_549":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_550":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_551":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"3、处理layout effects：\r"},"dive-into-react-fiber_552":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_553":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"tsx\r"},"dive-into-react-fiber_554":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"// packages/react-reconciler/src/ReactFiberCommitWork.js\r"},"dive-into-react-fiber_555":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"export function commitLayoutEffects(\r"},"dive-into-react-fiber_556":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  finishedWork: Fiber,\r"},"dive-into-react-fiber_557":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  root: FiberRoot,\r"},"dive-into-react-fiber_558":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  committedLanes: Lanes,\r"},"dive-into-react-fiber_559":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"): void {\r"},"dive-into-react-fiber_560":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressLanes = committedLanes;\r"},"dive-into-react-fiber_561":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressRoot = root;\r"},"dive-into-react-fiber_562":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_563":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 创建一个current指向就Fiber树的alternate\r"},"dive-into-react-fiber_564":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  const current = finishedWork.alternate;\r"},"dive-into-react-fiber_565":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\t// 处理那些由useLayoutEffect创建的layout effects\r"},"dive-into-react-fiber_566":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  commitLayoutEffectOnFiber(root, current, finishedWork, committedLanes);\r"},"dive-into-react-fiber_567":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_568":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressLanes = null;\r"},"dive-into-react-fiber_569":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"  inProgressRoot = null;\r"},"dive-into-react-fiber_570":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"}\r"},"dive-into-react-fiber_571":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_572":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_573":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"从源码里我们可以看到，一旦进入提交阶段后，React是无法中断的。\r"},"dive-into-react-fiber_574":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_575":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"结语\r"},"dive-into-react-fiber_576":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"\r"},"dive-into-react-fiber_577":{"title":"万字长文介绍React Fiber架构的原理和工作模式","content":"以上内容虽无法覆盖Fiber的方方面面，但可以确保你学完后对Fiber会有一个整体上的认识，并且让你在以后阅读互联网上其它关于Fiber架构的文章时，不再因为基础知识困惑，而是能够根据已有的思路轻松地拓展你大脑里关于Fiber架构的知识网。"},"port-forwarding":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"用localtunnel实现内网穿透，完成支付功能的调试","display":"\r"},"port-forwarding_0":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_1":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"内网穿透是什么\r"},"port-forwarding_2":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_3":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"内网穿透是一种技术，它允许你从外部网络（比如互联网）访问内部网络（比如家里或办公室的局域网）中的服务和设备。通过使用内网穿透技术，你可以创建一个通道，使得外部网络的用户能够访问到内部网络中的某个特定服务或设备。\r"},"port-forwarding_4":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_5":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"内网穿透的使用场景\r"},"port-forwarding_6":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_7":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"在我们开发工作中，最常见的需要内网穿透的场景就是本地调试支付功能、微信公众号消息推送。这类场景第三方会往我们的服务器推送数据，在本地调试阶段，我们必须把本地地址暴露到外网才能接收到消息，所以需要用到内网穿透技术。\r"},"port-forwarding_8":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_9":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"介绍Localtunnel\r"},"port-forwarding_10":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_11":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"常用的内网穿透软件有：LocalTunnel、Ngrok 等。本文就来介绍一下 Localtunnel。\r"},"port-forwarding_12":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_13":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"当你使用 LocalTunnel 的时候，LocalTunnel 会为你创建一个临时的公网地址，并将这个网址连接到你的本地服务，外部服务就可以通过这个公网地址访问到你的内网服务。\r"},"port-forwarding_14":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_15":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"Localtunnel用法\r"},"port-forwarding_16":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_17":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"1. 全局安装LocalTunnel \r"},"port-forwarding_18":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"2. 启动服务 ，8000改成你本地服务的端口\r"},"port-forwarding_19":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"    \r"},"port-forwarding_20":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"    启动后就可以生成一个公网地址，如：\r"},"port-forwarding_21":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"    \r"},"port-forwarding_22":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"3. 把这个地址提交给会为你推送数据的第三方服务就可以了。\r"},"port-forwarding_23":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_24":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"注意事项：如果无法启动服务，可以科学上网后再尝试。\r"},"port-forwarding_25":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_26":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"补充(2023年10月）\r"},"port-forwarding_27":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_28":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"vscode已支持应用内设置内网穿透，以后不需要外部工具啦\r"},"port-forwarding_29":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_30":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"port-forwarding_31":{"title":"用localtunnel实现内网穿透，完成支付功能的调试","content":"\r"},"seo-key-options":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"提升网站搜索排名：Next.js的关键SEO配置","display":"\r"},"seo-key-options_0":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_1":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"Next.js 官方文档里介绍了一些关于 metadata 和 sitemap 的配置，但整体来说只算抛砖引玉，所用的方法并不是 Next.js 开发者使用的主流方法。本文就来介绍一下 metadata 的配置与管理、sitemap 的导出和网站访问追踪的引入实现，希望能够帮助你步入 SEO 的优化之路。\r"},"seo-key-options_2":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_3":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"metadata\r"},"seo-key-options_4":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_5":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"从 Next.js v13 开始，Next.js 引入了 metadata API，允许开发者为每个页面定义 metadata（例如网站标题、描述、关键词等），确保每个页面可以显示准确的相关信息，这一实现可以帮助开发者更好地进行 SEO 优化。\r"},"seo-key-options_6":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_7":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"这是为页面添加 metadata 的方法：\r"},"seo-key-options_8":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_9":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_10":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export const metadata = {\r"},"seo-key-options_11":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  // ……\r"},"seo-key-options_12":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"};\r"},"seo-key-options_13":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_14":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export default function Page() {}\r"},"seo-key-options_15":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_16":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_17":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"通常来说，我们希望有一个统一的配置文件，完成共享的 metadata 配置，然后在需要自定义的页面里，既能共享配置，又可以对个别属性进行特殊处理。\r"},"seo-key-options_18":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_19":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"我的做法是创建一个  文件，写入共享的配置。这里分享一下我的配置：\r"},"seo-key-options_20":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_21":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_22":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"const baseSiteConfig = {\r"},"seo-key-options_23":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  name: \"Next.js Demos\",\r"},"seo-key-options_24":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  description:\r"},"seo-key-options_25":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Dive into next.js and react. Share tutorials on the technologies within the Next.js ecosystem.\",\r"},"seo-key-options_26":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  url: \"https://nextjs.weijunext.com\",\r"},"seo-key-options_27":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  keywords: [\r"},"seo-key-options_28":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Next.js\",\r"},"seo-key-options_29":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"React\",\r"},"seo-key-options_30":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Tailwind CSS\",\r"},"seo-key-options_31":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Server Components\",\r"},"seo-key-options_32":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Client Components\",\r"},"seo-key-options_33":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"next-auth\",\r"},"seo-key-options_34":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Upstash\",\r"},"seo-key-options_35":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Redis\",\r"},"seo-key-options_36":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Prisma\",\r"},"seo-key-options_37":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Postgres\",\r"},"seo-key-options_38":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Docker\",\r"},"seo-key-options_39":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \"Contentlayer\",\r"},"seo-key-options_40":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  ],\r"},"seo-key-options_41":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  authors: [\r"},"seo-key-options_42":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    {\r"},"seo-key-options_43":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      name: \"weijunext\",\r"},"seo-key-options_44":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      url: \"https://weijunext.com\",\r"},"seo-key-options_45":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    }\r"},"seo-key-options_46":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  ],\r"},"seo-key-options_47":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  creator: '@weijunext',\r"},"seo-key-options_48":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  themeColor: '#fff',\r"},"seo-key-options_49":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\t// 可以在这个网站生成所有平台的ico：https://realfavicongenerator.net/\r"},"seo-key-options_50":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  icons: {\r"},"seo-key-options_51":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    icon: \"/favicon.ico\",\r"},"seo-key-options_52":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    shortcut: \"/favicon-16x16.png\",\r"},"seo-key-options_53":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    apple: \"/apple-touch-icon.png\",\r"},"seo-key-options_54":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  },\r"},"seo-key-options_55":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  ogImage: \"https://nextjs.weijunext.com/og.jpg\",\r"},"seo-key-options_56":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  links: {\r"},"seo-key-options_57":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    twitter: \"https://twitter.com/weijunext\",\r"},"seo-key-options_58":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    github: \"https://github.com/weijunext/nextjs-learn-demos\",\r"},"seo-key-options_59":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  },\r"},"seo-key-options_60":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"}\r"},"seo-key-options_61":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_62":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export const siteConfig = {\r"},"seo-key-options_63":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  ...baseSiteConfig,\r"},"seo-key-options_64":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  openGraph: {\r"},"seo-key-options_65":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    type: \"website\",\r"},"seo-key-options_66":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    locale: \"en_US\",\r"},"seo-key-options_67":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    url: baseSiteConfig.url,\r"},"seo-key-options_68":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    title: baseSiteConfig.name,\r"},"seo-key-options_69":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    description: baseSiteConfig.description,\r"},"seo-key-options_70":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    siteName: baseSiteConfig.name,\r"},"seo-key-options_71":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  },\r"},"seo-key-options_72":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  twitter: {\r"},"seo-key-options_73":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    card: \"summaryimage\",\r"},"seo-key-options_74":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    title: baseSiteConfig.name,\r"},"seo-key-options_75":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    description: baseSiteConfig.description,\r"},"seo-key-options_76":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    images: [],\r"},"seo-key-options_77":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    creator: baseSiteConfig.creator,\r"},"seo-key-options_78":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  },\r"},"seo-key-options_79":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"}\r"},"seo-key-options_80":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_81":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_82":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"这个配置里比较容易让人疑惑的就是 openGraph 和 twitter：\r"},"seo-key-options_83":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_84":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"1. openGraph配置\r"},"seo-key-options_85":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_86":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"这部分配置是为了定义网页在被分享到社交媒体平台时的展现方式：\r"},"seo-key-options_87":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_88":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- type: 定义了网站的类型。常见的值包括\"website\"、\"article\"等。这里设置为\"website\"，意味着这是一个普通的网站页面，而不是特定的文章或其他内容类型。\r"},"seo-key-options_89":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- locale: 网页的地区和语言设置。\r"},"seo-key-options_90":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- url: 网页的完整URL。\r"},"seo-key-options_91":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- title: 网页的标题，通常在分享预览中作为大标题显示。\r"},"seo-key-options_92":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- description: 网页的简短描述，用于告诉用户这个链接的内容是什么。\r"},"seo-key-options_93":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- siteName: 网站的名称，通常用于区分不同的网站源。\r"},"seo-key-options_94":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"1. twitter配置\r"},"seo-key-options_95":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_96":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"这部分配置是为了定义网页在被分享到Twitter时的展现方式：\r"},"seo-key-options_97":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_98":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- card: 定义了 Twitter 卡片的类型。\"summaryimage\"意味着卡片将展示一个大图片以及摘要信息。其他类型还包括\"summary\"、\"app\"等。\r"},"seo-key-options_99":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- title: Twitter 卡片的标题。\r"},"seo-key-options_100":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- description: 对网页内容的简短描述。\r"},"seo-key-options_101":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- images: 一个图片 URL 数组，表示要在 Twitter 卡片上展示的图片。这里用的是，它是为社交媒体分享专门设计的图片。\r"},"seo-key-options_102":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"- creator: Twitter 卡片的创建者的 Twitter 用户名。这有助于引导关注并增加互动。\r"},"seo-key-options_103":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_104":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"以 RootLayout 里导出 metadata 为例，用法如下：\r"},"seo-key-options_105":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_106":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_107":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export const metadata = {\r"},"seo-key-options_108":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  title: siteConfig.name,\r"},"seo-key-options_109":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  description: siteConfig.description,\r"},"seo-key-options_110":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  keywords: siteConfig.keywords,\r"},"seo-key-options_111":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  authors: siteConfig.authors,\r"},"seo-key-options_112":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  creator: siteConfig.creator,\r"},"seo-key-options_113":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  themeColor: siteConfig.themeColor,\r"},"seo-key-options_114":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  icons: siteConfig.icons,\r"},"seo-key-options_115":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  metadataBase: siteConfig.metadataBase,\r"},"seo-key-options_116":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  openGraph: siteConfig.openGraph,\r"},"seo-key-options_117":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  twitter: siteConfig.twitter,\r"},"seo-key-options_118":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"};\r"},"seo-key-options_119":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_120":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export default function RootLayout() {}\r"},"seo-key-options_121":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_122":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_123":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"实际效果如下，输入的网址显示了 ，点击可打开网址：\r"},"seo-key-options_124":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_125":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_126":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_127":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"sitemap\r"},"seo-key-options_128":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_129":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"sitemap 是向搜索引擎展示网站结构的工具，可以理解为网站地图。有了 ，搜索引擎可以更高效地爬取网站，确保内容更快地展现在搜索结果中。对于大型的、内容丰富的网站，或是频繁更新的网站，sitemap 带来的效益是非常高的。\r"},"seo-key-options_130":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_131":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"Next.js 默认并不自动生成 ，我们可以通过以下三种方式进行配置：\r"},"seo-key-options_132":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_133":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"1. 手动创建：如果你的网站相对较小，可以手动创建。例如：\r"},"seo-key-options_134":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_135":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    xml\r"},"seo-key-options_136":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\""},"seo-key-options_137":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <url"},"seo-key-options_138":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <loc>https://nextjs.weijunext.com</loc"},"seo-key-options_139":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <lastmod>2023-010-06T15:02:24.021Z</lastmod"},"seo-key-options_140":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <changefreq>yearly</changefreq"},"seo-key-options_141":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <priority>1</priority"},"seo-key-options_142":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      </url"},"seo-key-options_143":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <url"},"seo-key-options_144":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <loc>https://nextjs.weijunext.com/hooks</loc"},"seo-key-options_145":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <lastmod>2023-010-06T15:02:24.021Z</lastmod"},"seo-key-options_146":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <changefreq>monthly</changefreq"},"seo-key-options_147":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <priority>0.8</priority"},"seo-key-options_148":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      </url"},"seo-key-options_149":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    </urlset"},"seo-key-options_150":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_151":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_152":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"2. 创建：和上一个方法不同的是，这种方法是维护 js 或 ts 文件，Next.js 会自动帮我们转成 xml 格式的文件。\r"},"seo-key-options_153":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_154":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    在  里，可以手动填写站点，也可以写个自动化获取路径的方法。例如：\r"},"seo-key-options_155":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_156":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    tsx\r"},"seo-key-options_157":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    import { MetadataRoute } from 'next'\r"},"seo-key-options_158":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_159":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    export default function sitemap(): MetadataRoute.Sitemap {\r"},"seo-key-options_160":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      return [\r"},"seo-key-options_161":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        {\r"},"seo-key-options_162":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          url: 'https://nextjs.weijunext.com',\r"},"seo-key-options_163":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          lastModified: new Date(),\r"},"seo-key-options_164":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          changeFrequency: 'yearly',\r"},"seo-key-options_165":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          priority: 1,\r"},"seo-key-options_166":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        },\r"},"seo-key-options_167":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        {\r"},"seo-key-options_168":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          url: 'https://nextjs.weijunext.com/hooks',\r"},"seo-key-options_169":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          lastModified: new Date(),\r"},"seo-key-options_170":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          changeFrequency: 'monthly',\r"},"seo-key-options_171":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          priority: 0.8,\r"},"seo-key-options_172":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        }\r"},"seo-key-options_173":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      ]\r"},"seo-key-options_174":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    }\r"},"seo-key-options_175":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_176":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_177":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"3. 使用外部库：是一个非常流行的库，可以帮助我们自动生成和更新sitemap。\r"},"seo-key-options_178":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_179":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    使用步骤如下：\r"},"seo-key-options_180":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_181":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    - 第一步：安装依赖\r"},"seo-key-options_182":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_183":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        bash\r"},"seo-key-options_184":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        yarn add next-sitemap\r"},"seo-key-options_185":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_186":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_187":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    - 第二步：根目录创建文件 ，获取静态站点列表，配置主要属性：\r"},"seo-key-options_188":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_189":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        jsx\r"},"seo-key-options_190":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        /\r"},"seo-key-options_191":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"         * @type {import('next-sitemap').IConfig}\r"},"seo-key-options_192":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"         * @see https://github.com/iamvishnusankar/next-sitemap#readme\r"},"seo-key-options_193":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"         */\r"},"seo-key-options_194":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        const fs = require('fs');\r"},"seo-key-options_195":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        const path = require('path');\r"},"seo-key-options_196":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        module.exports = {\r"},"seo-key-options_197":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          siteUrl: 'https://nextjs.weijunext.com',\r"},"seo-key-options_198":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          changefreq: 'daily',\r"},"seo-key-options_199":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          priority: 0.7,\r"},"seo-key-options_200":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          exclude: ['/server-sitemap-index.xml'],\r"},"seo-key-options_201":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          generateRobotsTxt: true,\r"},"seo-key-options_202":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          sitemapSize: 5000, // 站点超过5000个，拆分到多个文件\r"},"seo-key-options_203":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          robotsTxtOptions: {\r"},"seo-key-options_204":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            additionalSitemaps: [\r"},"seo-key-options_205":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              'https://nextjs.weijunext.com/server-sitemap-index.xml',\r"},"seo-key-options_206":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            ],\r"},"seo-key-options_207":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            policies: [\r"},"seo-key-options_208":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              {\r"},"seo-key-options_209":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                userAgent: '*',\r"},"seo-key-options_210":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                allow: '/',\r"},"seo-key-options_211":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              },\r"},"seo-key-options_212":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              {\r"},"seo-key-options_213":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                userAgent: 'AhrefsBot',\r"},"seo-key-options_214":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                disallow: ['/'],\r"},"seo-key-options_215":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              },\r"},"seo-key-options_216":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              {\r"},"seo-key-options_217":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                userAgent: 'SemrushBot',\r"},"seo-key-options_218":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                disallow: ['/'],\r"},"seo-key-options_219":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              },\r"},"seo-key-options_220":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              {\r"},"seo-key-options_221":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                userAgent: 'MJ12bot',\r"},"seo-key-options_222":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                disallow: ['/'],\r"},"seo-key-options_223":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              },\r"},"seo-key-options_224":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              {\r"},"seo-key-options_225":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                userAgent: 'DotBot',\r"},"seo-key-options_226":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"                disallow: ['/'],\r"},"seo-key-options_227":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"              },\r"},"seo-key-options_228":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            ],\r"},"seo-key-options_229":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          },\r"},"seo-key-options_230":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        };\r"},"seo-key-options_231":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_232":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_233":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        截至发文日期，这个方法在 app router 下无法获取静态站点，该 issues 还是  状态。\r"},"seo-key-options_234":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_235":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    - 第三步：创建  文件，并请求动态站点列表（如果不需要动态站点，可以去掉这一步）\r"},"seo-key-options_236":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_237":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        tsx\r"},"seo-key-options_238":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        import { getServerSideSitemapIndex } from 'next-sitemap'\r"},"seo-key-options_239":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_240":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        export async function GET(request: Request) {\r"},"seo-key-options_241":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          // Method to source urls from cms\r"},"seo-key-options_242":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          // const urls = await fetch('https//example.com/api')\r"},"seo-key-options_243":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_244":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          return getServerSideSitemapIndex([\r"},"seo-key-options_245":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            'https://example.com/path-1.xml',\r"},"seo-key-options_246":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            'https://example.com/path-2.xml',\r"},"seo-key-options_247":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          ])\r"},"seo-key-options_248":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        }\r"},"seo-key-options_249":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_250":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_251":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    - 第四步： 添加导出  的命令：\r"},"seo-key-options_252":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_253":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        json\r"},"seo-key-options_254":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        {\r"},"seo-key-options_255":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \t\"build\": \"next build\",\r"},"seo-key-options_256":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \t\"postbuild\": \"next-sitemap\"\r"},"seo-key-options_257":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        }\r"},"seo-key-options_258":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_259":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_260":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    - 如果你使用的是 pnpm，还需要创建  文件\r"},"seo-key-options_261":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_262":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        bash\r"},"seo-key-options_263":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        //.npmrc\r"},"seo-key-options_264":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        enable-pre-post-scripts=true\r"},"seo-key-options_265":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_266":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        \r"},"seo-key-options_267":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_268":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    执行  命令后，public 文件夹下就会生成  和  两个文件。\r"},"seo-key-options_269":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    \r"},"seo-key-options_270":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_271":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":" 准备之后，部署到线上环境，然后把  上传给搜索引擎（如：Google Search Console），这样很快就会被搜索引擎收录。\r"},"seo-key-options_272":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_273":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"添加统计代码\r"},"seo-key-options_274":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_275":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"网站发布后，如果我们想监测各个页面的访问量，这就要用到第三方统计工具了，最受欢迎的当属谷歌分析和百度统计。\r"},"seo-key-options_276":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_277":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"你只需要登录谷歌分析和百度统计的网站，创建一个专用的统计代码就可以使用。但是，创建后的统计代码不能直接复制到你的代码里，在 Next.js 里需要用  注入。实现方式如下：\r"},"seo-key-options_278":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_279":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"谷歌分析：\r"},"seo-key-options_280":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_281":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_282":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\"use client\";\r"},"seo-key-options_283":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"import Script from \"next/script\";\r"},"seo-key-options_284":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"const GoogleAnalytics = () =\r"},"seo-key-options_285":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  return (\r"},"seo-key-options_286":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    <"},"seo-key-options_287":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <Script\r"},"seo-key-options_288":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        strategy=\"afterInteractive\"\r"},"seo-key-options_289":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        src={}\r"},"seo-key-options_290":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      /"},"seo-key-options_291":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <Script\r"},"seo-key-options_292":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        id=\"gtag-init\"\r"},"seo-key-options_293":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        strategy=\"afterInteractive\"\r"},"seo-key-options_294":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        dangerouslySetInnerHTML={{\r"},"seo-key-options_295":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          html: `\r"},"seo-key-options_296":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            window.dataLayer = window.dataLayer || [];\r"},"seo-key-options_297":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            function gtag(){dataLayer.push(arguments);}\r"},"seo-key-options_298":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            gtag('js', new Date());\r"},"seo-key-options_299":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            gtag('config', '${process.env.NEXTGOOGLE_ID}', {\r"},"seo-key-options_300":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            page_path: window.location.pathname,\r"},"seo-key-options_301":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            });\r"},"seo-key-options_302":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          `,\r"},"seo-key-options_303":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        }}\r"},"seo-key-options_304":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      /"},"seo-key-options_305":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    </"},"seo-key-options_306":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  );\r"},"seo-key-options_307":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"};\r"},"seo-key-options_308":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export default GoogleAnalytics;\r"},"seo-key-options_309":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_310":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_311":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"百度统计：\r"},"seo-key-options_312":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_313":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_314":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\"use client\";\r"},"seo-key-options_315":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"import Script from \"next/script\";\r"},"seo-key-options_316":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"const BaiDuAnalytics = () =\r"},"seo-key-options_317":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  return (\r"},"seo-key-options_318":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    <"},"seo-key-options_319":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <Script\r"},"seo-key-options_320":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        id=\"baidu-tongji\"\r"},"seo-key-options_321":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        strategy=\"afterInteractive\"\r"},"seo-key-options_322":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        dangerouslySetInnerHTML={{\r"},"seo-key-options_323":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          html: `\r"},"seo-key-options_324":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          var hmt || [];\r"},"seo-key-options_325":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          (function() {\r"},"seo-key-options_326":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            var hm = document.createElement(\"script\");\r"},"seo-key-options_327":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            hm.src = \"https://hm.baidu.com/hm.js?${process.env.NEXTBAIDU_TONGJI}\";\r"},"seo-key-options_328":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            var s = document.getElementsByTagName(\"script\")[0]; \r"},"seo-key-options_329":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"            s.parentNode.insertBefore(hm, s);\r"},"seo-key-options_330":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          })();\r"},"seo-key-options_331":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          `,\r"},"seo-key-options_332":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        }}\r"},"seo-key-options_333":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      /"},"seo-key-options_334":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    </"},"seo-key-options_335":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  );\r"},"seo-key-options_336":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"};\r"},"seo-key-options_337":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export default BaiDuAnalytics;\r"},"seo-key-options_338":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_339":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_340":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"然后在  引入两个组件：\r"},"seo-key-options_341":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_342":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"tsx\r"},"seo-key-options_343":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"export default function RootLayout({\r"},"seo-key-options_344":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  children,\r"},"seo-key-options_345":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"}: {\r"},"seo-key-options_346":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  children: React.ReactNode;\r"},"seo-key-options_347":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"}) {\r"},"seo-key-options_348":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  return (\r"},"seo-key-options_349":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    <html lang=\"en\""},"seo-key-options_350":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      <body"},"seo-key-options_351":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <GoogleAnalytics /"},"seo-key-options_352":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <BaiDuAnalytics /"},"seo-key-options_353":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        <ThemeProvider"},"seo-key-options_354":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"          {//}\r"},"seo-key-options_355":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"        </ThemeProvider"},"seo-key-options_356":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"      </body"},"seo-key-options_357":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"    </html"},"seo-key-options_358":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"  );\r"},"seo-key-options_359":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"}\r"},"seo-key-options_360":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_361":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_362":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"查看一下统计后台，有统计数据就说明代码正确：\r"},"seo-key-options_363":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_364":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_365":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_366":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_367":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_368":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"结语\r"},"seo-key-options_369":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_370":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"本文介绍了 Next.js 的 metadata 和 sitemap 的用法，还介绍了谷歌分析和百度统计的引入方式，这些都是 SEO 优化的关键步骤，也希望大家通过研究和优化 SEO 让网站在搜索引擎里获得高排名。\r"},"seo-key-options_371":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_372":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"源码与演示\r"},"seo-key-options_373":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_374":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"源码1：👉\r"},"seo-key-options_375":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_376":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"源码2：👉\r"},"seo-key-options_377":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_378":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"演示：👉\r"},"seo-key-options_379":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_380":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_381":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"专栏资源\r"},"seo-key-options_382":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_383":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"seo-key-options_384":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_385":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"专栏地址：👉\r"},"seo-key-options_386":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_387":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"专栏演示站：👉\r"},"seo-key-options_388":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_389":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"专栏源码仓库：👉\r"},"seo-key-options_390":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"\r"},"seo-key-options_391":{"title":"提升网站搜索排名：Next.js的关键SEO配置","content":"交个朋友：👉\r"},"integrate-lemonsqueezy-api":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"基于Lemon Squeezy开发你的全球可用的会员功能","display":"\r"},"integrate-lemonsqueezy-api_0":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_1":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"「会员功能系列文章」第一篇中《》，我们梳理了购买会员前后的处理逻辑，这一篇我们就来开发购买会员的功能。\r"},"integrate-lemonsqueezy-api_2":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_3":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"选择支付工具\r"},"integrate-lemonsqueezy-api_4":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_5":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"首先，我们要选择支付平台和工具。如果你的产品立足国内，那么用支付宝和微信支付就足够，如果你的产品还想放眼海外，我推荐使用Lemon Squeezy，原因有两个：\r"},"integrate-lemonsqueezy-api_6":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_7":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"1. Lemon Squeezy会根据用户所在地区提供不同的付费通道，其中包括微信、支付宝、信用卡和Paypal等全球常见的支付方式。\r"},"integrate-lemonsqueezy-api_8":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"2. Lemon Squeezy不仅仅是一个支付接入平台，它更像一个完整的解决方案，例如：它可以帮你管理订阅的自动续费，而微信支付、支付宝这样的渠道只有收付款功能，收付款以外的逻辑需要你自己设计开发。\r"},"integrate-lemonsqueezy-api_9":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_10":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"上一篇文章我们设计了两个付费功能：月度会员和加油包。本文仍延续这样的会员方案设计，并基于Lemon Squeezy来开发它们。\r"},"integrate-lemonsqueezy-api_11":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_12":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"关于Lemon Squeezy的知识就不赘述了，这些都是可以通过啃官方文档学到的知识，如果确有搞不清楚的地方，请评论区提问～。\r"},"integrate-lemonsqueezy-api_13":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_14":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"欢迎加入「🌍」，一起赚美刀。\r"},"integrate-lemonsqueezy-api_15":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_16":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"设置Lemon Squeezy产品\r"},"integrate-lemonsqueezy-api_17":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_18":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"在Lemon Squeezy的后台，先创建一个产品，在创建产品的侧栏里，要添加两个vaiant，可以理解为同一个产品的不同型号，跟你网购时一样，添加不同型号可以方便用户在一个产品链接里切换自己想付费购买的服务。\r"},"integrate-lemonsqueezy-api_19":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_20":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_21":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_22":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"滚动条滚到底部，在Confirmation modal里设置付费成功后的返回地址，默认是跳到Lemon Squeezy的订单页，建议设置为自己的网站，即用户进入付费页面前的URL\r"},"integrate-lemonsqueezy-api_23":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_24":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_25":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_26":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"然后通过页面上和侧栏卡片里的「」按钮获取、和，并加入环境变量\r"},"integrate-lemonsqueezy-api_27":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_28":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"bash\r"},"integrate-lemonsqueezy-api_29":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":".env\r"},"integrate-lemonsqueezy-api_30":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_31":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"Subscriptions\r"},"integrate-lemonsqueezy-api_32":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONHOST=https://api.lemonsqueezy.com/v1\r"},"integrate-lemonsqueezy-api_33":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONAPI_KEY=\r"},"integrate-lemonsqueezy-api_34":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONSTORE_ID=\r"},"integrate-lemonsqueezy-api_35":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONPRODUCT_ID=\r"},"integrate-lemonsqueezy-api_36":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONMEMBERSHIPVARIANT_ID=\r"},"integrate-lemonsqueezy-api_37":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONMEMBERSHIPTIMEID=\r"},"integrate-lemonsqueezy-api_38":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"LEMONSSIGNATURE_SECRET=\r"},"integrate-lemonsqueezy-api_39":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_40":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_41":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"我们使用来进行开发\r"},"integrate-lemonsqueezy-api_42":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_43":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"bash\r"},"integrate-lemonsqueezy-api_44":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"yarn add lemonsqueezy.ts\r"},"integrate-lemonsqueezy-api_45":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_46":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_47":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"初始化\r"},"integrate-lemonsqueezy-api_48":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_49":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_50":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"// lib/lemonsqueezy/lemons.ts\r"},"integrate-lemonsqueezy-api_51":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_52":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { LemonsqueezyClient } from \"lemonsqueezy.ts\";\r"},"integrate-lemonsqueezy-api_53":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"export const client = new LemonsqueezyClient(process.env.LEMONAPI_KEY as string);\r"},"integrate-lemonsqueezy-api_54":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_55":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_56":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"获取购买链接\r"},"integrate-lemonsqueezy-api_57":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_58":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"我们需要在前端展示一个引导用户购买会员的区域，通过不同角色的权限对比，突出付费用户的可获得的优势，例如图片里这样：\r"},"integrate-lemonsqueezy-api_59":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_60":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_61":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_62":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"中间的卡片是升级月度会员，右边的卡片是购买加油包。\r"},"integrate-lemonsqueezy-api_63":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_64":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"卡片上的按钮是用来请求后台获取付费链接的：\r"},"integrate-lemonsqueezy-api_65":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_66":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_67":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"const subscribe = async (vairant) =\r"},"integrate-lemonsqueezy-api_68":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    if (!user || !user.userId) {\r"},"integrate-lemonsqueezy-api_69":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      toast.error(\"Please login first\");\r"},"integrate-lemonsqueezy-api_70":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      return;\r"},"integrate-lemonsqueezy-api_71":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_72":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    try {\r"},"integrate-lemonsqueezy-api_73":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      const { checkoutURL } = await axios.post<any, CreateCheckoutResponse>(\r"},"integrate-lemonsqueezy-api_74":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        \"/api/payment/subscribe\",\r"},"integrate-lemonsqueezy-api_75":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        { userId: user.userId, type: vairant } // 因为一个产品有两个variant，所以需要传递variant用于判断\r"},"integrate-lemonsqueezy-api_76":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      );\r"},"integrate-lemonsqueezy-api_77":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t\t// 在响应中获取到购买URL，客户端将把用户重定向到该URL，用户可在该URL内进行付费和跳转\r"},"integrate-lemonsqueezy-api_78":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      window.location.href = checkoutURL;\r"},"integrate-lemonsqueezy-api_79":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    } catch (err) {\r"},"integrate-lemonsqueezy-api_80":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      console.log(err);\r"},"integrate-lemonsqueezy-api_81":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_82":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  };\r"},"integrate-lemonsqueezy-api_83":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_84":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_85":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"后端添加对应接口\r"},"integrate-lemonsqueezy-api_86":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_87":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_88":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"// app/api/payment/subscribe/route.ts\r"},"integrate-lemonsqueezy-api_89":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_90":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { axios } from \"@/lib/axios\";\r"},"integrate-lemonsqueezy-api_91":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import prisma from \"@/lib/prisma\";\r"},"integrate-lemonsqueezy-api_92":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import type { CreateCheckoutResult } from \"lemonsqueezy.ts/dist/types\";\r"},"integrate-lemonsqueezy-api_93":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { NextResponse } from \"next/server\";\r"},"integrate-lemonsqueezy-api_94":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_95":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"const VARIANTBY_TYPE = {\r"},"integrate-lemonsqueezy-api_96":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  'subscription': process.env.LEMONMEMBERSHIPVARIANTid是number\r"},"integrate-lemonsqueezy-api_97":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  'single': process.env.LEMONMEMBERSHIPTIMEID || '',\r"},"integrate-lemonsqueezy-api_98":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_99":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_100":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"export async function POST(request: Request) {\r"},"integrate-lemonsqueezy-api_101":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  try {\r"},"integrate-lemonsqueezy-api_102":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    const { userId, type } = await request.json() as { userId: string, type: UpgradeType };\r"},"integrate-lemonsqueezy-api_103":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    // 检查用户和variant是否存在\r"},"integrate-lemonsqueezy-api_104":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\tif (!userId) {\r"},"integrate-lemonsqueezy-api_105":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      return NextResponse.json({ message: \"Your account was not found\" }, { status: 401 });\r"},"integrate-lemonsqueezy-api_106":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_107":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\tconst variantId = VARIANTBY_TYPE[type]\r"},"integrate-lemonsqueezy-api_108":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    if (!type || !variantId) {\r"},"integrate-lemonsqueezy-api_109":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      return NextResponse.json({ message: \"The variant was not found\" }, { status: 401 });\r"},"integrate-lemonsqueezy-api_110":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_111":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    const user = await prisma.user.findUnique({\r"},"integrate-lemonsqueezy-api_112":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      where: { userId: userId.toString() },\r"},"integrate-lemonsqueezy-api_113":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      select: { userId: true, email: true, username: true },\r"},"integrate-lemonsqueezy-api_114":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    });\r"},"integrate-lemonsqueezy-api_115":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    if (!user) return NextResponse.json({ message: \"Your account was not found\" }, { status: 401 });\r"},"integrate-lemonsqueezy-api_116":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    \r"},"integrate-lemonsqueezy-api_117":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t// 通过 API 获取购买链接\r"},"integrate-lemonsqueezy-api_118":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\tconst checkout = (await axios.post(\r"},"integrate-lemonsqueezy-api_119":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      ,\r"},"integrate-lemonsqueezy-api_120":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      {\r"},"integrate-lemonsqueezy-api_121":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        data: {\r"},"integrate-lemonsqueezy-api_122":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          type: \"checkouts\",\r"},"integrate-lemonsqueezy-api_123":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          attributes: { checkout_data: { custom: { email: user.email, userId: user.userId, username: user.username, type } } },\r"},"integrate-lemonsqueezy-api_124":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          relationships: {\r"},"integrate-lemonsqueezy-api_125":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            store: { data: { type: \"stores\", id: process.env.LEMONSTORE_ID } },\r"},"integrate-lemonsqueezy-api_126":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            variant: { data: { type: \"variants\", id: variantId.toString() } },\r"},"integrate-lemonsqueezy-api_127":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          },\r"},"integrate-lemonsqueezy-api_128":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        },\r"},"integrate-lemonsqueezy-api_129":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      },\r"},"integrate-lemonsqueezy-api_130":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      {\r"},"integrate-lemonsqueezy-api_131":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        headers: {\r"},"integrate-lemonsqueezy-api_132":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          Authorization: ,\r"},"integrate-lemonsqueezy-api_133":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          Accept: 'application/vnd.api+json',\r"},"integrate-lemonsqueezy-api_134":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          'Content-Type': 'application/vnd.api+json'\r"},"integrate-lemonsqueezy-api_135":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        }\r"},"integrate-lemonsqueezy-api_136":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_137":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    )) as CreateCheckoutResult;\r"},"integrate-lemonsqueezy-api_138":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_139":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ checkoutURL: checkout.data.attributes.url }, { status: 200 });\r"},"integrate-lemonsqueezy-api_140":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  } catch (err: any) {\r"},"integrate-lemonsqueezy-api_141":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ message: err.message || err }, { status: 500 });\r"},"integrate-lemonsqueezy-api_142":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_143":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_144":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_145":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_146":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"其中，是自定义字段，可以把用户标识传进去，在用户付费完成后，Lemon Squeezy会一起把内的信息传回来（下文介绍）。\r"},"integrate-lemonsqueezy-api_147":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_148":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"接收Lemon Squeezy事件推送\r"},"integrate-lemonsqueezy-api_149":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_150":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"在微信开发里，我们通常叫“事件推送”，在Lemon Squeezy里叫做Webhooks，它们的作用是一样，都是用来接收第三方平台推送的数据，用于闭环处理我们自己平台内的逻辑。\r"},"integrate-lemonsqueezy-api_151":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_152":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"此时我们需要内网穿透，推荐使用Localtunnel或者VSCode最新版自带的穿透功能，可以看《👉》。\r"},"integrate-lemonsqueezy-api_153":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_154":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"有了穿透地址后，到Lemon Squeezy里设置Webhooks\r"},"integrate-lemonsqueezy-api_155":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_156":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_157":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_158":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"如果你要用来接收事件推送的接口是，那么Callback URL应该填入。\r"},"integrate-lemonsqueezy-api_159":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_160":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"Signing Secret就是环境变量里的。\r"},"integrate-lemonsqueezy-api_161":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_162":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"事件需勾选、、。\r"},"integrate-lemonsqueezy-api_163":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_164":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"现在，我们创建对应的API\r"},"integrate-lemonsqueezy-api_165":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_166":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_167":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"// app/api/payment/webhooks/route.ts\r"},"integrate-lemonsqueezy-api_168":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_169":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import dayjs from \"dayjs\";\r"},"integrate-lemonsqueezy-api_170":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { headers } from \"next/headers\";\r"},"integrate-lemonsqueezy-api_171":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { Buffer } from \"buffer\";\r"},"integrate-lemonsqueezy-api_172":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import crypto from \"crypto\";\r"},"integrate-lemonsqueezy-api_173":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import rawBody from \"raw-body\";\r"},"integrate-lemonsqueezy-api_174":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { Readable } from \"stream\";\r"},"integrate-lemonsqueezy-api_175":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { NextResponse } from \"next/server\";\r"},"integrate-lemonsqueezy-api_176":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { client } from \"@/lib/lemonsqueezy/lemons\";\r"},"integrate-lemonsqueezy-api_177":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import prisma from \"@/lib/prisma\";\r"},"integrate-lemonsqueezy-api_178":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import redis from \"@/lib/redis\";\r"},"integrate-lemonsqueezy-api_179":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { boostPack } from \"@/lib/upgrade/upgrade\";\r"},"integrate-lemonsqueezy-api_180":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { clearTodayUsage } from \"@/lib/usage/usage\";\r"},"integrate-lemonsqueezy-api_181":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_182":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"export async function POST(request: Request) {\r"},"integrate-lemonsqueezy-api_183":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  console.log('webhook');\r"},"integrate-lemonsqueezy-api_184":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const body = await rawBody(Readable.from(Buffer.from(await request.text())));\r"},"integrate-lemonsqueezy-api_185":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const headersList = headers();\r"},"integrate-lemonsqueezy-api_186":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const payload = JSON.parse(body.toString());\r"},"integrate-lemonsqueezy-api_187":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_188":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const sigString = headersList.get(\"x-signature\");\r"},"integrate-lemonsqueezy-api_189":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (!sigString) {\r"},"integrate-lemonsqueezy-api_190":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    console.error();\r"},"integrate-lemonsqueezy-api_191":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ message: \"Signature header not found\" }, { status: 401 });\r"},"integrate-lemonsqueezy-api_192":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_193":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const secret = process.env.LEMONSSIGNATURE_SECRET as string;\r"},"integrate-lemonsqueezy-api_194":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const hmac = crypto.createHmac(\"sha256\", secret);\r"},"integrate-lemonsqueezy-api_195":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const digest = Buffer.from(hmac.update(body).digest(\"hex\"), \"utf8\");\r"},"integrate-lemonsqueezy-api_196":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const signature = Buffer.from(\r"},"integrate-lemonsqueezy-api_197":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    Array.isArray(sigString) ? sigString.join(\"\") : sigString || \"\",\r"},"integrate-lemonsqueezy-api_198":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    \"utf8\"\r"},"integrate-lemonsqueezy-api_199":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  );\r"},"integrate-lemonsqueezy-api_200":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 校验签名\r"},"integrate-lemonsqueezy-api_201":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (!crypto.timingSafeEqual(digest, signature)) {\r"},"integrate-lemonsqueezy-api_202":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ message: \"Invalid signature\" }, { status: 403 });\r"},"integrate-lemonsqueezy-api_203":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_204":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_205":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const userId = payload.meta.customdata.userId || '';\r"},"integrate-lemonsqueezy-api_206":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 检查custom里的参数\r"},"integrate-lemonsqueezy-api_207":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\tif (!userId) return NextResponse.json({ message: \"No userId provided\" }, { status: 403 });\r"},"integrate-lemonsqueezy-api_208":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_209":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t// 正式处理\r"},"integrate-lemonsqueezy-api_210":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const firstitem = payload.data.attributes.firstitem || null\r"},"integrate-lemonsqueezy-api_211":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 加油包\r"},"integrate-lemonsqueezy-api_212":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (firstitem && parseInt(firstitem.variantSQUEEZYSINGLEVARIANT_ID as string)) {\r"},"integrate-lemonsqueezy-api_213":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return await singlePay(firstitem, payload, userId)\r"},"integrate-lemonsqueezy-api_214":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_215":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 月度订阅\r"},"integrate-lemonsqueezy-api_216":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (!firstitem && parseInt(payload.data.attributes.variantSQUEEZYMONTHLYID as string)) {\r"},"integrate-lemonsqueezy-api_217":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return await subscription(payload, userId)\r"},"integrate-lemonsqueezy-api_218":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_219":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_220":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_221":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_222":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"出于安全考虑，在正式处理数据之前，我们需要先对签名进行校验，然后判断里的字段有效性。\r"},"integrate-lemonsqueezy-api_223":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_224":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"购买加油包属于一次性购买，购买阅读会员是按月续费，两种购买方式收到的数据结构是不一样的，可以通过字段进行区分，一次性购买的订单有这个字段（是一个包含订单核心信息的对象），而按月续费的则没有。\r"},"integrate-lemonsqueezy-api_225":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_226":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"购买加油包\r"},"integrate-lemonsqueezy-api_227":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_228":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_229":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"const getSinglePayOrderKey = ({ identifier }: { identifier: string }) =\r"},"integrate-lemonsqueezy-api_230":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  return \r"},"integrate-lemonsqueezy-api_231":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_232":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_233":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"const singlePay = async (firstitem, payload, userId) =\r"},"integrate-lemonsqueezy-api_234":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  try {\r"},"integrate-lemonsqueezy-api_235":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t// 判断product是否正确\r"},"integrate-lemonsqueezy-api_236":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    if (\r"},"integrate-lemonsqueezy-api_237":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      parseInt(firstitem.product_id) !==\r"},"integrate-lemonsqueezy-api_238":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      parseInt(process.env.LEMONPRODUCT_ID as string)\r"},"integrate-lemonsqueezy-api_239":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    ) {\r"},"integrate-lemonsqueezy-api_240":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      return NextResponse.json({ message: \"Invalid product\" }, { status: 403 });\r"},"integrate-lemonsqueezy-api_241":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_242":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t// 判断用户是否存在\r"},"integrate-lemonsqueezy-api_243":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t  const user = await prisma.user.findUnique({\r"},"integrate-lemonsqueezy-api_244":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t    where: { userId: userId.toString() },\r"},"integrate-lemonsqueezy-api_245":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t    select: { userId: true, email: true, username: true },\r"},"integrate-lemonsqueezy-api_246":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t  });\r"},"integrate-lemonsqueezy-api_247":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t  if (!user) return NextResponse.json({ message: \"Your account was not found\" }, { status: 401 });\r"},"integrate-lemonsqueezy-api_248":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_249":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    switch (payload.meta.event_name) {\r"},"integrate-lemonsqueezy-api_250":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      case \"order_created\": {\r"},"integrate-lemonsqueezy-api_251":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const subscription = await client.retrieveOrder({ id: payload.data.id });\r"},"integrate-lemonsqueezy-api_252":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        // Lemon Squeezy 可能推送多次，这里需要判断order是否已存在，相同order仅处理首次收到的推送\r"},"integrate-lemonsqueezy-api_253":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t\t\t // 检查redis里有没有存这个order_id，如果没有，则调用boostPack和redis保存，如果有，则不处理，直接返回200\r"},"integrate-lemonsqueezy-api_254":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const key = await getSinglePayOrderKey({ identifier: payload.data.attributes.identifier })\r"},"integrate-lemonsqueezy-api_255":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const orderRedisRes = await redis.get(key)\r"},"integrate-lemonsqueezy-api_256":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t\t\t // 如果redis里没有这个key，则说明是首次推送\r"},"integrate-lemonsqueezy-api_257":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        if (!orderRedisRes) {\r"},"integrate-lemonsqueezy-api_258":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          await redis.setex(key, ONEorderat) // key有效期1天\r"},"integrate-lemonsqueezy-api_259":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          await boostPack({ userId }) // 调用上一篇文章设计的 boostPack 方法\r"},"integrate-lemonsqueezy-api_260":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          return NextResponse.json({ status: 200 });\r"},"integrate-lemonsqueezy-api_261":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        }\r"},"integrate-lemonsqueezy-api_262":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        return NextResponse.json({ status: 200 }); // 返回200，Lemon Squeezy才会认为你已经把业务闭环\r"},"integrate-lemonsqueezy-api_263":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_264":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_265":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      default: {\r"},"integrate-lemonsqueezy-api_266":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        return NextResponse.json({ massage: 'event_name not support' }, { status: 400 });\r"},"integrate-lemonsqueezy-api_267":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_268":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_269":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  } catch (e) {\r"},"integrate-lemonsqueezy-api_270":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ message: 'single pay something wrong' }, { status: 500 });\r"},"integrate-lemonsqueezy-api_271":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_272":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_273":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_274":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_275":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 一次性购买只需要处理事件\r"},"integrate-lemonsqueezy-api_276":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- Lemon Squeezy有一个推送机制，最多推送4次以确保我们能够闭环购买逻辑，所以我们需要记录订单信息，通过判断（具备唯一性）是否是新订单来避免重复添加加油包\r"},"integrate-lemonsqueezy-api_277":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- Lemon Squeezy需要收到为200的返回才会认为你正确处理了事件推送，如果不是200，则在后台可以看到错误信息\r"},"integrate-lemonsqueezy-api_278":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_279":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"订阅月度会员\r"},"integrate-lemonsqueezy-api_280":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_281":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"Lemon Squeezy可以帮我们实现记录订阅用户、续费方式、自动续费等多种付费后的逻辑处理，所以接收订阅阅读会员的逻辑没有调用上一篇文章实现的函数。保存会员信息的方式也被我改了，没有存在Redis里，而是直接存到Postgres数据库了。\r"},"integrate-lemonsqueezy-api_282":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_283":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_284":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"const subscription = async (payload, userId) =\r"},"integrate-lemonsqueezy-api_285":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  try {\r"},"integrate-lemonsqueezy-api_286":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    const attributes = payload.data.attributes\r"},"integrate-lemonsqueezy-api_287":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t// 判断product是否正确\r"},"integrate-lemonsqueezy-api_288":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    if (\r"},"integrate-lemonsqueezy-api_289":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      parseInt(attributes.product_id) !==\r"},"integrate-lemonsqueezy-api_290":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      parseInt(process.env.LEMONPRODUCT_ID as string)\r"},"integrate-lemonsqueezy-api_291":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    ) {\r"},"integrate-lemonsqueezy-api_292":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      return NextResponse.json({ message: \"Invalid product\" }, { status: 403 });\r"},"integrate-lemonsqueezy-api_293":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_294":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_295":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    switch (payload.meta.event_name) {\r"},"integrate-lemonsqueezy-api_296":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      case \"subscription_created\": {\r"},"integrate-lemonsqueezy-api_297":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const subscription = await client.retrieveSubscription({ id: payload.data.id });\r"},"integrate-lemonsqueezy-api_298":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        // 订阅\r"},"integrate-lemonsqueezy-api_299":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        await prisma.user.update({\r"},"integrate-lemonsqueezy-api_300":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          where: { userId },\r"},"integrate-lemonsqueezy-api_301":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          data: {\r"},"integrate-lemonsqueezy-api_302":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            subscriptionId: ,\r"},"integrate-lemonsqueezy-api_303":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            customerId: ,\r"},"integrate-lemonsqueezy-api_304":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            variantId: subscription.data.attributes.variant_id,\r"},"integrate-lemonsqueezy-api_305":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            currentPeriodEnd: dayjs(subscription.data.attributes.renews_at).unix(),\r"},"integrate-lemonsqueezy-api_306":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          },\r"},"integrate-lemonsqueezy-api_307":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        });\r"},"integrate-lemonsqueezy-api_308":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        // 清空今天已用次数\r"},"integrate-lemonsqueezy-api_309":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        clearTodayUsage({ userId })\r"},"integrate-lemonsqueezy-api_310":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        return NextResponse.json({ status: 200 });\r"},"integrate-lemonsqueezy-api_311":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_312":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_313":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      case \"subscription_updated\": {\r"},"integrate-lemonsqueezy-api_314":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const subscription = await client.retrieveSubscription({ id: payload.data.id });\r"},"integrate-lemonsqueezy-api_315":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        // 更新 订阅\r"},"integrate-lemonsqueezy-api_316":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        const user = await prisma.user.findUnique({\r"},"integrate-lemonsqueezy-api_317":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          where: { userId, subscriptionId:  },\r"},"integrate-lemonsqueezy-api_318":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          select: { subscriptionId: true },\r"},"integrate-lemonsqueezy-api_319":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        });\r"},"integrate-lemonsqueezy-api_320":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\t\t\t\t if (!user || !user.subscriptionId) return NextResponse.json({ massage: 'userId or subscriptionId not found' }, { status: 400 });;\r"},"integrate-lemonsqueezy-api_321":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_322":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        await prisma.user.update({\r"},"integrate-lemonsqueezy-api_323":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          where: { userId, subscriptionId: user.subscriptionId },\r"},"integrate-lemonsqueezy-api_324":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          data: {\r"},"integrate-lemonsqueezy-api_325":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            variantId: subscription.data.attributes.variant_id,\r"},"integrate-lemonsqueezy-api_326":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"            currentPeriodEnd: dayjs(subscription.data.attributes.renews_at).unix(),\r"},"integrate-lemonsqueezy-api_327":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"          },\r"},"integrate-lemonsqueezy-api_328":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        });\r"},"integrate-lemonsqueezy-api_329":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        // 清空今天已用次数\r"},"integrate-lemonsqueezy-api_330":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        clearTodayUsage({ userId })\r"},"integrate-lemonsqueezy-api_331":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        return NextResponse.json({ status: 200 });\r"},"integrate-lemonsqueezy-api_332":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_333":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_334":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      default: {\r"},"integrate-lemonsqueezy-api_335":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        return NextResponse.json({ massage: 'event_name not support' }, { status: 400 });\r"},"integrate-lemonsqueezy-api_336":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      }\r"},"integrate-lemonsqueezy-api_337":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    }\r"},"integrate-lemonsqueezy-api_338":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  } catch (e) {\r"},"integrate-lemonsqueezy-api_339":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    console.log('subscription deal', e);\r"},"integrate-lemonsqueezy-api_340":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    return NextResponse.json({ message: 'subscription something wrong' }, { status: 500 });\r"},"integrate-lemonsqueezy-api_341":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_342":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_343":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_344":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_345":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 按月订阅的推送数据从里读取\r"},"integrate-lemonsqueezy-api_346":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 按月订阅的订单，Lemon Squeezy会在到期后默认进行续费，所以我们需要监听和两个事件，前者是创建订阅时触发，后者是创建订阅和更新订阅（包含续订、取消等）都会触发\r"},"integrate-lemonsqueezy-api_347":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 的处理中，建议记录（订阅的Id）、（Lemon Squeezy记录的用户Id）、（variant Id）和（到期时间）\r"},"integrate-lemonsqueezy-api_348":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 的处理中，需要更新和\r"},"integrate-lemonsqueezy-api_349":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_350":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"前端展示订阅信息\r"},"integrate-lemonsqueezy-api_351":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_352":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"我们已经完成与Lemon Squeezy的功能对接，现在最后一步就是要把用户的订阅/购买信息展示给用户。\r"},"integrate-lemonsqueezy-api_353":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_354":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"加油包的信息从Redis里读取就可以，和上一篇文章的逻辑一样。\r"},"integrate-lemonsqueezy-api_355":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_356":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"按月订阅的信息则要从数据库中读取：\r"},"integrate-lemonsqueezy-api_357":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_358":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_359":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"/\r"},"integrate-lemonsqueezy-api_360":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":" * lib/lemonsqueezy/subscription.ts\r"},"integrate-lemonsqueezy-api_361":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":" * 从数据库里读取用户角色和会员过期时间\r"},"integrate-lemonsqueezy-api_362":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":" */\r"},"integrate-lemonsqueezy-api_363":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import prisma from \"@/lib/prisma\";\r"},"integrate-lemonsqueezy-api_364":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { SubScriptionInfo } from \"@/types/subscribe\";\r"},"integrate-lemonsqueezy-api_365":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"import { PrismaUser } from \"@/types/user\";\r"},"integrate-lemonsqueezy-api_366":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_367":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"export async function getUserSubscriptionStatus({ userId, defaultUser }: { userId: string; defaultUser?: PrismaUser }) {\r"},"integrate-lemonsqueezy-api_368":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  let user = null\r"},"integrate-lemonsqueezy-api_369":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (defaultUser) {\r"},"integrate-lemonsqueezy-api_370":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    user = defaultUser\r"},"integrate-lemonsqueezy-api_371":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  } else {\r"},"integrate-lemonsqueezy-api_372":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    user = await prisma.user.findUnique({\r"},"integrate-lemonsqueezy-api_373":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      where: { userId },\r"},"integrate-lemonsqueezy-api_374":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      select: {\r"},"integrate-lemonsqueezy-api_375":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        subscriptionId: true,\r"},"integrate-lemonsqueezy-api_376":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        currentPeriodEnd: true,\r"},"integrate-lemonsqueezy-api_377":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        customerId: true,\r"},"integrate-lemonsqueezy-api_378":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"        variantId: true,\r"},"integrate-lemonsqueezy-api_379":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"      },\r"},"integrate-lemonsqueezy-api_380":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    });\r"},"integrate-lemonsqueezy-api_381":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_382":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_383":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (!user) throw new Error(\"User not found\");\r"},"integrate-lemonsqueezy-api_384":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_385":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const membershipExpire = (user.currentPeriodEnd || 1) * 1000 // 13位时间戳或非会员\r"},"integrate-lemonsqueezy-api_386":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const isMembership =\r"},"integrate-lemonsqueezy-api_387":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    user.variantId &&\r"},"integrate-lemonsqueezy-api_388":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    membershipExpire \r"},"integrate-lemonsqueezy-api_389":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_390":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  return {\r"},"integrate-lemonsqueezy-api_391":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    subscriptionId: user.subscriptionId,\r"},"integrate-lemonsqueezy-api_392":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    membershipExpire: isMembership ? membershipExpire : 1,\r"},"integrate-lemonsqueezy-api_393":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    customerId: user.customerId,\r"},"integrate-lemonsqueezy-api_394":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    variantId: user.variantId,\r"},"integrate-lemonsqueezy-api_395":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    role: isMembership ? 2 : 1, // 会员 : 普通用户\r"},"integrate-lemonsqueezy-api_396":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  } as SubScriptionInfo;\r"},"integrate-lemonsqueezy-api_397":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_398":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_399":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_400":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"- 通过过期时间判断用户当前的角色\r"},"integrate-lemonsqueezy-api_401":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_402":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"把加油包、月度会员、用户使用次数数据汇总到一个方法里：\r"},"integrate-lemonsqueezy-api_403":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_404":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"tsx\r"},"integrate-lemonsqueezy-api_405":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"// lib/upgrade/checkStatus.ts\r"},"integrate-lemonsqueezy-api_406":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_407":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"export const checkStatus = async ({ userId }: UserId) =\r"},"integrate-lemonsqueezy-api_408":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 获取用户订阅信息（角色、会员到期时间戳）\r"},"integrate-lemonsqueezy-api_409":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const subscriptionRes = await getUserSubscriptionStatus({\r"},"integrate-lemonsqueezy-api_410":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    userId,\r"},"integrate-lemonsqueezy-api_411":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  })\r"},"integrate-lemonsqueezy-api_412":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 根据角色计算当日剩余次数\r"},"integrate-lemonsqueezy-api_413":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  const remainingInfo: DateRemaining = await getUserDateRemaining({ userId, role: subscriptionRes.role }) // 用户角色、当日剩余次数、加油包剩余次数\r"},"integrate-lemonsqueezy-api_414":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_415":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  // 如果加油包次数大于0，计算加油包到期时间\r"},"integrate-lemonsqueezy-api_416":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  let boostPackExpire = 0\r"},"integrate-lemonsqueezy-api_417":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  if (remainingInfo.boostPackRemaining \r"},"integrate-lemonsqueezy-api_418":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    const boostPackKey = await getBoostPackKey({ userId })\r"},"integrate-lemonsqueezy-api_419":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    boostPackExpire = await redis.ttl(boostPackKey)\r"},"integrate-lemonsqueezy-api_420":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_421":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  return {\r"},"integrate-lemonsqueezy-api_422":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    role: subscriptionRes.role,\r"},"integrate-lemonsqueezy-api_423":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    todayRemaining: remainingInfo.userTodayRemaining,\r"},"integrate-lemonsqueezy-api_424":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    membershipExpire: subscriptionRes.membershipExpire,\r"},"integrate-lemonsqueezy-api_425":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    boostPackRemaining: remainingInfo.boostPackRemaining,\r"},"integrate-lemonsqueezy-api_426":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"    boostPackExpire: boostPackExpire,\r"},"integrate-lemonsqueezy-api_427":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"  }\r"},"integrate-lemonsqueezy-api_428":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"}\r"},"integrate-lemonsqueezy-api_429":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_430":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_431":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"服务端组件调用这个方法就可以获取到所有必备信息，并展示到前端了。\r"},"integrate-lemonsqueezy-api_432":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_433":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"结语\r"},"integrate-lemonsqueezy-api_434":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_435":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"无论你使用哪个支付平台和工具，开发起来的原理都差不多，只有两个要点：\r"},"integrate-lemonsqueezy-api_436":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_437":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"1. 获取支付页面链接\r"},"integrate-lemonsqueezy-api_438":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"2. 提供Webhooks接收支付平台的事件推送，然后根据事件进行相应处理\r"},"integrate-lemonsqueezy-api_439":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_440":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"如果你还没理清楚会员功能的设计，请参考上一篇文章《》。\r"},"integrate-lemonsqueezy-api_441":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_442":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_443":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"专栏资源\r"},"integrate-lemonsqueezy-api_444":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_445":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"integrate-lemonsqueezy-api_446":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_447":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"专栏地址：👉\r"},"integrate-lemonsqueezy-api_448":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_449":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"专栏演示站：👉\r"},"integrate-lemonsqueezy-api_450":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_451":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"专栏源码仓库：👉\r"},"integrate-lemonsqueezy-api_452":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"\r"},"integrate-lemonsqueezy-api_453":{"title":"基于Lemon Squeezy开发你的全球可用的会员功能","content":"交个朋友：👉\r"},"build-membership-feature":{"title":"带你设计一套会员功能并开发它","content":"带你设计一套会员功能并开发它","display":"\r"},"build-membership-feature_0":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_1":{"title":"带你设计一套会员功能并开发它","content":"引言\r"},"build-membership-feature_2":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_3":{"title":"带你设计一套会员功能并开发它","content":"相信每一位程序员都梦想着有一天开发出自己的产品，而且有人愿意为自己的产品买单。用户买单的方式可能是一次性购买产品的使用权、购买产品会员享受高级功能等等。本文和下一篇文章将进行会员与支付功能的设计开发分享，希望可以给正在开发会员功能的开发者提供一点帮助。\r"},"build-membership-feature_4":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_5":{"title":"带你设计一套会员功能并开发它","content":"本文我们先把支付的逻辑放一边，只关注会员功能的设计和开发，抽丝剥茧，为接入支付功能打好基础。\r"},"build-membership-feature_6":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_7":{"title":"带你设计一套会员功能并开发它","content":"「会员功能系列文章」第二篇：《👉》\r"},"build-membership-feature_8":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_9":{"title":"带你设计一套会员功能并开发它","content":"设计思考与开发\r"},"build-membership-feature_10":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_11":{"title":"带你设计一套会员功能并开发它","content":"当我们开始思考设计一个会员功能的时候，它包含了用户类别的设计、数据存储的设计、后端API的设计、前端界面的设计和预防风险的设计。现在我们就一个个理清思路。\r"},"build-membership-feature_12":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_13":{"title":"带你设计一套会员功能并开发它","content":"用户类别设计\r"},"build-membership-feature_14":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_15":{"title":"带你设计一套会员功能并开发它","content":"我正在开发一个工具类网站，为了给用户提供更多的灵活性并满足不同的使用需求，我决定将用户分为三类：\r"},"build-membership-feature_16":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_17":{"title":"带你设计一套会员功能并开发它","content":"- 免费用户：每天可以使用10次，用户角色值设为1\r"},"build-membership-feature_18":{"title":"带你设计一套会员功能并开发它","content":"- 月度会员：每天可以使用500次，用户角色值设为2\r"},"build-membership-feature_19":{"title":"带你设计一套会员功能并开发它","content":"- 加油包用户：每次购买可增加100次可用次数，免费用户和月度会员均可成为加油包用户，所以不用单独设置角色值\r"},"build-membership-feature_20":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_21":{"title":"带你设计一套会员功能并开发它","content":"付费功能核心逻辑是这样：\r"},"build-membership-feature_22":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_23":{"title":"带你设计一套会员功能并开发它","content":"- 免费用户可以升级为月度会员，一个会员周期是31天\r"},"build-membership-feature_24":{"title":"带你设计一套会员功能并开发它","content":"- 会员可以提前续费，会员有效期会顺延\r"},"build-membership-feature_25":{"title":"带你设计一套会员功能并开发它","content":"- 当用户的使用次数达到限制，可通过加油包获取更多次数，每次购买加油包获得100次使用次数，有效期为7天，如果多次购买，加油包有效期会顺延\r"},"build-membership-feature_26":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_27":{"title":"带你设计一套会员功能并开发它","content":"我认为这种设计可以兼顾轻度用户、重度用户和临时重度用户，再通过定价策略，就可以激励潜在的重度需求的用户购买月度会员。当然这套设计未经验证，如果效果不好，到时候再调整就好了。\r"},"build-membership-feature_28":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_29":{"title":"带你设计一套会员功能并开发它","content":"数据存储设计\r"},"build-membership-feature_30":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_31":{"title":"带你设计一套会员功能并开发它","content":"因为会员和加油包有过期时间，如果把相关数据记录在像 MySQL 或者 Postgres 里，我还需要定时去更改用户角色，无形中给自己增加了开发量。为了让开发流程更丝滑，我选择了 Redis 作为数据存储的解决方案，我只需要给 Redis key 设置过期时间，key 过期就查不到了，等同于会员或加油包到期。\r"},"build-membership-feature_32":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_33":{"title":"带你设计一套会员功能并开发它","content":"Redis 我仍然沿用 Upstash 的免费 Redis 资源，关于 Upstash 的介绍，可以看我的这篇文章：👉《》。\r"},"build-membership-feature_34":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_35":{"title":"带你设计一套会员功能并开发它","content":"本文默认你对 Redis 的基础类型和命令有一定的认识，所以不会对 Redis 的用法进行介绍。\r"},"build-membership-feature_36":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_37":{"title":"带你设计一套会员功能并开发它","content":"对于数据存储的设计，我首先需要设计几个关键的 Redis key：\r"},"build-membership-feature_38":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_39":{"title":"带你设计一套会员功能并开发它","content":"- 用户每日已使用次数：\r"},"build-membership-feature_40":{"title":"带你设计一套会员功能并开发它","content":"    - 用户每日第一次使用功能时，通过自增命令，Redis 会自动创建一个与日期相关的 key；\r"},"build-membership-feature_41":{"title":"带你设计一套会员功能并开发它","content":"    - 有了每日使用的次数，我就可以通过用户角色对应的日上限（普通用户10次，会员500次）算出该用户每日剩余次数\r"},"build-membership-feature_42":{"title":"带你设计一套会员功能并开发它","content":"    - 为什么我记录已使用次数，而不是记录剩余次数？这是因为，如果记录剩余次数，当剩余0次时会查询到0，而当天第一次使用前，查询剩余次数会因为 key 不存在而查到 ，在区分0和  的时候，可能会出现混淆，所以我认为记录已使用次数是更好的做法。\r"},"build-membership-feature_43":{"title":"带你设计一套会员功能并开发它","content":"- 会员状态：\r"},"build-membership-feature_44":{"title":"带你设计一套会员功能并开发它","content":"    - 用户升级会员后，服务端会在 Redis 里创建这个用户的会员状态 key，value 设置为2，表示用户是有效的会员。\r"},"build-membership-feature_45":{"title":"带你设计一套会员功能并开发它","content":"    - key 的过期时间是会员的剩余有效期（秒为单位）。\r"},"build-membership-feature_46":{"title":"带你设计一套会员功能并开发它","content":"- 加油包余额：\r"},"build-membership-feature_47":{"title":"带你设计一套会员功能并开发它","content":"    - 用户购买加油包后，会创建一个初始 value 为100的加油包余额 key\r"},"build-membership-feature_48":{"title":"带你设计一套会员功能并开发它","content":"    - key 的过期时间是加油包的有效期（秒为单位）\r"},"build-membership-feature_49":{"title":"带你设计一套会员功能并开发它","content":"    - 当用户日限额用完后，开始扣加油包的余额，用  进行自减\r"},"build-membership-feature_50":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_51":{"title":"带你设计一套会员功能并开发它","content":"服务端设计与开发\r"},"build-membership-feature_52":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_53":{"title":"带你设计一套会员功能并开发它","content":"在真实的生产环境中，我们一般是通过查询订单状态，然后内部调用升级、续费、获得加油包的方法，但本文一方面是剥离了支付功能，另一方面出于方便测试和演示，所有相关功能全部以暴露接口、接口再调用内部方法的方式来展开说明。\r"},"build-membership-feature_54":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_55":{"title":"带你设计一套会员功能并开发它","content":"参数类型和常量定义\r"},"build-membership-feature_56":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_57":{"title":"带你设计一套会员功能并开发它","content":"首先把用户角色类型和重要的常量定义清楚。\r"},"build-membership-feature_58":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_59":{"title":"带你设计一套会员功能并开发它","content":"用户角色类型定义：\r"},"build-membership-feature_60":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_61":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_62":{"title":"带你设计一套会员功能并开发它","content":"// @/types/user.ts\r"},"build-membership-feature_63":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_64":{"title":"带你设计一套会员功能并开发它","content":"// ……\r"},"build-membership-feature_65":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_66":{"title":"带你设计一套会员功能并开发它","content":"export interface UserSub {\r"},"build-membership-feature_67":{"title":"带你设计一套会员功能并开发它","content":"  sub: string;\r"},"build-membership-feature_68":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_69":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_70":{"title":"带你设计一套会员功能并开发它","content":"export type Role = 1 | 2; // 1 普通用户; 2 会员\r"},"build-membership-feature_71":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_72":{"title":"带你设计一套会员功能并开发它","content":"export interface DateRemaining {\r"},"build-membership-feature_73":{"title":"带你设计一套会员功能并开发它","content":"  role: number; // 用户角色\r"},"build-membership-feature_74":{"title":"带你设计一套会员功能并开发它","content":"  userTodayRemaining: number; // 今天剩余次数\r"},"build-membership-feature_75":{"title":"带你设计一套会员功能并开发它","content":"  boostPackRemaining: number; // 加油包剩余次数\r"},"build-membership-feature_76":{"title":"带你设计一套会员功能并开发它","content":"  userDateRemaining: number; // 上面二者总的剩余次数\r"},"build-membership-feature_77":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_78":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_79":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_80":{"title":"带你设计一套会员功能并开发它","content":"为了更方便地维护 Redis 相关的 key 和其它设置，我们还可以创建一个文件用来记录这些信息，如：\r"},"build-membership-feature_81":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_82":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_83":{"title":"带你设计一套会员功能并开发它","content":"// @/lib/membership/constants.ts\r"},"build-membership-feature_84":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_85":{"title":"带你设计一套会员功能并开发它","content":"import { Role, UserSub } from \"@/types/user\";\r"},"build-membership-feature_86":{"title":"带你设计一套会员功能并开发它","content":"export const ROLES: { [key in Role]: string } = {\r"},"build-membership-feature_87":{"title":"带你设计一套会员功能并开发它","content":"  1: 'Basic',\r"},"build-membership-feature_88":{"title":"带你设计一套会员功能并开发它","content":"  2: 'MemberShip',\r"},"build-membership-feature_89":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_90":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_91":{"title":"带你设计一套会员功能并开发它","content":"export const ROLES_LIMIT: { [key in Role]: number } = {\r"},"build-membership-feature_92":{"title":"带你设计一套会员功能并开发它","content":"  1: process.env.COMMONDAILYSTR && Number(process.env.COMMONDAILYSTR) || 10,\r"},"build-membership-feature_93":{"title":"带你设计一套会员功能并开发它","content":"  2: process.env.MEMBERSHIPLIMITDAILYSTR) || 500,\r"},"build-membership-feature_94":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_95":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_96":{"title":"带你设计一套会员功能并开发它","content":"export const DATEKEY 24 * 10 // 10天，用户日用量保存时长\r"},"build-membership-feature_97":{"title":"带你设计一套会员功能并开发它","content":"export const MEMBERSHIP 24 * 31 // 31天，会员一个月的时间\r"},"build-membership-feature_98":{"title":"带你设计一套会员功能并开发它","content":"export const MEMBERSHIPVALUE = 2 // 月度会员的值\r"},"build-membership-feature_99":{"title":"带你设计一套会员功能并开发它","content":"export const BOOSTEXPIRE = 3600  7 // 7天，购买加油包的使用期限\r"},"build-membership-feature_100":{"title":"带你设计一套会员功能并开发它","content":"export const BOOSTUSES = 100 // 每次购买加油包获得的次数\r"},"build-membership-feature_101":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_102":{"title":"带你设计一套会员功能并开发它","content":"// key统一管理，可以降低维护难度\r"},"build-membership-feature_103":{"title":"带你设计一套会员功能并开发它","content":"export const getUserDateUsageKey = ({ sub }: UserSub) =\r"},"build-membership-feature_104":{"title":"带你设计一套会员功能并开发它","content":"  const currentDate = new Date().toLocaleDateString();\r"},"build-membership-feature_105":{"title":"带你设计一套会员功能并开发它","content":"  return \r"},"build-membership-feature_106":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_107":{"title":"带你设计一套会员功能并开发它","content":"export const getMembershipStatusKey = ({ sub }: UserSub) =\r"},"build-membership-feature_108":{"title":"带你设计一套会员功能并开发它","content":"  return \r"},"build-membership-feature_109":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_110":{"title":"带你设计一套会员功能并开发它","content":"export const getBoostPackKey = ({ sub }: UserSub) =\r"},"build-membership-feature_111":{"title":"带你设计一套会员功能并开发它","content":"  return \r"},"build-membership-feature_112":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_113":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_114":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_115":{"title":"带你设计一套会员功能并开发它","content":"API设计开发\r"},"build-membership-feature_116":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_117":{"title":"带你设计一套会员功能并开发它","content":"1、升级/续费会员：\r"},"build-membership-feature_118":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_119":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_120":{"title":"带你设计一套会员功能并开发它","content":"// @/app/api/membership/fake/upgrade/route.ts\r"},"build-membership-feature_121":{"title":"带你设计一套会员功能并开发它","content":"import { upgrade } from \"@/lib/membership/upgrade\";\r"},"build-membership-feature_122":{"title":"带你设计一套会员功能并开发它","content":"import { NextRequest, NextResponse } from \"next/server\";\r"},"build-membership-feature_123":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_124":{"title":"带你设计一套会员功能并开发它","content":"export async function POST(req: NextRequest) {\r"},"build-membership-feature_125":{"title":"带你设计一套会员功能并开发它","content":"  try {\r"},"build-membership-feature_126":{"title":"带你设计一套会员功能并开发它","content":"    const { sub } = await req.json();\r"},"build-membership-feature_127":{"title":"带你设计一套会员功能并开发它","content":"    const res = await upgrade({ sub }) // upgrade是一个内部方法，后续接入支付可直接调用\r"},"build-membership-feature_128":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json(res)\r"},"build-membership-feature_129":{"title":"带你设计一套会员功能并开发它","content":"  } catch (e) {\r"},"build-membership-feature_130":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json({ error: \"failed to upgrade\" }, { status: 500 });\r"},"build-membership-feature_131":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_132":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_133":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_134":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_135":{"title":"带你设计一套会员功能并开发它","content":"功能设计：\r"},"build-membership-feature_136":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_137":{"title":"带你设计一套会员功能并开发它","content":"- 判断当前用户角色\r"},"build-membership-feature_138":{"title":"带你设计一套会员功能并开发它","content":"    - 如果是普通用户，则升级会员，设置的value为2，过期时间31天\r"},"build-membership-feature_139":{"title":"带你设计一套会员功能并开发它","content":"    - 如果是会员用户，则延长会员期，更新的过期时间。\r"},"build-membership-feature_140":{"title":"带你设计一套会员功能并开发它","content":"- 每次购买都清空当日已使用次数，这是出于用户体验的考虑，可以不要\r"},"build-membership-feature_141":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_142":{"title":"带你设计一套会员功能并开发它","content":"代码实现如下：\r"},"build-membership-feature_143":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_144":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_145":{"title":"带你设计一套会员功能并开发它","content":"// @/lib/membership/upgrade.ts\r"},"build-membership-feature_146":{"title":"带你设计一套会员功能并开发它","content":"export const upgrade = async ({ sub }: UserSub) =\r"},"build-membership-feature_147":{"title":"带你设计一套会员功能并开发它","content":"  // 检查用户角色\r"},"build-membership-feature_148":{"title":"带你设计一套会员功能并开发它","content":"  const userRoleKey = await getMembershipStatusKey({ sub })\r"},"build-membership-feature_149":{"title":"带你设计一套会员功能并开发它","content":"  const userRole: Role = await redis.get(userRoleKey) || 1\r"},"build-membership-feature_150":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_151":{"title":"带你设计一套会员功能并开发它","content":"  // 普通用户，直接设置role和过期时间\r"},"build-membership-feature_152":{"title":"带你设计一套会员功能并开发它","content":"  if (userRole === 1) {\r"},"build-membership-feature_153":{"title":"带你设计一套会员功能并开发它","content":"    const res = await redis.set(userRoleKey, MEMBERSHIPVALUE, { ex: MEMBERSHIP_EXPIRE })\r"},"build-membership-feature_154":{"title":"带你设计一套会员功能并开发它","content":"    if (res === 'OK') {\r"},"build-membership-feature_155":{"title":"带你设计一套会员功能并开发它","content":"      // 清空今天已用次数\r"},"build-membership-feature_156":{"title":"带你设计一套会员功能并开发它","content":"      clearTodayUsage({ sub })\r"},"build-membership-feature_157":{"title":"带你设计一套会员功能并开发它","content":"      return { sub, oldRole: ROLES[userRole], newRole: ROLES[MEMBERSHIPVALUE], expire: MEMBERSHIP_EXPIRE, upgrade: 'success' }\r"},"build-membership-feature_158":{"title":"带你设计一套会员功能并开发它","content":"    }\r"},"build-membership-feature_159":{"title":"带你设计一套会员功能并开发它","content":"    return { sub, oldRole: ROLES[userRole], upgrade: 'fail' }\r"},"build-membership-feature_160":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_161":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_162":{"title":"带你设计一套会员功能并开发它","content":"  // 会员用户，查询过期时间，计算新的过期时间，更新过期时间\r"},"build-membership-feature_163":{"title":"带你设计一套会员功能并开发它","content":"  const TTL = await redis.ttl(userRoleKey)\r"},"build-membership-feature_164":{"title":"带你设计一套会员功能并开发它","content":"  const newTTL = TTL + MEMBERSHIP_EXPIRE\r"},"build-membership-feature_165":{"title":"带你设计一套会员功能并开发它","content":"  const res = await redis.expire(userRoleKey, newTTL)\r"},"build-membership-feature_166":{"title":"带你设计一套会员功能并开发它","content":"  if (res === 1) {\r"},"build-membership-feature_167":{"title":"带你设计一套会员功能并开发它","content":"    // redis操作成功，清空今天已用次数\r"},"build-membership-feature_168":{"title":"带你设计一套会员功能并开发它","content":"    clearTodayUsage({ sub })\r"},"build-membership-feature_169":{"title":"带你设计一套会员功能并开发它","content":"    return { sub, oldRole: ROLES[MEMBERSHIPVALUE], newRole: ROLES[MEMBERSHIPVALUE], expire: newTTL, upgrade: 'success' }\r"},"build-membership-feature_170":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_171":{"title":"带你设计一套会员功能并开发它","content":"  return { sub, oldRole: ROLES[MEMBERSHIPVALUE], newRole: ROLES[MEMBERSHIPVALUE], expire: TTL, upgrade: 'fail' }\r"},"build-membership-feature_172":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_173":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_174":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_175":{"title":"带你设计一套会员功能并开发它","content":"这样升级/续费的接口就完成了，可以通过postman进行逻辑测试。完整源码和线上演示地址放在文末。\r"},"build-membership-feature_176":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_177":{"title":"带你设计一套会员功能并开发它","content":"2、购买加油包：\r"},"build-membership-feature_178":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_179":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_180":{"title":"带你设计一套会员功能并开发它","content":"// @/app/api/membership/fake/bugBoostPack/route.ts\r"},"build-membership-feature_181":{"title":"带你设计一套会员功能并开发它","content":"import { boostPack } from \"@/lib/membership/boostPack\";\r"},"build-membership-feature_182":{"title":"带你设计一套会员功能并开发它","content":"import { NextRequest, NextResponse } from \"next/server\";\r"},"build-membership-feature_183":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_184":{"title":"带你设计一套会员功能并开发它","content":"export async function POST(req: NextRequest) {\r"},"build-membership-feature_185":{"title":"带你设计一套会员功能并开发它","content":"  try {\r"},"build-membership-feature_186":{"title":"带你设计一套会员功能并开发它","content":"    const { sub } = await req.json();\r"},"build-membership-feature_187":{"title":"带你设计一套会员功能并开发它","content":"    const res = await boostPack({ sub })\r"},"build-membership-feature_188":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json(res)\r"},"build-membership-feature_189":{"title":"带你设计一套会员功能并开发它","content":"  } catch (e) {\r"},"build-membership-feature_190":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json({ error: \"failed to purchase boost pack\" }, { status: 500 });\r"},"build-membership-feature_191":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_192":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_193":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_194":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_195":{"title":"带你设计一套会员功能并开发它","content":"功能设计：\r"},"build-membership-feature_196":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_197":{"title":"带你设计一套会员功能并开发它","content":"- 判断当前加油包剩余次数\r"},"build-membership-feature_198":{"title":"带你设计一套会员功能并开发它","content":"    - 如果剩余0次，则设置的值为100，过期时间7天。\r"},"build-membership-feature_199":{"title":"带你设计一套会员功能并开发它","content":"    - 如果剩余大于0次，则增加100次剩余次数，增加7天过期时间\r"},"build-membership-feature_200":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_201":{"title":"带你设计一套会员功能并开发它","content":"代码实现如下：\r"},"build-membership-feature_202":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_203":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_204":{"title":"带你设计一套会员功能并开发它","content":"// @/lib/membership/boostPack.ts\r"},"build-membership-feature_205":{"title":"带你设计一套会员功能并开发它","content":"export const boostPack = async ({ sub }: UserSub) =\r"},"build-membership-feature_206":{"title":"带你设计一套会员功能并开发它","content":"  const userBoostPackKey = await getBoostPackKey({ sub })\r"},"build-membership-feature_207":{"title":"带你设计一套会员功能并开发它","content":"  const userBoostPack = await redis.get(userBoostPackKey) || 0\r"},"build-membership-feature_208":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_209":{"title":"带你设计一套会员功能并开发它","content":"\t// 加油包余额不存在，当作新购用户\r"},"build-membership-feature_210":{"title":"带你设计一套会员功能并开发它","content":"  if (userBoostPack === 0) {\r"},"build-membership-feature_211":{"title":"带你设计一套会员功能并开发它","content":"    const res = await redis.set(userBoostPackKey, BOOSTUSES, { ex: BOOSTEXPIRE })\r"},"build-membership-feature_212":{"title":"带你设计一套会员功能并开发它","content":"    if (res === 'OK') {\r"},"build-membership-feature_213":{"title":"带你设计一套会员功能并开发它","content":"      return { sub, boostPackUses: BOOSTUSES, expire: BOOSTEXPIRE, boostPack: 'success' }\r"},"build-membership-feature_214":{"title":"带你设计一套会员功能并开发它","content":"    }\r"},"build-membership-feature_215":{"title":"带你设计一套会员功能并开发它","content":"    return { sub, boostPackUses: 0, expire: 0, boostPack: 'fail' }\r"},"build-membership-feature_216":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_217":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_218":{"title":"带你设计一套会员功能并开发它","content":"  // 已是加油包用户，查询过期时间，计算新的过期时间，更新过期时间\r"},"build-membership-feature_219":{"title":"带你设计一套会员功能并开发它","content":"  const oldBalance: number = await redis.get(userBoostPackKey) || 0\r"},"build-membership-feature_220":{"title":"带你设计一套会员功能并开发它","content":"  const TTL = await redis.ttl(userBoostPackKey)\r"},"build-membership-feature_221":{"title":"带你设计一套会员功能并开发它","content":"  const newTTL = TTL + BOOSTEXPIRE\r"},"build-membership-feature_222":{"title":"带你设计一套会员功能并开发它","content":"  const newBalance = oldBalance + BOOSTUSES\r"},"build-membership-feature_223":{"title":"带你设计一套会员功能并开发它","content":"  const res = await redis.setex(userBoostPackKey, newTTL, newBalance)\r"},"build-membership-feature_224":{"title":"带你设计一套会员功能并开发它","content":"  return res === 'OK' ?\r"},"build-membership-feature_225":{"title":"带你设计一套会员功能并开发它","content":"    { sub, oldBalance, newBalance, expire: newTTL, boostPack: 'success' } :\r"},"build-membership-feature_226":{"title":"带你设计一套会员功能并开发它","content":"    { sub, oldBalance, newBalance: oldBalance, expire: TTL, boostPack: 'fail' }\r"},"build-membership-feature_227":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_228":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_229":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_230":{"title":"带你设计一套会员功能并开发它","content":"这样购买加油包的接口也完成了，可以通过postman进行逻辑测试。完整源码和线上演示地址放在文末。\r"},"build-membership-feature_231":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_232":{"title":"带你设计一套会员功能并开发它","content":"3、检查使用次数和会员状态：\r"},"build-membership-feature_233":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_234":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_235":{"title":"带你设计一套会员功能并开发它","content":"// @/app/api/membership/fake/checkStatus/route.ts\r"},"build-membership-feature_236":{"title":"带你设计一套会员功能并开发它","content":"import { checkStatus } from \"@/lib/membership/checkStatus\";\r"},"build-membership-feature_237":{"title":"带你设计一套会员功能并开发它","content":"import { NextRequest, NextResponse } from \"next/server\";\r"},"build-membership-feature_238":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_239":{"title":"带你设计一套会员功能并开发它","content":"export async function POST(req: NextRequest) {\r"},"build-membership-feature_240":{"title":"带你设计一套会员功能并开发它","content":"  try {\r"},"build-membership-feature_241":{"title":"带你设计一套会员功能并开发它","content":"    const { sub } = await req.json();\r"},"build-membership-feature_242":{"title":"带你设计一套会员功能并开发它","content":"    const res = await checkStatus({ sub })\r"},"build-membership-feature_243":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json(res)\r"},"build-membership-feature_244":{"title":"带你设计一套会员功能并开发它","content":"  } catch (e) {\r"},"build-membership-feature_245":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json({ error: \"failed to upgrade\" }, { status: 500 });\r"},"build-membership-feature_246":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_247":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_248":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_249":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_250":{"title":"带你设计一套会员功能并开发它","content":"功能设计：\r"},"build-membership-feature_251":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_252":{"title":"带你设计一套会员功能并开发它","content":"- 获取、和的值，返回当前可用次数、加油包余额、加油包过期时间及会员过期时间。\r"},"build-membership-feature_253":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_254":{"title":"带你设计一套会员功能并开发它","content":"核心代码实现如下：\r"},"build-membership-feature_255":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_256":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_257":{"title":"带你设计一套会员功能并开发它","content":"// @/lib/membership/checkStatus.ts\r"},"build-membership-feature_258":{"title":"带你设计一套会员功能并开发它","content":"export const checkStatus = async ({ sub }: UserSub) =\r"},"build-membership-feature_259":{"title":"带你设计一套会员功能并开发它","content":"  const userDateRemaining: DateRemaining = await getUserDateRemaining({ sub }) // 获取用户角色、当日剩余次数、加油包剩余次数\r"},"build-membership-feature_260":{"title":"带你设计一套会员功能并开发它","content":"  \r"},"build-membership-feature_261":{"title":"带你设计一套会员功能并开发它","content":"\t// 如果是会员，计算会员到期时间\r"},"build-membership-feature_262":{"title":"带你设计一套会员功能并开发它","content":"  let membershipExpire = 0\r"},"build-membership-feature_263":{"title":"带你设计一套会员功能并开发它","content":"  if (userDateRemaining.role === MEMBERSHIPVALUE) {\r"},"build-membership-feature_264":{"title":"带你设计一套会员功能并开发它","content":"    const userRoleKey = await getMembershipStatusKey({ sub })\r"},"build-membership-feature_265":{"title":"带你设计一套会员功能并开发它","content":"    membershipExpire = await redis.ttl(userRoleKey)\r"},"build-membership-feature_266":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_267":{"title":"带你设计一套会员功能并开发它","content":"  // 如果加油包次数大于0，计算加油包到期时间\r"},"build-membership-feature_268":{"title":"带你设计一套会员功能并开发它","content":"  let boostPackExpire = 0\r"},"build-membership-feature_269":{"title":"带你设计一套会员功能并开发它","content":"  if (userDateRemaining.boostPackRemaining \r"},"build-membership-feature_270":{"title":"带你设计一套会员功能并开发它","content":"    const boostPackKey = await getBoostPackKey({ sub })\r"},"build-membership-feature_271":{"title":"带你设计一套会员功能并开发它","content":"    boostPackExpire = await redis.ttl(boostPackKey)\r"},"build-membership-feature_272":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_273":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_274":{"title":"带你设计一套会员功能并开发它","content":"  return {\r"},"build-membership-feature_275":{"title":"带你设计一套会员功能并开发它","content":"    role: userDateRemaining.role,\r"},"build-membership-feature_276":{"title":"带你设计一套会员功能并开发它","content":"    todayRemaining: userDateRemaining.userTodayRemaining,\r"},"build-membership-feature_277":{"title":"带你设计一套会员功能并开发它","content":"    membershipExpire: membershipExpire,\r"},"build-membership-feature_278":{"title":"带你设计一套会员功能并开发它","content":"    boostPackRemaining: userDateRemaining.boostPackRemaining,\r"},"build-membership-feature_279":{"title":"带你设计一套会员功能并开发它","content":"    boostPackExpire: boostPackExpire,\r"},"build-membership-feature_280":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_281":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_282":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_283":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_284":{"title":"带你设计一套会员功能并开发它","content":"这样购买获取会员状态和使用次数的接口也完成了，可以通过postman进行逻辑测试。完整源码和线上演示地址放在文末。\r"},"build-membership-feature_285":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_286":{"title":"带你设计一套会员功能并开发它","content":"4、使用功能：\r"},"build-membership-feature_287":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_288":{"title":"带你设计一套会员功能并开发它","content":"核心代码设计如下：\r"},"build-membership-feature_289":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_290":{"title":"带你设计一套会员功能并开发它","content":"- 服务端调用工具方法前，先查询剩余次数，如果默认次数+加油包次数>0，则可以调用，否则返回错误提示\r"},"build-membership-feature_291":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_292":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_293":{"title":"带你设计一套会员功能并开发它","content":"// @/app/api/fake/useFunction/route.ts\r"},"build-membership-feature_294":{"title":"带你设计一套会员功能并开发它","content":"import { NextRequest, NextResponse } from \"next/server\";\r"},"build-membership-feature_295":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_296":{"title":"带你设计一套会员功能并开发它","content":"export async function POST(req: NextRequest) {\r"},"build-membership-feature_297":{"title":"带你设计一套会员功能并开发它","content":"  try {\r"},"build-membership-feature_298":{"title":"带你设计一套会员功能并开发它","content":"    // 忽略身份校验的代码\r"},"build-membership-feature_299":{"title":"带你设计一套会员功能并开发它","content":"\t\t// ……\r"},"build-membership-feature_300":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_301":{"title":"带你设计一套会员功能并开发它","content":"\t\t// 服务端调用工具方法前，先查询剩余次数\r"},"build-membership-feature_302":{"title":"带你设计一套会员功能并开发它","content":"    const remainingInfo: DateRemaining = await getUserDateRemaining({ sub })\r"},"build-membership-feature_303":{"title":"带你设计一套会员功能并开发它","content":"    if (remainingInfo.userDateRemaining <= 0) {\r"},"build-membership-feature_304":{"title":"带你设计一套会员功能并开发它","content":"      const errorText = '0 uses remaining today.'\r"},"build-membership-feature_305":{"title":"带你设计一套会员功能并开发它","content":"      return NextResponse.json({ error: errorText }, { status: 401 });\r"},"build-membership-feature_306":{"title":"带你设计一套会员功能并开发它","content":"    }\r"},"build-membership-feature_307":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_308":{"title":"带你设计一套会员功能并开发它","content":"\t\t// 忽略使用功能的逻辑\r"},"build-membership-feature_309":{"title":"带你设计一套会员功能并开发它","content":"    // ……\r"},"build-membership-feature_310":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_311":{"title":"带你设计一套会员功能并开发它","content":"\t\t// 服务端调用工具方法后，修改 redis 统计的使用次数\r"},"build-membership-feature_312":{"title":"带你设计一套会员功能并开发它","content":"    incrAfterUse({ sub, remainingInfo }) // 异步执行，减少服务端阻塞\r"},"build-membership-feature_313":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_314":{"title":"带你设计一套会员功能并开发它","content":"\t\t// 返回\r"},"build-membership-feature_315":{"title":"带你设计一套会员功能并开发它","content":"    const res = await checkStatus({ sub }) // 测试使用，实际返回应使用功能的真实返回\r"},"build-membership-feature_316":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json(res)\r"},"build-membership-feature_317":{"title":"带你设计一套会员功能并开发它","content":"  } catch (e) {\r"},"build-membership-feature_318":{"title":"带你设计一套会员功能并开发它","content":"    return NextResponse.json({ error: \"failed to upgrade\" }, { status: 500 });\r"},"build-membership-feature_319":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_320":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_321":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_322":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_323":{"title":"带你设计一套会员功能并开发它","content":"- 服务端调用工具方法后，修改 redis 统计的使用次数，这里要先判断日限额剩余次数，然后再判断加油包剩余次数\r"},"build-membership-feature_324":{"title":"带你设计一套会员功能并开发它","content":"    - 如果【默认使用次数 - 日使用次数】\r"},"build-membership-feature_325":{"title":"带你设计一套会员功能并开发它","content":"    - 如果【默认使用次数 - 日使用次数】\\<= 0，则判断加油包次数的值\r"},"build-membership-feature_326":{"title":"带你设计一套会员功能并开发它","content":"        - 如果大于0，则自减1\r"},"build-membership-feature_327":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_328":{"title":"带你设计一套会员功能并开发它","content":"tsx\r"},"build-membership-feature_329":{"title":"带你设计一套会员功能并开发它","content":"export const incrAfterUse = async ({ sub, remainingInfo }: IncrAfterChat) =\r"},"build-membership-feature_330":{"title":"带你设计一套会员功能并开发它","content":"  // 如果【默认使用次数 - 日使用次数】\r"},"build-membership-feature_331":{"title":"带你设计一套会员功能并开发它","content":"  if (remainingInfo.userTodayRemaining \r"},"build-membership-feature_332":{"title":"带你设计一套会员功能并开发它","content":"    await incrUserDate({ sub })\r"},"build-membership-feature_333":{"title":"带你设计一套会员功能并开发它","content":"    return\r"},"build-membership-feature_334":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_335":{"title":"带你设计一套会员功能并开发它","content":"  // 如果没有默认次数，有加油包，判断加油包次数\r"},"build-membership-feature_336":{"title":"带你设计一套会员功能并开发它","content":"  if (remainingInfo.boostPackRemaining \r"},"build-membership-feature_337":{"title":"带你设计一套会员功能并开发它","content":"    const boostPackKey = await getBoostPackKey({ sub })\r"},"build-membership-feature_338":{"title":"带你设计一套会员功能并开发它","content":"    await redis.decr(boostPackKey)\r"},"build-membership-feature_339":{"title":"带你设计一套会员功能并开发它","content":"    return\r"},"build-membership-feature_340":{"title":"带你设计一套会员功能并开发它","content":"  }\r"},"build-membership-feature_341":{"title":"带你设计一套会员功能并开发它","content":"  // 如果没有默认次数，也没有加油包，则不处理，只需要记录日志\r"},"build-membership-feature_342":{"title":"带你设计一套会员功能并开发它","content":"  console.log('0 uses remaining today.');\r"},"build-membership-feature_343":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_344":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_345":{"title":"带你设计一套会员功能并开发它","content":"export const incrUserDate = async ({ sub }: UserSub) =\r"},"build-membership-feature_346":{"title":"带你设计一套会员功能并开发它","content":"  const keyDate = await getUserDateUsageKey({ sub });\r"},"build-membership-feature_347":{"title":"带你设计一套会员功能并开发它","content":"  await redis.incr(keyDate);\r"},"build-membership-feature_348":{"title":"带你设计一套会员功能并开发它","content":"}\r"},"build-membership-feature_349":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_350":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_351":{"title":"带你设计一套会员功能并开发它","content":"完整源码和线上演示地址放在文末。\r"},"build-membership-feature_352":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_353":{"title":"带你设计一套会员功能并开发它","content":"前端设计\r"},"build-membership-feature_354":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_355":{"title":"带你设计一套会员功能并开发它","content":"- 用户界面：\r"},"build-membership-feature_356":{"title":"带你设计一套会员功能并开发它","content":"    - 显示当前用户类型、剩余使用次数、加油包余额（包括到期日期）和会员到期日期（可以通过检查Redis键的TTL得到）。\r"},"build-membership-feature_357":{"title":"带你设计一套会员功能并开发它","content":"    - 提供购买额外次数的选项。\r"},"build-membership-feature_358":{"title":"带你设计一套会员功能并开发它","content":"    - 提供续费选项。\r"},"build-membership-feature_359":{"title":"带你设计一套会员功能并开发它","content":"- 提示和警告：\r"},"build-membership-feature_360":{"title":"带你设计一套会员功能并开发它","content":"    - 当用户达到使用限制时，提示购买加油包或者升级会员\r"},"build-membership-feature_361":{"title":"带你设计一套会员功能并开发它","content":"        - 普通用户：Become a member to enjoy 500 uses every day.\r"},"build-membership-feature_362":{"title":"带你设计一套会员功能并开发它","content":"        - 会员用户：Purchase a Boost Pack to get more uses right now.\r"},"build-membership-feature_363":{"title":"带你设计一套会员功能并开发它","content":"    - 当加油包即将到期或会员即将到期时，显示相应的提醒。\r"},"build-membership-feature_364":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_365":{"title":"带你设计一套会员功能并开发它","content":"演示截图如下：\r"},"build-membership-feature_366":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_367":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_368":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_369":{"title":"带你设计一套会员功能并开发它","content":"风险应对策略\r"},"build-membership-feature_370":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_371":{"title":"带你设计一套会员功能并开发它","content":"涉及到金钱的功能一定要做好风险应对策略，否则出了生产事故就会对品牌产生很大影响。本文核心逻辑都是在操作 redis，所以主要考虑 redis 的连接和操作失败的问题。因为这是一块很大的专题，所以不在本文进行详细叙述，仅抛砖引玉提供一些应对策略：\r"},"build-membership-feature_372":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_373":{"title":"带你设计一套会员功能并开发它","content":"- 重试策略：由于网络波动或短暂的服务中断，Redis 操作可能会偶尔失败。这种情况下，实施一个自动重试策略是有益的。\r"},"build-membership-feature_374":{"title":"带你设计一套会员功能并开发它","content":"- 错误日志：确保记录所有 Redis 相关的错误，这样你可以追踪、分析并修复它们。\r"},"build-membership-feature_375":{"title":"带你设计一套会员功能并开发它","content":"- 用户反馈：如果 Redis 操作失败，并且你已尝试了所有自动重试，那么应该给用户一个明确的错误消息。这样，用户会知道发生了什么，并且可以稍后重试。\r"},"build-membership-feature_376":{"title":"带你设计一套会员功能并开发它","content":"- 后备策略：考虑创建一个后端队列或延迟任务系统。当 Redis 操作失败并且重试不起作用时，你可以将操作的详细信息放入队列中，并在后台持续尝试，直到成功。\r"},"build-membership-feature_377":{"title":"带你设计一套会员功能并开发它","content":"- 监控：使用 Upstash 提供的监控工具或其他第三方服务，如 Datadog 或 Sentry 来实时监控 Redis 的性能和错误率。这样，如果出现问题，你可以迅速得知并采取行动。\r"},"build-membership-feature_378":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_379":{"title":"带你设计一套会员功能并开发它","content":"结语\r"},"build-membership-feature_380":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_381":{"title":"带你设计一套会员功能并开发它","content":"把本文的代码块去掉，就是一份会员功能设计和代码设计的文档，希望本文对会员功能的设计思考和代码的实现都能对你有所启发。\r"},"build-membership-feature_382":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_383":{"title":"带你设计一套会员功能并开发它","content":"「会员功能系列文章」第二篇：《👉》\r"},"build-membership-feature_384":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_385":{"title":"带你设计一套会员功能并开发它","content":"源码与演示\r"},"build-membership-feature_386":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_387":{"title":"带你设计一套会员功能并开发它","content":"源码：👉\r"},"build-membership-feature_388":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_389":{"title":"带你设计一套会员功能并开发它","content":"在线演示：👉\r"},"build-membership-feature_390":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_391":{"title":"带你设计一套会员功能并开发它","content":"专栏资源\r"},"build-membership-feature_392":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_393":{"title":"带你设计一套会员功能并开发它","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"build-membership-feature_394":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_395":{"title":"带你设计一套会员功能并开发它","content":"专栏地址：👉\r"},"build-membership-feature_396":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_397":{"title":"带你设计一套会员功能并开发它","content":"专栏演示站：👉\r"},"build-membership-feature_398":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_399":{"title":"带你设计一套会员功能并开发它","content":"专栏源码仓库：👉\r"},"build-membership-feature_400":{"title":"带你设计一套会员功能并开发它","content":"\r"},"build-membership-feature_401":{"title":"带你设计一套会员功能并开发它","content":"交个朋友：👉\r"},"react-hook-use":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"精读React hooks（十六）：一个为代码优雅而生的hook——use","display":"\r"},"react-hook-use_0":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_1":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":" 是 React 官方最新推出的 hook（截止2023.9.21），本文也是《》系列文章的最后一篇。\r"},"react-hook-use_2":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_3":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"截止发文日期， 还是一个预发布的 hook，将来有可能会进行破坏性更新，所以不推荐在生产环境使用。但这不妨碍我们学习，万一过段时间  转正了呢？\r"},"react-hook-use_4":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_5":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"的使用\r"},"react-hook-use_6":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_7":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":" 可以让你在函数组件中读取类似于 Promise 或 context 的资源的值。它的基础用法如下：\r"},"react-hook-use_8":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_9":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_10":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use } from 'react';\r"},"react-hook-use_11":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_12":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function MessageComponent({ messagePromise }) {\r"},"react-hook-use_13":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const message = use(messagePromise);\r"},"react-hook-use_14":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const theme = use(ThemeContext);\r"},"react-hook-use_15":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_16":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_17":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_18":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_19":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":" 函数的参数是你想要读取的资源，资源可以是 Promise 或 Context（在这个例子中是  和 ），并返回从资源中读取的值。\r"},"react-hook-use_20":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_21":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"解决的问题场景\r"},"react-hook-use_22":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_23":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"在过去，React 开发者在处理类似于 Promise 或 Context 的资源时，通常需要将这些资源的值存储在 state 中，然后在组件中通过 props 或 state 来使用这些值。这种方法虽然可行，但是会增加代码的复杂性，并可能导致状态管理的困难。\r"},"react-hook-use_24":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_25":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":" 这个 hook 解决了这个问题，因为它让你能够直接在组件中调用并获取这些资源的值，这样可以简化代码，使其更易于理解和维护。\r"},"react-hook-use_26":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_27":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"想象一个场景，加入你正在开发一个博客应用，这个应用需要从  获取博客文章的内容，不用  的时候，你会这么做：\r"},"react-hook-use_28":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_29":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_30":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { useState, useEffect } from 'react';\r"},"react-hook-use_31":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_32":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function BlogPostComponent({ postId }) {\r"},"react-hook-use_33":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const [post, setPost] = useState(null);\r"},"react-hook-use_34":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_35":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  useEffect(() =\r"},"react-hook-use_36":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    fetchPost(postId).then(data =\r"},"react-hook-use_37":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  }, [postId]);\r"},"react-hook-use_38":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_39":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_40":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_41":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_42":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_43":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"用上 ，就可以这么做：\r"},"react-hook-use_44":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_45":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_46":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use } from 'react';\r"},"react-hook-use_47":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_48":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function BlogPostComponent({ postId }) {\r"},"react-hook-use_49":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const postPromise = fetchPost(postId);\r"},"react-hook-use_50":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const post = use(postPromise);\r"},"react-hook-use_51":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_52":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_53":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_54":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_55":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"在功能上是一样的，但是用了  明显代码更优雅了。\r"},"react-hook-use_56":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_57":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"用于条件语句和循环中\r"},"react-hook-use_58":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_59":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"其他 React hook 不同， 可以在组件里的循环和条件语句中使用。例如：\r"},"react-hook-use_60":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_61":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"- 根据博客内容类别，读取不同 Promise\r"},"react-hook-use_62":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_63":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_64":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use } from 'react';\r"},"react-hook-use_65":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_66":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function ResourceComponent({ resourceType }) {\r"},"react-hook-use_67":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  let resource;\r"},"react-hook-use_68":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_69":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  if (resourceType === 'post') {\r"},"react-hook-use_70":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    const postPromise = fetchPost();\r"},"react-hook-use_71":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    resource = use(postPromise);\r"},"react-hook-use_72":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  } else if (resourceType === 'comment') {\r"},"react-hook-use_73":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    const commentPromise = fetchComment();\r"},"react-hook-use_74":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    resource = use(commentPromise);\r"},"react-hook-use_75":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  }\r"},"react-hook-use_76":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_77":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_78":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_79":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_80":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_81":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"- 在组件里读取一个包含多个资源的数组\r"},"react-hook-use_82":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_83":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_84":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use } from 'react';\r"},"react-hook-use_85":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_86":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function ResourceListComponent({ resourcePromises }) {\r"},"react-hook-use_87":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const resources = resourcePromises.map(resourcePromise =\r"},"react-hook-use_88":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_89":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_90":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_91":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_92":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_93":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"将数据从服务器流式传递给客户端\r"},"react-hook-use_94":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_95":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"了解 NextJS v13 的同学都知道，在 app router 模式下，你可以在服务端组件里面嵌套客户端组件，而这种方式就能实现把服务端组件获取的数据传递给客户端组件。这是本节要讲述的知识的基础，如果你还不懂这些概念，可以到我的另一篇文章《》学习一下。\r"},"react-hook-use_96":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_97":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"以下是一个示例，展示了如何在服务器组件中创建一个Promise，并将其作为prop传递给客户端组件：\r"},"react-hook-use_98":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_99":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_100":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"// 服务器组件\r"},"react-hook-use_101":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function ServerComponent({ postId }) {\r"},"react-hook-use_102":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const postPromise = fetchPost(postId);\r"},"react-hook-use_103":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  return <ClientComponent postPromise={postPromise} />;\r"},"react-hook-use_104":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_105":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_106":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"// 客户端组件\r"},"react-hook-use_107":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use } from 'react';\r"},"react-hook-use_108":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_109":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function ClientComponent({ postPromise }) {\r"},"react-hook-use_110":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const post = use(postPromise);\r"},"react-hook-use_111":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_112":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_113":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_114":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_115":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"在  中，我们使用  这个Hook来读取  传过来的 Promise。\r"},"react-hook-use_116":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_117":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"如果不用 ，我们也可以在  用  来完成请求，然后把请求结果通过prop传给 ，不过  会在执行完成前阻塞服务端组件的渲染，而使用  不会影响服务端组件的渲染。\r"},"react-hook-use_118":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_119":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"处理 rejected Promise\r"},"react-hook-use_120":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_121":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"有 Promise 的地方就要提供处理 rejected Promise 的方法。当你使用use的时候，有以下两种方法可以处理 rejected Promise：\r"},"react-hook-use_122":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_123":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"1、ErrorBoundary\r"},"react-hook-use_124":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_125":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"我们可以用  包裹可能出错的组件，如果传递给  的 Promise rejected 了，将显示  的 fallback：\r"},"react-hook-use_126":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_127":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_128":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\"use client\";\r"},"react-hook-use_129":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use, Suspense } from \"react\";\r"},"react-hook-use_130":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { ErrorBoundary } from \"react-error-boundary\";\r"},"react-hook-use_131":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_132":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"export function BlogPostComponent() {\r"},"react-hook-use_133":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const postPromise = fetchPost(postId);\r"},"react-hook-use_134":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_135":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  return (\r"},"react-hook-use_136":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    <ErrorBoundary fallback={<p>⚠️Something went wrong</p>}"},"react-hook-use_137":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"      <Suspense fallback={<p>⌛Loading...</p>}"},"react-hook-use_138":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"        <BlogPostTitle messagePromise={messagePromise} /"},"react-hook-use_139":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"      </Suspense"},"react-hook-use_140":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    </ErrorBoundary"},"react-hook-use_141":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  );\r"},"react-hook-use_142":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_143":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_144":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"function BlogPostTitle({ postPromise }) {\r"},"react-hook-use_145":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  const post = use(postPromise);\r"},"react-hook-use_146":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  // ...\r"},"react-hook-use_147":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_148":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\treturn <p>Here is the title: {post.title}</p>;\r"},"react-hook-use_149":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_150":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_151":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_152":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"2、Promise.catch\r"},"react-hook-use_153":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_154":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"如果你不想用 ，但又想在 rejected 时有值填充，可以使用 Promise 的  方法。\r"},"react-hook-use_155":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_156":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"jsx\r"},"react-hook-use_157":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\"use client\";\r"},"react-hook-use_158":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { use, Suspense } from \"react\";\r"},"react-hook-use_159":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"import { ErrorBoundary } from \"react-error-boundary\";\r"},"react-hook-use_160":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_161":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"export function BlogPostComponent() {\r"},"react-hook-use_162":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"const postPromise = fetchPost(postId).catch((error) =\r"},"react-hook-use_163":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    console.error('Failed to fetch post:', error);\r"},"react-hook-use_164":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    return 'https://weijunext.com'; // 返回一个默认值\r"},"react-hook-use_165":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  });\r"},"react-hook-use_166":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_167":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  return (\r"},"react-hook-use_168":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    <Suspense fallback={<p>⌛Loading...</p>}"},"react-hook-use_169":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"      <BlogPostTitle messagePromise={messagePromise} /"},"react-hook-use_170":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"    </Suspense"},"react-hook-use_171":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"  );\r"},"react-hook-use_172":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"}\r"},"react-hook-use_173":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_174":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_175":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"结语\r"},"react-hook-use_176":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_177":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":" 还只是一个实验性，等它正式转正之后，想必也会成为社区里宣传 React 代码优化之道的一项指南。\r"},"react-hook-use_178":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_179":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏结语\r"},"react-hook-use_180":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_181":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"写完这篇文章，《专栏就算告一段落了。本系列文章讲解了 16 个官方文档里列出来的 hook，其中前面一半在我们日常开发中经常使用，而后面一半其实鲜有使用，这是因为后来发布的 hook 主要面向库或者上层框架的开发者。React 源码里导出的其实还不止这 16 个 hook，这是因为其它 hook 对绝大部分开发者来说是绝无机会使用到的。\r"},"react-hook-use_182":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_183":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"本专栏的编写算是我的一条支线任务，完成本专栏的编写后，我会继续回归主线任务——实战项目的经验分享。我的工作和 side project 会用到的核心技术栈有：Next.js、React、Vue、Node，如果你有兴趣一起探讨相关知识，不妨关注一下👉。\r"},"react-hook-use_184":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_185":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_186":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏资源\r"},"react-hook-use_187":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_188":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏博客地址：\r"},"react-hook-use_189":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_190":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏演示站：\r"},"react-hook-use_191":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_192":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏源码仓库：👉\r"},"react-hook-use_193":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_194":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"交个朋友：👉\r"},"react-hook-use_195":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_196":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"专栏文章列表：\r"},"react-hook-use_197":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_198":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_199":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_200":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_201":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_202":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_203":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_204":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_205":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_206":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_207":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_208":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_209":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_210":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_211":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_212":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_213":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_214":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_215":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_216":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_217":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_218":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_219":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_220":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_221":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_222":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_223":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_224":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_225":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_226":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_227":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":"\r"},"react-hook-use_228":{"title":"精读React hooks（十六）：一个为代码优雅而生的hook——use","content":""},"react-hook-useDebugValue":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","display":"\r"},"react-hook-useDebugValue_0":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_1":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":" 是一个专为开发者调试自定义 hook 而设计的 React hook。对于大多数应用开发者来说，可能不会直接使用它，但对于那些需要创建和维护自定义 hooks 的开发者来说， 可以提供一个更加友好的显示，帮助开发者更容易地理解该 Hook 的当前状态。\r"},"react-hook-useDebugValue_2":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_3":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"的使用\r"},"react-hook-useDebugValue_4":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_5":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"这是  的用法定义：\r"},"react-hook-useDebugValue_6":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_7":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_8":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"useDebugValue(value, format?)\r"},"react-hook-useDebugValue_9":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_10":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_11":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"-  是你想在 React 开发工具中显示的值，可以是任何类型\r"},"react-hook-useDebugValue_12":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"-  是一个可选参数，它接受一个格式化函数。这个参数的用途是：某些情况下，会存在开销较大的格式化逻辑，为了避免不必要的计算，把格式化逻辑放在 ，就可以让这个格式化逻辑只在 DevTools 需要显示这个值的时候才执行。\r"},"react-hook-useDebugValue_13":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_14":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"用法示例\r"},"react-hook-useDebugValue_15":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_16":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"在《》中，我们有一个，现在我为了调试更科学，想把网络状态也显示在 React 开发工具上面，我在原来的 hook 里添加  就可以：\r"},"react-hook-useDebugValue_17":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_18":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_19":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"export function useOnlineStatus() {\r"},"react-hook-useDebugValue_20":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"  const isOnline = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\r"},"react-hook-useDebugValue_21":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"  // useDebugValue\r"},"react-hook-useDebugValue_22":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"  useDebugValue(isOnline ? \"✅ Online(useDebugValue)\" : \"❌ Disconnected(useDebugValue)\")\r"},"react-hook-useDebugValue_23":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"  return isOnline;\r"},"react-hook-useDebugValue_24":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"}\r"},"react-hook-useDebugValue_25":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_26":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_27":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"现在我打开 React 开发工具，可以看到  的返回值显示出来了：\r"},"react-hook-useDebugValue_28":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_29":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_30":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_31":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":" 为开发者做的事就是这么简单。你也可以到验证。\r"},"react-hook-useDebugValue_32":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_33":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"的价值\r"},"react-hook-useDebugValue_34":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_35":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"初看  你会觉得它并没有带来什么价值，其实不然，例如在大型项目中可能会有很多自定义 Hooks，为这些 Hooks 提供清晰的 debug 值可以帮助团队更容易地识别和解决问题；而对于开源的自定义 Hooks，提供这样的 debug 值更是对使用者的友好提示。\r"},"react-hook-useDebugValue_36":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_37":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"总结一下  的主要价值点：\r"},"react-hook-useDebugValue_38":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_39":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"1. 提供清晰的调试信息：当你在 React 开发工具中查看一个组件，如果该组件使用了多个自定义 Hooks， 可以帮助你更清晰地理解每个 Hook 的当前状态。这对于追踪和理解组件的行为非常有帮助。\r"},"react-hook-useDebugValue_40":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"2. 增强自定义 Hooks 的可用性：如果你创建了一个自定义 Hook 并计划与团队或社区共享，使用  可以使其他开发者更容易地理解和调试使用了你的 Hook 的组件。\r"},"react-hook-useDebugValue_41":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"3. 按需计算： 可以接受一个格式化函数，这意味着你可以按需计算调试值，避免不必要的计算开销。\r"},"react-hook-useDebugValue_42":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_43":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_44":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"专栏资源\r"},"react-hook-useDebugValue_45":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_46":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"专栏博客地址：\r"},"react-hook-useDebugValue_47":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_48":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"专栏演示站：\r"},"react-hook-useDebugValue_49":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_50":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"专栏源码仓库：👉\r"},"react-hook-useDebugValue_51":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_52":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"交个朋友：👉\r"},"react-hook-useDebugValue_53":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_54":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"专栏文章列表：\r"},"react-hook-useDebugValue_55":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_56":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_57":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_58":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_59":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_60":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_61":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_62":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_63":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_64":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_65":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_66":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_67":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_68":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_69":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_70":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_71":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_72":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_73":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_74":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_75":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_76":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_77":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_78":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_79":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_80":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_81":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_82":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_83":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_84":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_85":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":"\r"},"react-hook-useDebugValue_86":{"title":"精读React hooks（十五）：把useDebugValue加入你的React调试工具库","content":""},"react-hook-useId":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","display":"\r"},"react-hook-useId_0":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_1":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"在开始介绍之前，有必要先介绍一下 React 的服务端渲染和客户端渲染之间的关系。当你看到一个服务端渲染的应用，它的渲染过程会是这样：服务端会先生成 HTML，然后将这个 HTML 发送到客户端，在客户端，React 会进行一个叫做 hydration 的过程，即将服务器端生成的 HTML 和客户端的 DOM 进行匹配，并生成最终的 HTML。\r"},"react-hook-useId_2":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_3":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"而在这个过程中，我们有时候需要给 DOM 生成唯一的 ID。例如：我们需要通过 JavaScript 或 CSS 选择器来访问 DOM 的时候；或者某些HTML属性（如）需要使用唯一的 ID 来关联元素。\r"},"react-hook-useId_4":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_5":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"如果在 hydration 过程中，服务器端和客户端生成的 ID 不一致，那么就会导致 hydration 失败。为了解决这个问题，React v18 引入了一个新的 Hook——。通过使用一些内部机制，React 确保了无论是在服务器端还是客户端，对于同一个组件实例，都会返回相同的 ID。在本文中，我们将探讨的使用方式和使用场景。\r"},"react-hook-useId_6":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_7":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"的使用\r"},"react-hook-useId_8":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_9":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"使用非常简单，这是它的用法定义：\r"},"react-hook-useId_10":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_11":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_12":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"const id = useId()\r"},"react-hook-useId_13":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_14":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_15":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"它不需要任何参数，返回的是一个唯一的字符串 ID。\r"},"react-hook-useId_16":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_17":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"基础用法\r"},"react-hook-useId_18":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_19":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"会返回一个唯一的 ID，你可以将这个 ID 用于任何需要唯一 ID 的地方。这是一个使用的代码示例：\r"},"react-hook-useId_20":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_21":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_22":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"import { useId } from 'react';\r"},"react-hook-useId_23":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_24":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"function MyComponent() {\r"},"react-hook-useId_25":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  const uniqueId = useId();\r"},"react-hook-useId_26":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_27":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  return (\r"},"react-hook-useId_28":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <div id={uniqueId}"},"react-hook-useId_29":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      Hello, weijunext.com\r"},"react-hook-useId_30":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    </div"},"react-hook-useId_31":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  );\r"},"react-hook-useId_32":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"}\r"},"react-hook-useId_33":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_34":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_35":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"使用场景一：为可访问属性、无障碍属性生成唯一ID\r"},"react-hook-useId_36":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_37":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"如下面的例子，我们想关联和，就需要在元素上设置一个唯一的属性；再在对应的  元素上设置属性，其值与上述相同。为了保证唯一，就可以用来实现。\r"},"react-hook-useId_38":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_39":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_40":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"import { useId } from \"react\";\r"},"react-hook-useId_41":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_42":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"export default function App() {\r"},"react-hook-useId_43":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  const FullName = useId();\r"},"react-hook-useId_44":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  const email = useId();\r"},"react-hook-useId_45":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_46":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  return (\r"},"react-hook-useId_47":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <div className=\"card\""},"react-hook-useId_48":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <div"},"react-hook-useId_49":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <label htmlFor={FullName}>Full Name</label"},"react-hook-useId_50":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input type=\"text\" id={FullName} name=\"Full Name\" />{\" \"}\r"},"react-hook-useId_51":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </div"},"react-hook-useId_52":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\t\t\t <div"},"react-hook-useId_53":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <label htmlFor={email}>Enter Email</label"},"react-hook-useId_54":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input type=\"email\" id={email} name=\"email\" /"},"react-hook-useId_55":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </div"},"react-hook-useId_56":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\t\t </div"},"react-hook-useId_57":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  );\r"},"react-hook-useId_58":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"}\r"},"react-hook-useId_59":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_60":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_61":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"使用场景二：多次调用保证ID不重复\r"},"react-hook-useId_62":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_63":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_64":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"import { useId } from 'react';\r"},"react-hook-useId_65":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_66":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"function PasswordField() {\r"},"react-hook-useId_67":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  const passwordHintId = useId();\r"},"react-hook-useId_68":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  return (\r"},"react-hook-useId_69":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <"},"react-hook-useId_70":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <label"},"react-hook-useId_71":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        密码:\r"},"react-hook-useId_72":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input\r"},"react-hook-useId_73":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"          type=\"password\"\r"},"react-hook-useId_74":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"          aria-describedby={passwordHintId}\r"},"react-hook-useId_75":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        /"},"react-hook-useId_76":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </label"},"react-hook-useId_77":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <p id={passwordHintId}"},"react-hook-useId_78":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        密码应该包含至少 18 个字符\r"},"react-hook-useId_79":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </p"},"react-hook-useId_80":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    </"},"react-hook-useId_81":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  );\r"},"react-hook-useId_82":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"}\r"},"react-hook-useId_83":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_84":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"export default function App() {\r"},"react-hook-useId_85":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  return (\r"},"react-hook-useId_86":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <"},"react-hook-useId_87":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <PasswordField /"},"react-hook-useId_88":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <PasswordField /"},"react-hook-useId_89":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    </"},"react-hook-useId_90":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  );\r"},"react-hook-useId_91":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"}\r"},"react-hook-useId_92":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_93":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_94":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"当我们给组件使用后，即使这个组件被调用多次，也不会出现重复的情况。\r"},"react-hook-useId_95":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_96":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"使用场景三：为相关元素生成统一前缀或后缀\r"},"react-hook-useId_97":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_98":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"有时候我们会想给相关元素（如表单项分类、列表元素）设置一个统一的前缀或后缀，那么这个前缀或后缀就可以用来生成。用法如下：\r"},"react-hook-useId_99":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_100":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_101":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"import { useId } from \"react\";\r"},"react-hook-useId_102":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_103":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"export default function Example2() {\r"},"react-hook-useId_104":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  let prefix1 = useId();\r"},"react-hook-useId_105":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  let prefix2 = useId();\r"},"react-hook-useId_106":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_107":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  return (\r"},"react-hook-useId_108":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <div className=\"card\""},"react-hook-useId_109":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <div"},"react-hook-useId_110":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <label htmlFor={prefix1 + \"-fullName\"}>Full Name</label"},"react-hook-useId_111":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input type=\"text\" id={prefix1 + \"-fullName\"} name=\"Full Name\" /"},"react-hook-useId_112":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </div"},"react-hook-useId_113":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <div"},"react-hook-useId_114":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <label htmlFor={prefix1 + \"-lastName\"}>Last Name</label"},"react-hook-useId_115":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input type=\"text\" id={prefix1 + \"-lastName\"} name=\"Last Name\" /"},"react-hook-useId_116":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </div"},"react-hook-useId_117":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_118":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      <div"},"react-hook-useId_119":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <label htmlFor={prefix2 + \"-email\"}>Enter Email</label"},"react-hook-useId_120":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"        <input type=\"email\" id={prefix2 + \"-email\"} name=\"email\" /"},"react-hook-useId_121":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"      </div"},"react-hook-useId_122":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\t\t </div"},"react-hook-useId_123":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  );\r"},"react-hook-useId_124":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"}\r"},"react-hook-useId_125":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_126":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_127":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"在简单的场景下，这样做既可以减少的使用，又可以通过设置局部的唯一字符，实现唯一的需求。\r"},"react-hook-useId_128":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_129":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"使用场景四：为应用生成全局统一的前缀或后缀\r"},"react-hook-useId_130":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_131":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"想象一个场景，我们想在一个单页面应用里渲染多个 React 应用，如下面这样：\r"},"react-hook-useId_132":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_133":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_134":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"<!DOCTYPE html"},"react-hook-useId_135":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"<html"},"react-hook-useId_136":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  <head><title>My app</title></head"},"react-hook-useId_137":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  <body"},"react-hook-useId_138":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <div id=\"root1\"></div"},"react-hook-useId_139":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"    <div id=\"root2\"></div"},"react-hook-useId_140":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  </body"},"react-hook-useId_141":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"</html"},"react-hook-useId_142":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_143":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_144":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"现在我们想给两个 React 应用都生成独立的唯一前缀，可以在调用中将作为选项传递：\r"},"react-hook-useId_145":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_146":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"jsx\r"},"react-hook-useId_147":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"const root1 = createRoot(document.getElementById('root1'), {\r"},"react-hook-useId_148":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  identifierPrefix: 'my-first-app-'\r"},"react-hook-useId_149":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"});\r"},"react-hook-useId_150":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"root1.render(<App />);\r"},"react-hook-useId_151":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_152":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"const root2 = createRoot(document.getElementById('root2'), {\r"},"react-hook-useId_153":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"  identifierPrefix: 'my-second-app-'\r"},"react-hook-useId_154":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"});\r"},"react-hook-useId_155":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"root2.render(<App />);\r"},"react-hook-useId_156":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_157":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_158":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"总结\r"},"react-hook-useId_159":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_160":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"以上就是的使用方式和使用场景的总结，总的来说，就是为所有可能需要唯一 ID 的场景而设计的，而这种特性在服务端渲染的应用里能把价值体现到最大。\r"},"react-hook-useId_161":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_162":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_163":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"专栏资源\r"},"react-hook-useId_164":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_165":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"专栏博客地址：\r"},"react-hook-useId_166":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_167":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"专栏演示站：\r"},"react-hook-useId_168":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_169":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"专栏源码仓库：👉\r"},"react-hook-useId_170":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_171":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"交个朋友：👉\r"},"react-hook-useId_172":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_173":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"专栏文章列表：\r"},"react-hook-useId_174":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_175":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_176":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_177":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_178":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_179":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_180":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_181":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_182":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_183":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_184":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_185":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_186":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_187":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_188":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_189":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_190":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_191":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_192":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_193":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_194":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_195":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_196":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_197":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_198":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_199":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_200":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_201":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_202":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_203":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_204":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":"\r"},"react-hook-useId_205":{"title":"精读React hooks（十四）：总有一天你会需要useId为你生成唯一id","content":""},"react-hook-useSyncExternalStore":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","display":"\r"},"react-hook-useSyncExternalStore_0":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_1":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"随着 React v18 引入并发模式，React 也支持了在处理多个任务时进行优先级调整，这意味着 React 可以“暂停”一个正在进行的渲染任务，切换到另一个更高优先级的任务，然后再回到原来的任务。这使得用户界面响应更快，但也带来了新的挑战，尤其是在状态管理方面——状态管理库需要确保它们提供的状态始终是最新的和同步的。就是为解决并发模式下的状态同步问题而推出的——它提供了一种方法，确保即使在并发更新的情况下，组件也可以同步地从外部存储中获取数据。\r"},"react-hook-useSyncExternalStore_2":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_3":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"简单来说，解决的是并发模式下数据流管理的问题。\r"},"react-hook-useSyncExternalStore_4":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_5":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"的使用\r"},"react-hook-useSyncExternalStore_6":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_7":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"这是的用法定义：\r"},"react-hook-useSyncExternalStore_8":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_9":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_10":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"const snapshot = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot?)\r"},"react-hook-useSyncExternalStore_11":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_12":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_13":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"它的三个参数用法比较复杂，这里详细介绍一下：\r"},"react-hook-useSyncExternalStore_14":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_15":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"1. ：\r"},"react-hook-useSyncExternalStore_16":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 类型：\r"},"react-hook-useSyncExternalStore_17":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 这是一个函数，其作用是订阅外部存储的变化。当外部存储发生变化时，它应该调用传入的 。\r"},"react-hook-useSyncExternalStore_18":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 这个函数应该返回一个取消订阅的函数。这样，当组件被卸载或订阅被重新创建时，我们可以确保没有内存泄漏或无效的回调调用。\r"},"react-hook-useSyncExternalStore_19":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"2. ：\r"},"react-hook-useSyncExternalStore_20":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 类型：\r"},"react-hook-useSyncExternalStore_21":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 这是一个函数，其作用是从外部存储中获取当前的数据快照。\r"},"react-hook-useSyncExternalStore_22":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 每次组件渲染时，都会调用此函数来读取当前的数据状态。\r"},"react-hook-useSyncExternalStore_23":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"3.  (可选参数)：\r"},"react-hook-useSyncExternalStore_24":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 类型： \r"},"react-hook-useSyncExternalStore_25":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    - 这个函数的作用与  类似，但它是为服务端渲染（SSR）或预渲染时使用的。在客户端首次渲染或 hydrate 操作期间，React 会使用此函数而不是来读取数据的初始状态。这是为了确保在服务端渲染的内容与客户端的初始内容匹配，从而避免不必要的重新渲染和闪烁。如果你的应用不涉及服务端渲染，那么不需要这个参数。\r"},"react-hook-useSyncExternalStore_26":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_27":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"下面我们从几个应用开发者也能接触到的场景先学习是怎么用的。\r"},"react-hook-useSyncExternalStore_28":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_29":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"从里获取数据\r"},"react-hook-useSyncExternalStore_30":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_31":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"想象你要做一个博客文章的状态管理功能，你希望所有渲染文章列表的组件都能实时获取最新的数据，那么就可以这样做：\r"},"react-hook-useSyncExternalStore_32":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_33":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"先创建状态store：\r"},"react-hook-useSyncExternalStore_34":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_35":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_36":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"/*\r"},"react-hook-useSyncExternalStore_37":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":" * articlesStore.js \r"},"react-hook-useSyncExternalStore_38":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":" */\r"},"react-hook-useSyncExternalStore_39":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_40":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"// 初始化文章 ID 计数器\r"},"react-hook-useSyncExternalStore_41":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"let nextId = 0;\r"},"react-hook-useSyncExternalStore_42":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_43":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"// 初始文章列表\r"},"react-hook-useSyncExternalStore_44":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"let articles = [{ id: nextId++, title: 'Article #1', content: 'This is the content of Article #1.' }];\r"},"react-hook-useSyncExternalStore_45":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_46":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"// 用于存储所有订阅文章列表更改的监听器\r"},"react-hook-useSyncExternalStore_47":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"let listeners = [];\r"},"react-hook-useSyncExternalStore_48":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_49":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"export const articlesStore = {\r"},"react-hook-useSyncExternalStore_50":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  addArticle(title, content) {\r"},"react-hook-useSyncExternalStore_51":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    articles = [...articles, { id: nextId++, title: title, content: content }];\r"},"react-hook-useSyncExternalStore_52":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    // 通知所有监听器文章列表已更改\r"},"react-hook-useSyncExternalStore_53":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    emitChange();\r"},"react-hook-useSyncExternalStore_54":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  },\r"},"react-hook-useSyncExternalStore_55":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 订阅文章列表更改的方法\r"},"react-hook-useSyncExternalStore_56":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  subscribe(listener) {\r"},"react-hook-useSyncExternalStore_57":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    // 添加新的监听器\r"},"react-hook-useSyncExternalStore_58":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    listeners = [...listeners, listener];\r"},"react-hook-useSyncExternalStore_59":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    // 返回一个取消订阅的函数\r"},"react-hook-useSyncExternalStore_60":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    return () =\r"},"react-hook-useSyncExternalStore_61":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"      // 删除监听器\r"},"react-hook-useSyncExternalStore_62":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"      listeners = listeners.filter(l =\r"},"react-hook-useSyncExternalStore_63":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    };\r"},"react-hook-useSyncExternalStore_64":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  },\r"},"react-hook-useSyncExternalStore_65":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 获取当前文章列表的“快照”\r"},"react-hook-useSyncExternalStore_66":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  getSnapshot() {\r"},"react-hook-useSyncExternalStore_67":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    return articles;\r"},"react-hook-useSyncExternalStore_68":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  }\r"},"react-hook-useSyncExternalStore_69":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"};\r"},"react-hook-useSyncExternalStore_70":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_71":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"// 通知所有监听器的辅助函数，遍历 listeners 数组并调用每个监听器\r"},"react-hook-useSyncExternalStore_72":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function emitChange() {\r"},"react-hook-useSyncExternalStore_73":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  for (let listener of listeners) {\r"},"react-hook-useSyncExternalStore_74":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    listener();\r"},"react-hook-useSyncExternalStore_75":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  }\r"},"react-hook-useSyncExternalStore_76":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_77":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_78":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_79":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"然后你可以在需要渲染文章列表的组件里实现实时数据渲染了：\r"},"react-hook-useSyncExternalStore_80":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_81":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_82":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"import { useSyncExternalStore } from 'react';\r"},"react-hook-useSyncExternalStore_83":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"import { articlesStore } from './articlesStore.js';\r"},"react-hook-useSyncExternalStore_84":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_85":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"export default function ArticlesApp() {\r"},"react-hook-useSyncExternalStore_86":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 使用 useSyncExternalStore 订阅文章列表的更改\r"},"react-hook-useSyncExternalStore_87":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  const articles = useSyncExternalStore(articlesStore.subscribe, articlesStore.getSnapshot);\r"},"react-hook-useSyncExternalStore_88":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_89":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 当点击按钮时添加新文章的处理函数\r"},"react-hook-useSyncExternalStore_90":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  const handleAddArticle = () =\r"},"react-hook-useSyncExternalStore_91":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    // ……\r"},"react-hook-useSyncExternalStore_92":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    articlesStore.addArticle(title, content);\r"},"react-hook-useSyncExternalStore_93":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  };\r"},"react-hook-useSyncExternalStore_94":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_95":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return (\r"},"react-hook-useSyncExternalStore_96":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    <"},"react-hook-useSyncExternalStore_97":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"      <button onClick={handleAddArticle}>Add Article</button"},"react-hook-useSyncExternalStore_98":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"      <ul"},"react-hook-useSyncExternalStore_99":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"        {//}\r"},"react-hook-useSyncExternalStore_100":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"        {articles.map(article =\r"},"react-hook-useSyncExternalStore_101":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"          <li key={article.id}"},"react-hook-useSyncExternalStore_102":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"            {}\r"},"react-hook-useSyncExternalStore_103":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"          </li"},"react-hook-useSyncExternalStore_104":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"        ))}\r"},"react-hook-useSyncExternalStore_105":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"      </ul"},"react-hook-useSyncExternalStore_106":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    </"},"react-hook-useSyncExternalStore_107":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  );\r"},"react-hook-useSyncExternalStore_108":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_109":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_110":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_111":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"这个示例只是为解释的用法使用的，实际场景中的逻辑一定比这个复杂得多。但这个简单的示例已经足够让我们看到的价值了——如果有多个组件会触发文章列表的更新，那么使用了监听数据变化的组件都能实时刷新数据。在使用以前，我们通常是在进入页面时获取新数据，或者用定时器定时来更新数据。\r"},"react-hook-useSyncExternalStore_112":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_113":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"从浏览器API获取数据\r"},"react-hook-useSyncExternalStore_114":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_115":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"现在我们用一个更加直观的示例来看看的能力。\r"},"react-hook-useSyncExternalStore_116":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_117":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"我们计划用来监听网络状态，并把网络状态显示在页面上。网络状态可以从里的获取。\r"},"react-hook-useSyncExternalStore_118":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_119":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"在代码设计层面，我们需要知道更新的数据通常可能被多个组件引用，那么写一个自定义 hook 是最合理的方式，那么这个示例中我们就写一个自定义 hook 来实现核心逻辑：\r"},"react-hook-useSyncExternalStore_120":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_121":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_122":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"import { useSyncExternalStore } from 'react';\r"},"react-hook-useSyncExternalStore_123":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_124":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"export function useOnlineStatus() {\r"},"react-hook-useSyncExternalStore_125":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  const isOnline = useSyncExternalStore(subscribe, getSnapshot);\r"},"react-hook-useSyncExternalStore_126":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return isOnline;\r"},"react-hook-useSyncExternalStore_127":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_128":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_129":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function getSnapshot() {\r"},"react-hook-useSyncExternalStore_130":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return navigator.onLine;\r"},"react-hook-useSyncExternalStore_131":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_132":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_133":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function subscribe(callback) {\r"},"react-hook-useSyncExternalStore_134":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  window.addEventListener('online', callback);\r"},"react-hook-useSyncExternalStore_135":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  window.addEventListener('offline', callback);\r"},"react-hook-useSyncExternalStore_136":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return () =\r"},"react-hook-useSyncExternalStore_137":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    window.removeEventListener('online', callback);\r"},"react-hook-useSyncExternalStore_138":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    window.removeEventListener('offline', callback);\r"},"react-hook-useSyncExternalStore_139":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  };\r"},"react-hook-useSyncExternalStore_140":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_141":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_142":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_143":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"在页面调用就可以获取onLine的最新值：\r"},"react-hook-useSyncExternalStore_144":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_145":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_146":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"import { useOnlineStatus } from './useOnlineStatus.js';\r"},"react-hook-useSyncExternalStore_147":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_148":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"export default function StatusBar() {\r"},"react-hook-useSyncExternalStore_149":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  const isOnline = useOnlineStatus();\r"},"react-hook-useSyncExternalStore_150":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return <h1>{isOnline ? '✅ Online' : '❌ Disconnected'}</h1>;\r"},"react-hook-useSyncExternalStore_151":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_152":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_153":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_154":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"这个示例完美地展示了实时获取数据的能力，不信现在我们拔掉网线和插上网线，页面都会自动更新网络状态。你可以直接到体验。\r"},"react-hook-useSyncExternalStore_155":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_156":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_157":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_158":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"注意事项\r"},"react-hook-useSyncExternalStore_159":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_160":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"- 的返回值不能总是不同的对象\r"},"react-hook-useSyncExternalStore_161":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_162":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"依赖函数返回的值来决定是否重新渲染。如果每次都返回新的对象，即使对象的内容相同，React 会认为状态已经变化并重新渲染组件。\r"},"react-hook-useSyncExternalStore_163":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_164":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_165":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function getSnapshot() {\r"},"react-hook-useSyncExternalStore_166":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 🔴 getSnapshot 不要总是返回不同的对象\r"},"react-hook-useSyncExternalStore_167":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return {\r"},"react-hook-useSyncExternalStore_168":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    todos: myStore.todos\r"},"react-hook-useSyncExternalStore_169":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  };\r"},"react-hook-useSyncExternalStore_170":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_171":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_172":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_173":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"正确的返回值应该这样写：\r"},"react-hook-useSyncExternalStore_174":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_175":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_176":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function getSnapshot() {\r"},"react-hook-useSyncExternalStore_177":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // ✅ 你可以返回不可变数据\r"},"react-hook-useSyncExternalStore_178":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  return myStore.todos;\r"},"react-hook-useSyncExternalStore_179":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_180":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_181":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_182":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"- 不要放在组件内定义\r"},"react-hook-useSyncExternalStore_183":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_184":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"如果  函数在组件内部定义，那么每次组件渲染都会创建一个新的  函数实例。这是由于  会在  函数改变时重新订阅，这意味着每次重新渲染都会导致重新订阅，可能导致不必要的开销，尤其是当订阅操作涉及复杂的计算或外部资源时。\r"},"react-hook-useSyncExternalStore_185":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_186":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"jsx\r"},"react-hook-useSyncExternalStore_187":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"function ChatIndicator() {\r"},"react-hook-useSyncExternalStore_188":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  const isOnline = useSyncExternalStore(subscribe, getSnapshot);\r"},"react-hook-useSyncExternalStore_189":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  \r"},"react-hook-useSyncExternalStore_190":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // 🚩 总是不同的函数，所以 React 每次重新渲染都会重新订阅\r"},"react-hook-useSyncExternalStore_191":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  function subscribe() {\r"},"react-hook-useSyncExternalStore_192":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"    // ...\r"},"react-hook-useSyncExternalStore_193":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  }\r"},"react-hook-useSyncExternalStore_194":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_195":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"  // ...\r"},"react-hook-useSyncExternalStore_196":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"}\r"},"react-hook-useSyncExternalStore_197":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_198":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_199":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"正确的做法是把  函数移到组件外部，这样它在组件的整个生命周期中都保持不变；或者使用  钩子来缓存  函数。\r"},"react-hook-useSyncExternalStore_200":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_201":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"结语\r"},"react-hook-useSyncExternalStore_202":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_203":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"虽然对于应用开发者来说不是必要的，但如果你想拓展对 React 生态圈的认识，依然有必要了解一下的用法和使用场景，因为它能帮助你未来更好地理解优秀的第三方库的设计。\r"},"react-hook-useSyncExternalStore_204":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_205":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_206":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"专栏资源\r"},"react-hook-useSyncExternalStore_207":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_208":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"专栏博客地址：\r"},"react-hook-useSyncExternalStore_209":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_210":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"专栏演示站：\r"},"react-hook-useSyncExternalStore_211":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_212":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"专栏源码仓库：👉\r"},"react-hook-useSyncExternalStore_213":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_214":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"交个朋友：👉\r"},"react-hook-useSyncExternalStore_215":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_216":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"专栏文章列表：\r"},"react-hook-useSyncExternalStore_217":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_218":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_219":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_220":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_221":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_222":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_223":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_224":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_225":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_226":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_227":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_228":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_229":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_230":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_231":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_232":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_233":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_234":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_235":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_236":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_237":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_238":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_239":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_240":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_241":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_242":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_243":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_244":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_245":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_246":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_247":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":"\r"},"react-hook-useSyncExternalStore_248":{"title":"精读React hooks（十三）：使用useSyncExternalStore获取实时数据","content":""},"react-hook-useImperativeHandle":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","display":"\r"},"react-hook-useImperativeHandle_0":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_1":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"在 React 开发中，组件之间的交互大多基于 props 和 state。但是，有时我们需要更直接地访问一个组件的内部方法或属性，例如，外部控制一个自定义输入组件的焦点。这时，Refs 就派上用场（学习 useRef👉《》），但 Refs 本身的功能是有限的，它默认只能访问 DOM 节点或组件实例。这时，如何自定义我们想要暴露给父组件的实例方法或属性呢？答案就是使用。\r"},"react-hook-useImperativeHandle_2":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_3":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"是一个相对少用但必要的时候能让你的 React 代码更灵活的 hook，本文我们就来探讨一下的使用方法和使用场景。\r"},"react-hook-useImperativeHandle_4":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_5":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"的使用\r"},"react-hook-useImperativeHandle_6":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_7":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"通常与一起使用，以便将 ref 传递给函数组件，用法定义如下：\r"},"react-hook-useImperativeHandle_8":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_9":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"jsx\r"},"react-hook-useImperativeHandle_10":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"const ForwardRefChildComponents = forwardRef(function ChildComponents(props, ref) {\r"},"react-hook-useImperativeHandle_11":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  useImperativeHandle(ref, () =\r"},"react-hook-useImperativeHandle_12":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    return {\r"},"react-hook-useImperativeHandle_13":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"      // ... your methods ...\r"},"react-hook-useImperativeHandle_14":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    };\r"},"react-hook-useImperativeHandle_15":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  }, []);\r"},"react-hook-useImperativeHandle_16":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"})\r"},"react-hook-useImperativeHandle_17":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_18":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_19":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"基础示例\r"},"react-hook-useImperativeHandle_20":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_21":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"想象一个简单的例子，你有一个自定义输入组件，你想为其提供一个方法来清除输入内容，但不想暴露整个组件或 DOM 节点。\r"},"react-hook-useImperativeHandle_22":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_23":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"jsx\r"},"react-hook-useImperativeHandle_24":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"const ForwardedCustomInput = forwardRef(function CustomInput(props, ref) {\r"},"react-hook-useImperativeHandle_25":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  const inputRef = useRef();\r"},"react-hook-useImperativeHandle_26":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_27":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  useImperativeHandle(ref, () =\r"},"react-hook-useImperativeHandle_28":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    clear: () =\r"},"react-hook-useImperativeHandle_29":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"      inputRef.current.value = '';\r"},"react-hook-useImperativeHandle_30":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    }\r"},"react-hook-useImperativeHandle_31":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  }));\r"},"react-hook-useImperativeHandle_32":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_33":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  return <input ref={inputRef} />;\r"},"react-hook-useImperativeHandle_34":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"})\r"},"react-hook-useImperativeHandle_35":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_36":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_37":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"现在，当你使用并为其提供一个 ref 时，你可以直接调用方法\r"},"react-hook-useImperativeHandle_38":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_39":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"jsx\r"},"react-hook-useImperativeHandle_40":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"function App() {\r"},"react-hook-useImperativeHandle_41":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  const inputRef = useRef();\r"},"react-hook-useImperativeHandle_42":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_43":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  return (\r"},"react-hook-useImperativeHandle_44":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    <div"},"react-hook-useImperativeHandle_45":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"      <ForwardedCustomInput ref={inputRef} /"},"react-hook-useImperativeHandle_46":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"      <button onClick={() =\r"},"react-hook-useImperativeHandle_47":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"    </div"},"react-hook-useImperativeHandle_48":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"  );\r"},"react-hook-useImperativeHandle_49":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"}\r"},"react-hook-useImperativeHandle_50":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_51":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_52":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"当我们点击 \"Clear Input\" 按钮时，输入框的内容将被清除，这种实现方式让我们没有操作 DOM 节点也能操作完成操作。\r"},"react-hook-useImperativeHandle_53":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_54":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"线上示例可以到👉体验。\r"},"react-hook-useImperativeHandle_55":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_56":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"应用场景\r"},"react-hook-useImperativeHandle_57":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_58":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"尽管能让你的 React 应用变得更灵活，但你不应该为了这样的灵活而过度使用。\r"},"react-hook-useImperativeHandle_59":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_60":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"有一条准则可以说明何时使用——如果使用 props 可以解决的场景都不要使用 refs，也就无需使用。\r"},"react-hook-useImperativeHandle_61":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_62":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"你应该只在确实需要自定义暴露给父组件的实例值时使用。例如以下场景：\r"},"react-hook-useImperativeHandle_63":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_64":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- 滚动到节点\r"},"react-hook-useImperativeHandle_65":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- 聚焦节点\r"},"react-hook-useImperativeHandle_66":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- 触发动画：你可能有一个组件负责管理复杂的动画，你可以使用来暴露和等控制方法。\r"},"react-hook-useImperativeHandle_67":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- 选择文本\r"},"react-hook-useImperativeHandle_68":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_69":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"优势和局限\r"},"react-hook-useImperativeHandle_70":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_71":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"使用 可以带来的好处\r"},"react-hook-useImperativeHandle_72":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_73":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- ：你可以只暴露你想让父组件访问的特定方法或属性。\r"},"react-hook-useImperativeHandle_74":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- ：你可以精确控制组件的行为，而不是依赖于状态或属性的变化。\r"},"react-hook-useImperativeHandle_75":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_76":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"它的局限性及潜在风险\r"},"react-hook-useImperativeHandle_77":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_78":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- ：过度依赖可能会导致代码难以理解和维护。\r"},"react-hook-useImperativeHandle_79":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"- ：如果依赖于外部变量或状态，可能会导致不必要的组件重新渲染。使用或可以一定程度上减少这样的重新渲染。\r"},"react-hook-useImperativeHandle_80":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_81":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"结语\r"},"react-hook-useImperativeHandle_82":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_83":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"提供了一种精确控制组件对外暴露的能力，有了它，开发者可以轻松实现对组件的细粒度控制和高度封装。\r"},"react-hook-useImperativeHandle_84":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_85":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_86":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"专栏资源\r"},"react-hook-useImperativeHandle_87":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_88":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"专栏博客地址：\r"},"react-hook-useImperativeHandle_89":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_90":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"专栏演示站：\r"},"react-hook-useImperativeHandle_91":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_92":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"专栏源码仓库：👉\r"},"react-hook-useImperativeHandle_93":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_94":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"交个朋友：👉\r"},"react-hook-useImperativeHandle_95":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_96":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"专栏文章列表：\r"},"react-hook-useImperativeHandle_97":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_98":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_99":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_100":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_101":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_102":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_103":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_104":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_105":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_106":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_107":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_108":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_109":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_110":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_111":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_112":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_113":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_114":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_115":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_116":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_117":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_118":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_119":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_120":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_121":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_122":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_123":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_124":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_125":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_126":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_127":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":"\r"},"react-hook-useImperativeHandle_128":{"title":"精读React hooks（十二）：使用useImperativeHandle能获得什么能力","content":""},"react-hook-useInsertionEffect":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","display":"\r"},"react-hook-useInsertionEffect_0":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_1":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"React发展至今，已经不局限于前端开发框架的定位，它已经逐渐发展成框架的框架。为什么这么说呢？因为React这几年推出了很多服务于上层框架的API，这类API普通开发者一般不需要关注。在React hooks里，就是这样的定位——是为CSS-in-JS库提供的一个hook，它让后者可以更合理地注入样式，普通开发者可以不用关注。\r"},"react-hook-useInsertionEffect_2":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_3":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"能为CSS-in-JS带来什么？\r"},"react-hook-useInsertionEffect_4":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_5":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"在出现以前，无论是使用注入还是注入，都存在重复计算和性能浪费的问题，而像使用babel插件则又显得不够灵活。\r"},"react-hook-useInsertionEffect_6":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_7":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"为了弥补这些主流方案的不足，React用给CSS-in-JS库作者多一个选择，有这样的优点：\r"},"react-hook-useInsertionEffect_8":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_9":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"1. ：允许在运行时动态地注入样式，这使得基于组件的状态、道具或上下文的样式变化变得容易。\r"},"react-hook-useInsertionEffect_10":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"2. ：保证了在任何布局效果触发之前插入样式，减少了样式的重复计算和布局抖动。\r"},"react-hook-useInsertionEffect_11":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_12":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"总结来说，再高度动态样式的应用中，的表现会比其它方案更优秀。\r"},"react-hook-useInsertionEffect_13":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_14":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"基本使用\r"},"react-hook-useInsertionEffect_15":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_16":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"这是基础用法的定义：\r"},"react-hook-useInsertionEffect_17":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_18":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_19":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"useInsertionEffect(setup, dependencies?)\r"},"react-hook-useInsertionEffect_20":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_21":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_22":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"在方法里可以做我们需要的处理，则是依赖数组，和、的依赖数组规则一样。\r"},"react-hook-useInsertionEffect_23":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_24":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"现在来看个详细的用法示例：\r"},"react-hook-useInsertionEffect_25":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_26":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_27":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"import { useInsertionEffect } from 'react';\r"},"react-hook-useInsertionEffect_28":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_29":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"function useDynamicStyle(styleObj) {\r"},"react-hook-useInsertionEffect_30":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"  const cssString = convertStyleObjToCSS(styleObj); // 将样式对象转换为 CSS 字符串的辅助函数\r"},"react-hook-useInsertionEffect_31":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_32":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"  useInsertionEffect(() =\r"},"react-hook-useInsertionEffect_33":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"    const styleElement = document.createElement('style');\r"},"react-hook-useInsertionEffect_34":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"    styleElement.innerHTML = cssString;\r"},"react-hook-useInsertionEffect_35":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"    document.head.appendChild(styleElement);\r"},"react-hook-useInsertionEffect_36":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"    return () =\r"},"react-hook-useInsertionEffect_37":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"      document.head.removeChild(styleElement);\r"},"react-hook-useInsertionEffect_38":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"    };\r"},"react-hook-useInsertionEffect_39":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"  }, [cssString]);\r"},"react-hook-useInsertionEffect_40":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"}\r"},"react-hook-useInsertionEffect_41":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_42":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_43":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"在里面，我们可以动态注入。\r"},"react-hook-useInsertionEffect_44":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_45":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"注意事项\r"},"react-hook-useInsertionEffect_46":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_47":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"- 只在客户端运行，不能在服务器渲染期间运行。\r"},"react-hook-useInsertionEffect_48":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"- 不能从中更新状态。这是因为专为插入操作设计的，而不是为响应式状态变化设计的。如果在里更新状态，会造成组件重新渲染。\r"},"react-hook-useInsertionEffect_49":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"- 当运行时，refs还没有附加。如果你试图在中访问ref，你可能会得到或未定义的值。\r"},"react-hook-useInsertionEffect_50":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"- 可能在DOM更新之前或之后运行，所以不能依赖于DOM在特定时刻的更新状态。这是因为的设计初衷是在任何布局效果触发之前插入元素，但它并不保证在 DOM 的任何特定更新之前或之后运行。因此，依赖于DOM在特定时刻的状态可能导致不可预测的行为。例如：假设你希望在中检查某个元素的尺寸。但由于 DOM 可能尚未更新，所以你得到的尺寸可能是旧的或不准确的。\r"},"react-hook-useInsertionEffect_51":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_52":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"结语\r"},"react-hook-useInsertionEffect_53":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_54":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"虽然是为CSS-in-JS库提供的，但作为一名想了解React生态的开发者，即使工作中用不到，掌握一下基础知识也是有利无害。\r"},"react-hook-useInsertionEffect_55":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_56":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_57":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"专栏资源\r"},"react-hook-useInsertionEffect_58":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_59":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"专栏博客地址：\r"},"react-hook-useInsertionEffect_60":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_61":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"专栏演示站：\r"},"react-hook-useInsertionEffect_62":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_63":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"专栏源码仓库：👉\r"},"react-hook-useInsertionEffect_64":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_65":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"交个朋友：👉\r"},"react-hook-useInsertionEffect_66":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_67":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"专栏文章列表：\r"},"react-hook-useInsertionEffect_68":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_69":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_70":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_71":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_72":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_73":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_74":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_75":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_76":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_77":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_78":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_79":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_80":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_81":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_82":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_83":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_84":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_85":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_86":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_87":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_88":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_89":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_90":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_91":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_92":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_93":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_94":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_95":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_96":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_97":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_98":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":"\r"},"react-hook-useInsertionEffect_99":{"title":"精读React hooks（十一）：useInsertionEffect——CSS-in-JS样式注入新方式","content":""},"react-hook-useDeferredValue":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"精读React hooks（十）：使用useDeferredValue延迟状态更新","display":"\r"},"react-hook-useDeferredValue_0":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_1":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"上一篇文章（《》）我们学习了，在React v18的并发模式下，使用可以在密集计算的场景下让UI无阻塞。React v18还引入了一个和相似的hook，就是。为什么说相似呢，因为的作用是：延迟某个值的更新，使高优先级的任务可以先行完成。\r"},"react-hook-useDeferredValue_2":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_3":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"开始学习之前，我们先明确和的差异：\r"},"react-hook-useDeferredValue_4":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_5":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 主要关注点是。它允许开发者控制某个更新的延迟更新，还提供了过渡标识，让开发者能够添加过渡反馈。\r"},"react-hook-useDeferredValue_6":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 主要关注点是。它允许你把特定状态的更新标记为低优先级。\r"},"react-hook-useDeferredValue_7":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_8":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"简而言之，如果你想提供过渡反馈，就用，如果不需要提供过渡反馈，用就可以。\r"},"react-hook-useDeferredValue_9":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_10":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"基础使用\r"},"react-hook-useDeferredValue_11":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_12":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"jsx\r"},"react-hook-useDeferredValue_13":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"const deferredValue = useDeferredValue(someValue);\r"},"react-hook-useDeferredValue_14":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_15":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_16":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"其中是你想要延迟的值，它可以是任何类型。\r"},"react-hook-useDeferredValue_17":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_18":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"的渲染有两种情况：\r"},"react-hook-useDeferredValue_19":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_20":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"1. ，的值将与的值相同。\r"},"react-hook-useDeferredValue_21":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"2. ，因为的优先级较低，即使并发模式下已在后台更新，React也会先使用旧值渲染，当其它高优先级的状态更新完成，才会把新值渲染出来。\r"},"react-hook-useDeferredValue_22":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_23":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"示例分析\r"},"react-hook-useDeferredValue_24":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_25":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"想象一个场景，你在大数据量场景下做查询，前端渲染就需要延迟更新列表，还希望只有最后一次查询的数据被保留，这时候就派上用场了，例如：\r"},"react-hook-useDeferredValue_26":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_27":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"jsx\r"},"react-hook-useDeferredValue_28":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"import { useState, useDeferredValue, memo } from 'react';\r"},"react-hook-useDeferredValue_29":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_30":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"export default function App() {\r"},"react-hook-useDeferredValue_31":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  const [text, setText] = useState('');\r"},"react-hook-useDeferredValue_32":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  const deferredText = useDeferredValue(text);\r"},"react-hook-useDeferredValue_33":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  return (\r"},"react-hook-useDeferredValue_34":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    <"},"react-hook-useDeferredValue_35":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\t\t\t{//}\r"},"react-hook-useDeferredValue_36":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      <input value={text} onChange={e =\r"},"react-hook-useDeferredValue_37":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\t\t\t{//}\r"},"react-hook-useDeferredValue_38":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\t\t\t{//}\r"},"react-hook-useDeferredValue_39":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      <SlowList text={deferredText} /"},"react-hook-useDeferredValue_40":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    </"},"react-hook-useDeferredValue_41":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  );\r"},"react-hook-useDeferredValue_42":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"}\r"},"react-hook-useDeferredValue_43":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_44":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"const SlowList = memo(function SlowList({ text }) {\r"},"react-hook-useDeferredValue_45":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  const arr = [];\r"},"react-hook-useDeferredValue_46":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  for (let i = 0; i < 200; i++) {\r"},"react-hook-useDeferredValue_47":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    let startTime = performance.now();\r"},"react-hook-useDeferredValue_48":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    while (performance.now() - startTime < 1) {}\r"},"react-hook-useDeferredValue_49":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    if (String(i).includes(text)) {\r"},"react-hook-useDeferredValue_50":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      arr.push(<li key={i}>{i}</li>);\r"},"react-hook-useDeferredValue_51":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    }\r"},"react-hook-useDeferredValue_52":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  }\r"},"react-hook-useDeferredValue_53":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  return (\r"},"react-hook-useDeferredValue_54":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    <ul className=\"items\""},"react-hook-useDeferredValue_55":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      {arr}\r"},"react-hook-useDeferredValue_56":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    </ul"},"react-hook-useDeferredValue_57":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"  );\r"},"react-hook-useDeferredValue_58":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"});\r"},"react-hook-useDeferredValue_59":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_60":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_61":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"如果你想对照不用的效果，只要把修改掉就可以\r"},"react-hook-useDeferredValue_62":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_63":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"jsx\r"},"react-hook-useDeferredValue_64":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"<SlowList text={text} /"},"react-hook-useDeferredValue_65":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_66":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_67":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"线上示例可以来体验。\r"},"react-hook-useDeferredValue_68":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_69":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"使用注意事项\r"},"react-hook-useDeferredValue_70":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_71":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 仅在开启React并发模式的时候才有效\r"},"react-hook-useDeferredValue_72":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_73":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    jsx\r"},"react-hook-useDeferredValue_74":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    // React v18以前\r"},"react-hook-useDeferredValue_75":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    ReactDOM.render(<app />, rootNode) // ❌ 无法开启useTransition\r"},"react-hook-useDeferredValue_76":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_77":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    // React v18\r"},"react-hook-useDeferredValue_78":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    ReactDOM.createRoot(rootNode).render(<app />) // ✅ 开启useTransition\r"},"react-hook-useDeferredValue_79":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_80":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_81":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 传递给的值应该是（如字符串和数字）或。\r"},"react-hook-useDeferredValue_82":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_83":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    为什么对象需要创建在外部创建？这其实和JavaScript的机制有关，即使每次创建相同的对象，JavaScript依然会每次生成新的引用。这意味着每次你在组件的渲染函数中创建一个新的对象并将其传递给，你都是在传递一个新的、与上一次渲染不同的引用。\r"},"react-hook-useDeferredValue_84":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_85":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    jsx\r"},"react-hook-useDeferredValue_86":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    function MyComponent() {\r"},"react-hook-useDeferredValue_87":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      const obj = { name: 'John' }; // 每次 MyComponent 重新渲染时，都会创建一个新的 obj 对象，它们的引用是不同的\r"},"react-hook-useDeferredValue_88":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_89":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \t// useDeferredValue 通过 Object.is 来检查值是否有变化，引用不同的对象会被当作不同的值\r"},"react-hook-useDeferredValue_90":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      const deferredValue = useDeferredValue(obj);\r"},"react-hook-useDeferredValue_91":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_92":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"      // ...其他代码...\r"},"react-hook-useDeferredValue_93":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    }\r"},"react-hook-useDeferredValue_94":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_95":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"    \r"},"react-hook-useDeferredValue_96":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 当同一个在渲染前接收到多次不同的值时，只有最后一个会被渲染。想象一下，前端在做大数据量查询的时候，我们当然希望只有最后一次查询的数据成功渲染。\r"},"react-hook-useDeferredValue_97":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 和一样，只会中断或延迟UI的渲染，。\r"},"react-hook-useDeferredValue_98":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 与结合使用，在更新时，的fallback是不会出现的，页面上是继续显示的旧值。这一点和不一样。\r"},"react-hook-useDeferredValue_99":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_100":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"和节流、防抖的关系\r"},"react-hook-useDeferredValue_101":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_102":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"从上面的学习可以看出来，在某些场景下是可以替换掉节流和防抖的，我们先来分析它们各自的特性，然后看看它们分别适用什么场景？\r"},"react-hook-useDeferredValue_103":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_104":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"：\r"},"react-hook-useDeferredValue_105":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_106":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 这两种方法都是为了控制函数的执行频率，但它们是阻塞的，可能会导致不流畅的用户体验。\r"},"react-hook-useDeferredValue_107":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_108":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"：\r"},"react-hook-useDeferredValue_109":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_110":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 它与React深度集成，可以适应用户的设备。如果设备性能好，延迟的重新渲染会很快完成；如果设备性能差，重新渲染会相应地延迟。\r"},"react-hook-useDeferredValue_111":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 它不需要选择固定的延迟，与防抖和节流不同。\r"},"react-hook-useDeferredValue_112":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 由执行的重新渲染是可中断的。这意味着在React重新渲染期间，如果发生了其他更新，React会中断当前的渲染并处理新的更新。\r"},"react-hook-useDeferredValue_113":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_114":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"：\r"},"react-hook-useDeferredValue_115":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_116":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 如果要优化的工作不是在渲染期间进行的，例如减少网络请求，那么防抖和节流仍然是有用的。\r"},"react-hook-useDeferredValue_117":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"- 如果优化的目标是和渲染有关的，建议使用\r"},"react-hook-useDeferredValue_118":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_119":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"结语\r"},"react-hook-useDeferredValue_120":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_121":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"带来的是可延迟的状态更新，当实际工作中遇到大数据量渲染的场景，不妨想想是否引入。\r"},"react-hook-useDeferredValue_122":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_123":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"专栏资源\r"},"react-hook-useDeferredValue_124":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_125":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"专栏博客地址：\r"},"react-hook-useDeferredValue_126":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_127":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"专栏演示站：\r"},"react-hook-useDeferredValue_128":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_129":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"专栏源码仓库：👉\r"},"react-hook-useDeferredValue_130":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_131":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"交个朋友：👉\r"},"react-hook-useDeferredValue_132":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_133":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"专栏文章列表：\r"},"react-hook-useDeferredValue_134":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_135":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_136":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_137":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_138":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_139":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_140":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_141":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_142":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_143":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_144":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_145":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_146":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_147":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_148":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_149":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_150":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_151":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_152":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_153":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_154":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_155":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_156":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_157":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_158":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_159":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_160":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_161":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_162":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_163":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_164":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":"\r"},"react-hook-useDeferredValue_165":{"title":"精读React hooks（十）：使用useDeferredValue延迟状态更新","content":""},"react-hook-useTransition":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"精读React hooks（九）：使用useTransition进行非阻塞渲染","display":"\r"},"react-hook-useTransition_0":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_1":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"众所周知（其实很多人没有意识到），React的默认渲染行为是同步的，React总是在我一个操作或者状态更新后再执行下一个操作或状态更新。在大部分场景下，这种即时响应是理想的，因为它确保了UI与内部状态保持紧密同步。但在密集或资源繁重的更新场景下——如加载大量数据时，这种同步行为可能导致整个应用的UI卡顿甚至没有响应。我们把这种UI卡顿现象叫做“阻塞”，当你遇到这种情况时，你的leader往往会让你进行用户体验优化🐶。\r"},"react-hook-useTransition_2":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_3":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"React v18开始，官方引入了并发模式（Concurrent Mode）和一些相关的Hooks，其中之一就是。开发者可以将某些状态更新标记为“可中断”的，从而允许React在必要时打断这些更新，先处理其他更为紧急的任务。我们把这种渲染效果称作“非阻塞UI”。\r"},"react-hook-useTransition_4":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_5":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"在这篇文章中，我们就来探讨的工作原理，如何在实际应用中使用它。\r"},"react-hook-useTransition_6":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_7":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"基础\r"},"react-hook-useTransition_8":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_9":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"首先，我们要明白的设计初衷：在React的并发模式下，允许我们中断或延后某些状态更新，以便于能够在长时间的计算或数据拉取时保持UI的响应性。\r"},"react-hook-useTransition_10":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_11":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"用法定义\r"},"react-hook-useTransition_12":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_13":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"jsx\r"},"react-hook-useTransition_14":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const [isPending, startTransition] = useTransition()\r"},"react-hook-useTransition_15":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_16":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_17":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- ：是一个布尔值，当过渡状态仍在进行中时，其值为；否则为。\r"},"react-hook-useTransition_18":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- ：是一个函数，当你希望启动一个新的过渡状态时调用它。\r"},"react-hook-useTransition_19":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_20":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"工作原理\r"},"react-hook-useTransition_21":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_22":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"1. :\r"},"react-hook-useTransition_23":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"在React的并发模式中，不是所有的状态更新都被视为等同的。React将更新分为不同的优先级类别，其中某些更新（如输入处理）被认为是更加紧急的，而其他更新（如从服务器获取数据）则可以中断或者延后更新。\r"},"react-hook-useTransition_24":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"2. :\r"},"react-hook-useTransition_25":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"当你使用函数进行状态更新时，你实际上告诉 React：这个更新不是非常紧急的，如果有更重要的更新要处理，你可以中断或延后这个次要更新。\r"},"react-hook-useTransition_26":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"3. :\r"},"react-hook-useTransition_27":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":" 为我们提供了一个标识，告诉我们是否有一个正在执行。我们可以根据来设置过渡状态的样式。\r"},"react-hook-useTransition_28":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_29":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"使用范围和注意事项\r"},"react-hook-useTransition_30":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_31":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 仅在开启React并发模式的时候才有效\r"},"react-hook-useTransition_32":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_33":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    jsx\r"},"react-hook-useTransition_34":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    // React v18以前\r"},"react-hook-useTransition_35":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    ReactDOM.render(<app />, rootNode) // ❌ 无法开启useTransition\r"},"react-hook-useTransition_36":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_37":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    // React v18\r"},"react-hook-useTransition_38":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    ReactDOM.createRoot(rootNode).render(<app />) // ✅ 开启useTransition\r"},"react-hook-useTransition_39":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_40":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_41":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 只有当你能访问某个状态的函数时，你才能将更新包装进中。\r"},"react-hook-useTransition_42":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 传递给的函数必须是同步的，而不能是异步的。\r"},"react-hook-useTransition_43":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_44":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    jsx\r"},"react-hook-useTransition_45":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    startTransition(async () =\r"},"react-hook-useTransition_46":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      await someAsyncFunction();\r"},"react-hook-useTransition_47":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      // ❌ Setting state  startTransition call\r"},"react-hook-useTransition_48":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      setPage('/about');\r"},"react-hook-useTransition_49":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    });\r"},"react-hook-useTransition_50":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_51":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    await someAsyncFunction();\r"},"react-hook-useTransition_52":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    startTransition(() =\r"},"react-hook-useTransition_53":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      // ✅ Setting state  startTransition call\r"},"react-hook-useTransition_54":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      setPage('/about');\r"},"react-hook-useTransition_55":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    });\r"},"react-hook-useTransition_56":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_57":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_58":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 如果你想根据某个 prop 或自定义 Hook 的值来启动一个过渡，那么你应该尝试使用。这是下一篇介绍的hook，此处不展开。\r"},"react-hook-useTransition_59":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 不能用于控制文本输入。因为输入框是需要实时更新的，如果用降低了渲染优先级，可能造成输入“卡顿”。\r"},"react-hook-useTransition_60":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 不要在内部使用，如果一定要用，你可以在外层使用\r"},"react-hook-useTransition_61":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_62":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    jsx\r"},"react-hook-useTransition_63":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    startTransition(() =\r"},"react-hook-useTransition_64":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      // ❌ Setting state  startTransition call\r"},"react-hook-useTransition_65":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      setTimeout(() =\r"},"react-hook-useTransition_66":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        setPage('/about');\r"},"react-hook-useTransition_67":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      }, 1000);\r"},"react-hook-useTransition_68":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    });\r"},"react-hook-useTransition_69":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_70":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    setTimeout(() =\r"},"react-hook-useTransition_71":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      startTransition(() =\r"},"react-hook-useTransition_72":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        // ✅ Setting state  startTransition call\r"},"react-hook-useTransition_73":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        setPage('/about');\r"},"react-hook-useTransition_74":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      });\r"},"react-hook-useTransition_75":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    }, 1000);\r"},"react-hook-useTransition_76":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_77":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    \r"},"react-hook-useTransition_78":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"- 前面说到很多次“中断或延后更新”，那么什么时候中断，什么时候延后更新？最简单的理解：被包裹的同一个状态多次更新，只会渲染最后一个，前面的都算中断（仅UI层面，如：长列表多次请求）；不同组件触发不同状态的更新，被包裹的状态优先级较低，被中断后会等高优先级的状态更新完成后继续更新（如：复杂图表渲染被中断，会在高优先级状态更新后，继续处理图表的渲染）。\r"},"react-hook-useTransition_79":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_80":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"示例\r"},"react-hook-useTransition_81":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_82":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"有无的对比\r"},"react-hook-useTransition_83":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_84":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"想象一个场景，页面上有多个tab，其中一个请求耗时较长，我们快速点击tab切换内容，但总是会在请求耗时的tab上卡顿一下，代码如下：\r"},"react-hook-useTransition_85":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_86":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"jsx\r"},"react-hook-useTransition_87":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"import React, { useState, memo } from 'react';\r"},"react-hook-useTransition_88":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_89":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const TabContainer = () =\r"},"react-hook-useTransition_90":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  const [tab, setTab] = useState('about');\r"},"react-hook-useTransition_91":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_92":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\t// 核心：切换选项卡\r"},"react-hook-useTransition_93":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  function selectTab(nextTab) {\r"},"react-hook-useTransition_94":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    setTab(nextTab);\r"},"react-hook-useTransition_95":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  }\r"},"react-hook-useTransition_96":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_97":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  return (\r"},"react-hook-useTransition_98":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    <div"},"react-hook-useTransition_99":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      <div"},"react-hook-useTransition_100":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        <TabButton isActive={tab === 'about'} onClick={() =\r"},"react-hook-useTransition_101":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        <TabButton isActive={tab === 'posts'} onClick={() =\r"},"react-hook-useTransition_102":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        <TabButton isActive={tab === 'contact'} onClick={() =\r"},"react-hook-useTransition_103":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      </div"},"react-hook-useTransition_104":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      <hr /"},"react-hook-useTransition_105":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      {tab === 'about' && <AboutTab />}\r"},"react-hook-useTransition_106":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      {tab === 'posts' && <PostsTab />}\r"},"react-hook-useTransition_107":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      {tab === 'contact' && <ContactTab />}\r"},"react-hook-useTransition_108":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    </div"},"react-hook-useTransition_109":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  );\r"},"react-hook-useTransition_110":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"};\r"},"react-hook-useTransition_111":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_112":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const PostsTab = memo(() =\r"},"react-hook-useTransition_113":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  let items = [];\r"},"react-hook-useTransition_114":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  for (let i = 0; i < 500; i++) {\r"},"react-hook-useTransition_115":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    items.push(<SlowPost key={i} index={i} />);\r"},"react-hook-useTransition_116":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  }\r"},"react-hook-useTransition_117":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  return <ul>{items}</ul>;\r"},"react-hook-useTransition_118":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"});\r"},"react-hook-useTransition_119":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_120":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const SlowPost = ({ index }) =\r"},"react-hook-useTransition_121":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  let startTime = performance.now();\r"},"react-hook-useTransition_122":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  while (performance.now() - startTime < 10) { }\r"},"react-hook-useTransition_123":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  return <li>Post on weijunext.com #{index + 1}</li>;\r"},"react-hook-useTransition_124":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"};\r"},"react-hook-useTransition_125":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_126":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"// 省略非关键代码\r"},"react-hook-useTransition_127":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"// ……\r"},"react-hook-useTransition_128":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_129":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"export default TabContainer;\r"},"react-hook-useTransition_130":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_131":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_132":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"如果我们想用保持UI的响应，只需要用包裹切换选项卡的\r"},"react-hook-useTransition_133":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_134":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"jsx\r"},"react-hook-useTransition_135":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const [isPending, startTransition] = React.useTransition();\r"},"react-hook-useTransition_136":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_137":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"function selectTab(nextTab) {\r"},"react-hook-useTransition_138":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  startTransition(() =\r"},"react-hook-useTransition_139":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    setTab(nextTab);      \r"},"react-hook-useTransition_140":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  });\r"},"react-hook-useTransition_141":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"}\r"},"react-hook-useTransition_142":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_143":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_144":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"这样我们快速切换tab，无论点到哪一个tab都不会卡顿。\r"},"react-hook-useTransition_145":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_146":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"和实现路由流畅切换\r"},"react-hook-useTransition_147":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_148":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"当与路由结合使用时，允许我们延迟渲染新的路由内容，直到所需的数据被完全加载。而则允许我们可控地开始这种可能导致UI变化的过渡——导航到新页面。\r"},"react-hook-useTransition_149":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_150":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"例如这个示例：\r"},"react-hook-useTransition_151":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_152":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"jsx\r"},"react-hook-useTransition_153":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"import React, { useState } from 'react';\r"},"react-hook-useTransition_154":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"import { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r"},"react-hook-useTransition_155":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_156":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const [location, setLocation] = useState(window.location);\r"},"react-hook-useTransition_157":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"const [isPending, startTransition] = React.unstable_useTransition();\r"},"react-hook-useTransition_158":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_159":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"// 使用 startTransition 来更新 location 状态，能够延迟显示新页面的内容，直到数据加载完毕\r"},"react-hook-useTransition_160":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"function handleNavigation(newLocation) {\r"},"react-hook-useTransition_161":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  startTransition(() =\r"},"react-hook-useTransition_162":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    setLocation(newLocation);\r"},"react-hook-useTransition_163":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  });\r"},"react-hook-useTransition_164":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"}\r"},"react-hook-useTransition_165":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_166":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"// 主应用组件\r"},"react-hook-useTransition_167":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"function App() {\r"},"react-hook-useTransition_168":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  return (\r"},"react-hook-useTransition_169":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    <div"},"react-hook-useTransition_170":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      <BrowserRouter"},"react-hook-useTransition_171":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        {//}\r"},"react-hook-useTransition_172":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        <nav"},"react-hook-useTransition_173":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"          <CustomLink to=\"/about\">About</CustomLink"},"react-hook-useTransition_174":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"          <CustomLink to=\"/contact\">Contact</CustomLink"},"react-hook-useTransition_175":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        </nav"},"react-hook-useTransition_176":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_177":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        {//}\r"},"react-hook-useTransition_178":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        <React.Suspense fallback={<LoadingIndicator />}"},"react-hook-useTransition_179":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"          <Switch location={location}"},"react-hook-useTransition_180":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"            <Route path=\"/about\" component={AboutPage} /"},"react-hook-useTransition_181":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"            <Route path=\"/contact\" component={ContactPage} /"},"react-hook-useTransition_182":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"            {//}\r"},"react-hook-useTransition_183":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"          </Switch"},"react-hook-useTransition_184":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        </React.Suspense"},"react-hook-useTransition_185":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_186":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        {//}\r"},"react-hook-useTransition_187":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"        {isPending && <LoadingIndicator />}\r"},"react-hook-useTransition_188":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"      </BrowserRouter"},"react-hook-useTransition_189":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"    </div"},"react-hook-useTransition_190":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"  );\r"},"react-hook-useTransition_191":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"}\r"},"react-hook-useTransition_192":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_193":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"export default App;\r"},"react-hook-useTransition_194":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_195":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_196":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"通过这种方式，我们可以优雅地处理路由切换，并确保在数据加载时为用户提供一个流畅的体验。\r"},"react-hook-useTransition_197":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_198":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"结语\r"},"react-hook-useTransition_199":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_200":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"带来的是“可中断”的异步UI渲染，当实际工作中遇到卡顿的现象，不妨想想是否能用解决。\r"},"react-hook-useTransition_201":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_202":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_203":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"专栏资源\r"},"react-hook-useTransition_204":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_205":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"专栏博客地址：\r"},"react-hook-useTransition_206":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_207":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"专栏演示站：\r"},"react-hook-useTransition_208":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_209":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"专栏源码仓库：👉\r"},"react-hook-useTransition_210":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_211":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"交个朋友：👉\r"},"react-hook-useTransition_212":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_213":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"专栏文章列表：\r"},"react-hook-useTransition_214":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_215":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_216":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_217":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_218":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_219":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_220":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_221":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_222":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_223":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_224":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_225":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_226":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_227":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_228":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_229":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_230":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_231":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_232":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_233":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_234":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_235":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_236":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_237":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_238":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_239":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_240":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_241":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_242":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_243":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_244":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":"\r"},"react-hook-useTransition_245":{"title":"精读React hooks（九）：使用useTransition进行非阻塞渲染","content":""},"react-hook-useCallback":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"精读React hooks（八）：我们为什么需要useCallback","display":"\r"},"react-hook-useCallback_0":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_1":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"在里，我们知道也可以缓存函数，但React官方更推荐使用来缓存函数。本文就来探讨一下的用法以及我们为什么需要。\r"},"react-hook-useCallback_2":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_3":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"什么是\r"},"react-hook-useCallback_4":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_5":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"是对的特化，它可以返回一个缓存版本的函数，只有当它的依赖项改变时，函数才会被重新创建。这意味着如果依赖没有改变，函数引用保持不变，从而避免了因函数引用改变导致的不必要的重新渲染。\r"},"react-hook-useCallback_6":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_7":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"背后的原理是利用闭包和React的调度机制来存储并在必要时重建函数。与直接在组件内创建函数相比，使用需要付出额外的开销，因为它涉及到存储和检索函数的机制。因此，除非在特定的性能敏感场景中（例如大型列表渲染、频繁的状态更新、与一同使用等），否则不建议盲目使用它。\r"},"react-hook-useCallback_8":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_9":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"为什么需要\r"},"react-hook-useCallback_10":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_11":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"想象这个场景：你有一个化的子组件，该子组件接受一个父组件传递的函数作为 prop。如果父组件重新渲染，而且这个函数是在父组件的函数体内定义的，那么每次父组件渲染时，都会为子组件传递一个新的函数实例。这可能会导致子组件不必要地重新渲染，即使该函数的实际内容没有任何变化。\r"},"react-hook-useCallback_12":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_13":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"的主要目的是解决这样的问题。它确保，除非依赖项发生变化，否则函数实例保持不变。这可以防止因为父组件的非相关渲染而导致的子组件的不必要重新渲染。\r"},"react-hook-useCallback_14":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_15":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"当然，真正的应用场景不仅于此，它还可以用于其他需要稳定引用的场景，例如事件处理器、的回调、函数用于、或等的依赖项、或其他可能因为函数引用改变而导致意外行为的场合。\r"},"react-hook-useCallback_16":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_17":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"如何使用\r"},"react-hook-useCallback_18":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_19":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"的基本使用如下：\r"},"react-hook-useCallback_20":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_21":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_22":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"const memoizedCallback = useCallback(\r"},"react-hook-useCallback_23":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  () =\r"},"react-hook-useCallback_24":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    // 函数体\r"},"react-hook-useCallback_25":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  },\r"},"react-hook-useCallback_26":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  [dependency1, dependency2, ...] // 依赖数组\r"},"react-hook-useCallback_27":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":");\r"},"react-hook-useCallback_28":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_29":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_30":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"只有当、等依赖发生改变时，函数才会重新创建。这对于化的组件、、等钩子的输入特别有用，因为它们都依赖于输入的引用恒定性。\r"},"react-hook-useCallback_31":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_32":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"来看个示例：\r"},"react-hook-useCallback_33":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_34":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"假设我们有一个组件，其中有一个子组件：\r"},"react-hook-useCallback_35":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_36":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_37":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"function TodoItem({ todo, onDelete }) {\r"},"react-hook-useCallback_38":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  console.log(\"TodoItem render:\", todo.id);\r"},"react-hook-useCallback_39":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  return (\r"},"react-hook-useCallback_40":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    <div"},"react-hook-useCallback_41":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      {todo.text}\r"},"react-hook-useCallback_42":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <button onClick={() =\r"},"react-hook-useCallback_43":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    </div"},"react-hook-useCallback_44":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  );\r"},"react-hook-useCallback_45":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}\r"},"react-hook-useCallback_46":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_47":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"function TodoList() {\r"},"react-hook-useCallback_48":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const [todos, setTodos] = useState([\r"},"react-hook-useCallback_49":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    { id: 1, text: \"Learn React\" },\r"},"react-hook-useCallback_50":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    { id: 2, text: \"Learn useCallback\" }\r"},"react-hook-useCallback_51":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  ]);\r"},"react-hook-useCallback_52":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_53":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const handleDelete = id =\r"},"react-hook-useCallback_54":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    setTodos(todos =\r"},"react-hook-useCallback_55":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  };\r"},"react-hook-useCallback_56":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_57":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  return (\r"},"react-hook-useCallback_58":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    <div"},"react-hook-useCallback_59":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      {todos.map(todo =\r"},"react-hook-useCallback_60":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"        <TodoItem key={todo.id} todo={todo} onDelete={handleDelete} /"},"react-hook-useCallback_61":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      ))}\r"},"react-hook-useCallback_62":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    </div"},"react-hook-useCallback_63":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  );\r"},"react-hook-useCallback_64":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}\r"},"react-hook-useCallback_65":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_66":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_67":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"上述代码中，每次重新渲染时，都会被重新创建，导致也重新渲染。为了优化这一点，我们可以使用：\r"},"react-hook-useCallback_68":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_69":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_70":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"const handleDelete = useCallback(id =\r"},"react-hook-useCallback_71":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  setTodos(todos =\r"},"react-hook-useCallback_72":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}, []);\r"},"react-hook-useCallback_73":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_74":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_75":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"在这种情况下，只会在组件首次渲染时被创建一次。\r"},"react-hook-useCallback_76":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_77":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"和的差异\r"},"react-hook-useCallback_78":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_79":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_80":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_81":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"- : 用于缓存复杂函数的计算结果或者构造的值。它返回缓存的结果。\r"},"react-hook-useCallback_82":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"- : 用于缓存函数本身，确保函数的引用在依赖没有改变时保持稳定。\r"},"react-hook-useCallback_83":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_84":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_85":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_86":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"- 从本质上说，就是的语法糖:\r"},"react-hook-useCallback_87":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_88":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_89":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"function useCallback(fn, dependencies) {\r"},"react-hook-useCallback_90":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  return useMemo(() =\r"},"react-hook-useCallback_91":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}\r"},"react-hook-useCallback_92":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_93":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_94":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"这里有一个用户评论系统示例，组件可显示文章的评论并允许用户提交新评论：\r"},"react-hook-useCallback_95":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_96":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_97":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"import React, { useMemo, useCallback } from 'react';\r"},"react-hook-useCallback_98":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_99":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"function CommentsPage({ articleId, user }) {\r"},"react-hook-useCallback_100":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  // 假设 fetchComments 是一个获取评论数据的函数\r"},"react-hook-useCallback_101":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const comments = fetchComments('/comments/' + articleId);\r"},"react-hook-useCallback_102":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_103":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  // 对评论数据进行排序\r"},"react-hook-useCallback_104":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const sortedComments = useMemo(() =\r"},"react-hook-useCallback_105":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    return comments.sort((a, b) =\r"},"react-hook-useCallback_106":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  }, [comments]);\r"},"react-hook-useCallback_107":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_108":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  // 处理新评论的提交\r"},"react-hook-useCallback_109":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const handleCommentSubmit = useCallback((commentText) =\r"},"react-hook-useCallback_110":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    post('/comments/' + articleId, {\r"},"react-hook-useCallback_111":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      author: user,\r"},"react-hook-useCallback_112":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      text: commentText\r"},"react-hook-useCallback_113":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    });\r"},"react-hook-useCallback_114":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  }, [articleId, user]);\r"},"react-hook-useCallback_115":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_116":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  return (\r"},"react-hook-useCallback_117":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    <div"},"react-hook-useCallback_118":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <CommentList comments={sortedComments} /"},"react-hook-useCallback_119":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <CommentForm onSubmit={handleCommentSubmit} /"},"react-hook-useCallback_120":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    </div"},"react-hook-useCallback_121":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  );\r"},"react-hook-useCallback_122":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}\r"},"react-hook-useCallback_123":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_124":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_125":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"在这个示例中，和用途如下：\r"},"react-hook-useCallback_126":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_127":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"- 用途：通过对数据按日期进行排序得到。我们不希望每次重新渲染时都重新排序评论，除非发生变化。因此，我们使用来缓存排序结果。\r"},"react-hook-useCallback_128":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"- 用途：对于函数，我们不希望它在或保持不变的情况下有一个新的引用。因此，我们使用来确保函数引用的稳定性。\r"},"react-hook-useCallback_129":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_130":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"什么时候使用\r"},"react-hook-useCallback_131":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_132":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"使用不意味着总是会带来性能提升，这是对使用场景的简单总结：\r"},"react-hook-useCallback_133":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_134":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_135":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_136":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"1. ：当你将函数作为 prop 传递给已经通过进行优化的子组件时，使用可以确保子组件不会因为父组件中的函数重建而进行不必要的重新渲染。\r"},"react-hook-useCallback_137":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"2. ：如果你正在传递的函数会被用作其他 Hook（例如）的依赖时，使用可确保函数的稳定性，从而避免不必要的副作用的执行。\r"},"react-hook-useCallback_138":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"3. ：在应用涉及很多细粒度的交互，如绘图应用或其它需要大量操作和反馈的场景，使用可以避免因频繁的渲染而导致的性能问题。\r"},"react-hook-useCallback_139":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_140":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_141":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_142":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"1. ：在大部分情况下，函数组件的重新渲染并不会带来明显的性能问题，过度使用可能会使代码变得复杂且难以维护。\r"},"react-hook-useCallback_143":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"2. ：对于没有经过优化的子组件或者那些不会因为 prop 变化而重新渲染的组件，使用是不必要的。\r"},"react-hook-useCallback_144":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"3. ：如果引入仅仅是为了“可能会”有性能提升，而实际上并没有明确的证据表明确实有性能问题，这可能会降低代码的可读性和可维护性。\r"},"react-hook-useCallback_145":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"4. ：如果一个函数并不被用作其他 Hooks 的依赖，并且也不被传递给任何子组件，那么没有理由使用。\r"},"react-hook-useCallback_146":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_147":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"除此之外，我们还要注意针对的依赖项设计，我们需要警惕非必要依赖的混入，造成的效果大打折扣。例如这个非常典型的案例：\r"},"react-hook-useCallback_148":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_149":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_150":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"function TodoList() {\r"},"react-hook-useCallback_151":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const [todos, setTodos] = useState([]);\r"},"react-hook-useCallback_152":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const [inputValue, setInputValue] = useState(\"\");\r"},"react-hook-useCallback_153":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_154":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const handleInputChange = (event) =\r"},"react-hook-useCallback_155":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    setInputValue(event.target.value);\r"},"react-hook-useCallback_156":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  };\r"},"react-hook-useCallback_157":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_158":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const handleAddTodo = useCallback((text) =\r"},"react-hook-useCallback_159":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    const newTodo = { id: Date.now(), text };\r"},"react-hook-useCallback_160":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    setTodos((prevTodos) =\r"},"react-hook-useCallback_161":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  }, [todos]);  // 这里是问题所在，todos的依赖导致这个useCallback几乎失去了其作用\r"},"react-hook-useCallback_162":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_163":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  return (\r"},"react-hook-useCallback_164":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    <div"},"react-hook-useCallback_165":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <input value={inputValue} onChange={handleInputChange} /"},"react-hook-useCallback_166":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <button onClick={() =\r"},"react-hook-useCallback_167":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      <ul"},"react-hook-useCallback_168":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"        {todos.map(todo =\r"},"react-hook-useCallback_169":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"      </ul"},"react-hook-useCallback_170":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"    </div"},"react-hook-useCallback_171":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  );\r"},"react-hook-useCallback_172":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}\r"},"react-hook-useCallback_173":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_174":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_175":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"在上面的示例中，每当改变，都会重新创建，尽管我们使用了。这实际上并没有给我们带来预期的性能优化。正确的做法是利用的函数式更新，这样我们就可以去掉依赖：\r"},"react-hook-useCallback_176":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_177":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"jsx\r"},"react-hook-useCallback_178":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"const handleAddTodo = useCallback((text) =\r"},"react-hook-useCallback_179":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  const newTodo = { id: Date.now(), text };\r"},"react-hook-useCallback_180":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"  setTodos((prevTodos) =\r"},"react-hook-useCallback_181":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"}, []);  // 注意这里的空依赖数组\r"},"react-hook-useCallback_182":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_183":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_184":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"结语\r"},"react-hook-useCallback_185":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_186":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"的思想和如出一辙，因为和里已经提供了对照示例，所以本文只对进行解读分析，没有单独提供线上示例。如需验证缓存的效果，大家可以自己敲一敲示例代码来验证。\r"},"react-hook-useCallback_187":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_188":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_189":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"专栏资源\r"},"react-hook-useCallback_190":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_191":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"专栏博客地址：\r"},"react-hook-useCallback_192":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_193":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"专栏演示站：\r"},"react-hook-useCallback_194":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_195":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"专栏源码仓库：👉\r"},"react-hook-useCallback_196":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_197":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"交个朋友：👉\r"},"react-hook-useCallback_198":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_199":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"专栏文章列表：\r"},"react-hook-useCallback_200":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_201":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_202":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_203":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_204":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_205":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_206":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_207":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_208":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_209":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_210":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_211":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_212":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_213":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_214":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_215":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_216":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_217":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_218":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_219":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_220":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_221":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_222":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_223":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_224":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_225":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_226":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_227":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_228":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_229":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_230":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":"\r"},"react-hook-useCallback_231":{"title":"精读React hooks（八）：我们为什么需要useCallback","content":""},"react-hook-useMemo":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"精读React hooks（七）：用useMemo来减少性能开销","display":"\r"},"react-hook-useMemo_0":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_1":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"在前端框架的激烈竞争中，性能往往被视为评判一个框架好坏的关键指标。拥有卓越性能的框架可以为开发者在面对数据密集或高度交互的应用时，提供更加流畅、高效的开发体验。\r"},"react-hook-useMemo_2":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_3":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"为了更好地满足开发者对于细粒度性能控制的需求，React推出了这一Hook。这个工具为我们在函数组件内部提供了一个优雅的手段，允许我们针对复杂的计算进行精细化的优化，从而避免不必要的渲染重复。接下来的文章，我们将深入探讨的定义、使用方法以及如何在日常开发中最大化地发挥其潜力。\r"},"react-hook-useMemo_4":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_5":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"定义\r"},"react-hook-useMemo_6":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_7":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"是React框架中的一个重要Hook，它的核心目的是通过缓存计算结果，避免在组件渲染时进行不必要的重复计算，从而优化性能。这意味着只有当其依赖项发生变化时，才会重新计算这个值，否则它将重用之前的结果。\r"},"react-hook-useMemo_8":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_9":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"它的基本使用格式如下：\r"},"react-hook-useMemo_10":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_11":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_12":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"const cachedValue = useMemo(calculateValue, dependencies)\r"},"react-hook-useMemo_13":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_14":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_15":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"- ：这是一个用于计算我们想要缓存的值的函数。为了确保结果的稳定性和预测性，这个函数应该是一个纯函数。这意味着，它在相同的输入下总是返回相同的输出，并且没有任何副作用。\r"},"react-hook-useMemo_16":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"- ：这是一个数组，包含所依赖的变量或值。当数组中的任何值发生变化时，函数将被重新执行。\r"},"react-hook-useMemo_17":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_18":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"基础用法\r"},"react-hook-useMemo_19":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_20":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":" 接受两个参数：一个函数和一个依赖项数组。\r"},"react-hook-useMemo_21":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_22":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_23":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"const memoizedValue = useMemo(() =\r"},"react-hook-useMemo_24":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_25":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_26":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"在上面的例子中，是一个可能需要很长时间来计算的函数。我们只有当或改变时，才重新调用这个函数。否则，我们会使用之前缓存的值。\r"},"react-hook-useMemo_27":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_28":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"用一个例子来看useMemo的执行时机：\r"},"react-hook-useMemo_29":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_30":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_31":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"import React, { useMemo, useState } from \"react\";\r"},"react-hook-useMemo_32":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_33":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function filterUsers(users, searchTerm) {\r"},"react-hook-useMemo_34":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return users.filter((user) =\r"},"react-hook-useMemo_35":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_36":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_37":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function useMemoDemo() {\r"},"react-hook-useMemo_38":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [searchTerm, setSearchTerm] = useState(\"\");\r"},"react-hook-useMemo_39":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [isDark, setIsDark] = useState(false);\r"},"react-hook-useMemo_40":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_41":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const allUsers = useMemo(() =\r"},"react-hook-useMemo_42":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    let list = [];\r"},"react-hook-useMemo_43":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    for (let i = 1; i <= 500; i++) {\r"},"react-hook-useMemo_44":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      list.push({ id: i, name:  });\r"},"react-hook-useMemo_45":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    }\r"},"react-hook-useMemo_46":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return list;\r"},"react-hook-useMemo_47":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, []);\r"},"react-hook-useMemo_48":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_49":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const useMemoCurrentUsers = useMemo(() =\r"},"react-hook-useMemo_50":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    console.log('with useMemo')\r"},"react-hook-useMemo_51":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return filterUsers(allUsers, searchTerm);\r"},"react-hook-useMemo_52":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, [allUsers, searchTerm]);\r"},"react-hook-useMemo_53":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_54":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_55":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_56":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_57":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <input\r"},"react-hook-useMemo_58":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        value={searchTerm}\r"},"react-hook-useMemo_59":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        onChange={(e) =\r"},"react-hook-useMemo_60":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        placeholder=\"Search by name...\"\r"},"react-hook-useMemo_61":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      /"},"react-hook-useMemo_62":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_63":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_64":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <button onClick={() =\r"},"react-hook-useMemo_65":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        {isDark ? \"Dark mode\" : \"Light mode\"}\r"},"react-hook-useMemo_66":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      </button"},"react-hook-useMemo_67":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_68":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <div"},"react-hook-useMemo_69":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div"},"react-hook-useMemo_70":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <h2>With useMemo</h2"},"react-hook-useMemo_71":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <div style={{ background: isDark ? \"#000\" : \"\" }}"},"react-hook-useMemo_72":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            {useMemoCurrentUsers.map((user) =\r"},"react-hook-useMemo_73":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              <div key={user.id}"},"react-hook-useMemo_74":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"                {user.name}\r"},"react-hook-useMemo_75":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              </div"},"react-hook-useMemo_76":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            ))}\r"},"react-hook-useMemo_77":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          </div"},"react-hook-useMemo_78":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_79":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      </div"},"react-hook-useMemo_80":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  </div"},"react-hook-useMemo_81":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_82":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_83":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_84":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"export default useMemoDemo;\r"},"react-hook-useMemo_85":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_86":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_87":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"在这里简单的示例中，每次修改查询框的内容，都会触发的变化，进而触发重新计算；而点击切换背景色的按钮，因为的依赖项没有更新，所以不会触发重新计算，而是直接使用上一次计算的返回值。\r"},"react-hook-useMemo_88":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_89":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"是否使用的区别\r"},"react-hook-useMemo_90":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_91":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"使用  与否，究竟有何差异？很遗憾，得益于高效的现代 JavaScript 引擎和优秀的浏览器性能，大多数场景下，我们用肉眼几乎无法看出来区别。例如下面这个示例，你也可以到体验。\r"},"react-hook-useMemo_92":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_93":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_94":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"import React, { useMemo, useState } from \"react\";\r"},"react-hook-useMemo_95":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_96":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function filterUsers(users, searchTerm) {\r"},"react-hook-useMemo_97":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return users.filter((user) =\r"},"react-hook-useMemo_98":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_99":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_100":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function Comparison1() {\r"},"react-hook-useMemo_101":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [searchTerm, setSearchTerm] = useState(\"\");\r"},"react-hook-useMemo_102":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [isDark, setIsDark] = useState(false);\r"},"react-hook-useMemo_103":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_104":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const allUsers = useMemo(() =\r"},"react-hook-useMemo_105":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    let list = [];\r"},"react-hook-useMemo_106":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    for (let i = 1; i <= 500; i++) {\r"},"react-hook-useMemo_107":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      list.push({ id: i, name:  });\r"},"react-hook-useMemo_108":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    }\r"},"react-hook-useMemo_109":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return list;\r"},"react-hook-useMemo_110":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, []);\r"},"react-hook-useMemo_111":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_112":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const useMemoCurrentUsers = useMemo(() =\r"},"react-hook-useMemo_113":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    console.log('with useMemo')\r"},"react-hook-useMemo_114":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return filterUsers(allUsers, searchTerm);\r"},"react-hook-useMemo_115":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, [allUsers, searchTerm]);\r"},"react-hook-useMemo_116":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_117":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  console.log('without useMemo')\r"},"react-hook-useMemo_118":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const withoutUseMemoCurrentUsers = filterUsers(allUsers, searchTerm);\r"},"react-hook-useMemo_119":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_120":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_121":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_122":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <input\r"},"react-hook-useMemo_123":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        value={searchTerm}\r"},"react-hook-useMemo_124":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        onChange={(e) =\r"},"react-hook-useMemo_125":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        placeholder=\"Search by name...\"\r"},"react-hook-useMemo_126":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      /"},"react-hook-useMemo_127":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_128":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <button onClick={() =\r"},"react-hook-useMemo_129":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        {isDark ? \"Dark mode\" : \"Light mode\"}\r"},"react-hook-useMemo_130":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      </button"},"react-hook-useMemo_131":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_132":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <div"},"react-hook-useMemo_133":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div"},"react-hook-useMemo_134":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <h2>With useMemo</h2"},"react-hook-useMemo_135":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <div style={{ background: isDark ? \"#000\" : \"\" }}"},"react-hook-useMemo_136":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            {useMemoCurrentUsers.map((user) =\r"},"react-hook-useMemo_137":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              <div key={user.id}"},"react-hook-useMemo_138":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"                {user.name}\r"},"react-hook-useMemo_139":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              </div"},"react-hook-useMemo_140":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            ))}\r"},"react-hook-useMemo_141":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          </div"},"react-hook-useMemo_142":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_143":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div"},"react-hook-useMemo_144":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <h2>Without useMemo</h2"},"react-hook-useMemo_145":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            <div style={{ background: isDark ? \"#000\" : \"\" }}"},"react-hook-useMemo_146":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              {withoutUseMemoCurrentUsers.map((user) =\r"},"react-hook-useMemo_147":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"                <div key={user.id}"},"react-hook-useMemo_148":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"                  {user.name}\r"},"react-hook-useMemo_149":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"                </div"},"react-hook-useMemo_150":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"              ))}\r"},"react-hook-useMemo_151":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"            </div"},"react-hook-useMemo_152":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_153":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      </div"},"react-hook-useMemo_154":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </div"},"react-hook-useMemo_155":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_156":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_157":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_158":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"export default Comparison1;\r"},"react-hook-useMemo_159":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_160":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_161":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"这个示例实际效果是无论你修改查询框内容还是切换背景色，对照组的变化几乎是同步的。\r"},"react-hook-useMemo_162":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_163":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"既然无法带来视觉上的差异，我们为什么还要使用？因为的可以在更细粒度的层面优化我们的应用性能：\r"},"react-hook-useMemo_164":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_165":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"1. ：\r"},"react-hook-useMemo_166":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    \r"},"react-hook-useMemo_167":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    当我们面对涉及大量数据处理、循环或其他复杂逻辑的场景时，重复不必要的计算可能会导致浏览器的卡顿，从而影响用户体验。\r"},"react-hook-useMemo_168":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    \r"},"react-hook-useMemo_169":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"2. ：\r"},"react-hook-useMemo_170":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    \r"},"react-hook-useMemo_171":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    当我们谈论 React 性能时，经常考虑的不仅仅是计算的速度，但更重要的是避免不必要的渲染。如果某个子组件依赖于一个对象或数组，并且这个对象或数组在每次父组件渲染时都重新创建，即使实际的数据没有改变，那么子组件也会不必要地重新渲染。\r"},"react-hook-useMemo_172":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    \r"},"react-hook-useMemo_173":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    在这种情况下，可以帮助我们确保对象或数组的引用在数据不变时保持不变，从而避免子组件的不必要渲染。\r"},"react-hook-useMemo_174":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    \r"},"react-hook-useMemo_175":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_176":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"打开浏览器控制台，我们可以看到页面首次渲染时，和都有进行计算，但是点击切换背景的按钮时，没有重新计算，而是每次都重新计算的。这恰好印证了上面所说的“节省渲染开销”。\r"},"react-hook-useMemo_177":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_178":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_179":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_180":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"缓存组件\r"},"react-hook-useMemo_181":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_182":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"的作用不知局限于缓存数据，它还可以缓存组件。\r"},"react-hook-useMemo_183":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_184":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"如果你在渲染某个组件时有昂贵的计算，并且你想在某些依赖未改变时避免这些计算，那么也可以使用来缓存这个组件。用法如下：\r"},"react-hook-useMemo_185":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_186":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_187":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function ParentComponent(props) {\r"},"react-hook-useMemo_188":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [someData, setSomeData] = useState(initialData);\r"},"react-hook-useMemo_189":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_190":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const MemoizedExpensiveComponent = useMemo(() =\r"},"react-hook-useMemo_191":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return <ExpensiveComponent data={someData} />;\r"},"react-hook-useMemo_192":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, [someData]);\r"},"react-hook-useMemo_193":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_194":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_195":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_196":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {MemoizedExpensiveComponent}\r"},"react-hook-useMemo_197":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_198":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </div"},"react-hook-useMemo_199":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_200":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_201":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_202":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_203":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"如果上一节的示例，我们想把用户列表的组件缓存起来，可以这么做：\r"},"react-hook-useMemo_204":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_205":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_206":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function UserList({ allUsers, searchTerm }) {\r"},"react-hook-useMemo_207":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const filteredUsers = filterUsers(allUsers, searchTerm);\r"},"react-hook-useMemo_208":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_209":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <"},"react-hook-useMemo_210":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {useMemoCurrentUsers.map((user) =\r"},"react-hook-useMemo_211":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div key={user.id}"},"react-hook-useMemo_212":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          {user.name}\r"},"react-hook-useMemo_213":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_214":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      ))}\r"},"react-hook-useMemo_215":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </"},"react-hook-useMemo_216":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_217":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_218":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_219":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function Comparison1() {\r"},"react-hook-useMemo_220":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  // ……\r"},"react-hook-useMemo_221":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_222":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const MemoizedUserList = useMemo(() =\r"},"react-hook-useMemo_223":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return <UserList allUsers={allUsers} searchTerm={searchTerm} />;\r"},"react-hook-useMemo_224":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, [allUsers, searchTerm]);\r"},"react-hook-useMemo_225":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_226":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_227":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_228":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_229":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <h2>With useMemo</h2"},"react-hook-useMemo_230":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div style={{ background: isDark ? \"#000\" : \"\" }}"},"react-hook-useMemo_231":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          {MemoizedUserList}\r"},"react-hook-useMemo_232":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_233":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_234":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </div"},"react-hook-useMemo_235":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_236":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_237":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_238":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"export default Comparison1;\r"},"react-hook-useMemo_239":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_240":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_241":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"现在，整个组件被缓存，只有当、或发生变化时，才会重新计算。\r"},"react-hook-useMemo_242":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_243":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"除了能够缓存组件，React 还提供了这个高阶组件来完成相似的工作。\r"},"react-hook-useMemo_244":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_245":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_246":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"const UserList = memo(function UserList({ allUsers, searchTerm }) {\r"},"react-hook-useMemo_247":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const filteredUsers = filterUsers(allUsers, searchTerm);\r"},"react-hook-useMemo_248":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_249":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <"},"react-hook-useMemo_250":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {filteredUsers.map((user) =\r"},"react-hook-useMemo_251":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div key={user.id}"},"react-hook-useMemo_252":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          {user.name}\r"},"react-hook-useMemo_253":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_254":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      ))}\r"},"react-hook-useMemo_255":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </"},"react-hook-useMemo_256":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_257":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"});\r"},"react-hook-useMemo_258":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_259":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function Comparison1() {\r"},"react-hook-useMemo_260":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  // ……\r"},"react-hook-useMemo_261":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_262":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_263":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_264":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_265":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <h2>With useMemo</h2"},"react-hook-useMemo_266":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        <div style={{ background: isDark ? \"#000\" : \"\" }}"},"react-hook-useMemo_267":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"          <UserList allUsers={allUsers} searchTerm={searchTerm} /"},"react-hook-useMemo_268":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"        </div"},"react-hook-useMemo_269":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      {//}\r"},"react-hook-useMemo_270":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </div"},"react-hook-useMemo_271":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_272":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_273":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_274":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"export default Comparison1;\r"},"react-hook-useMemo_275":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_276":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_277":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"使用高阶组件包裹后，只有当发生变化时重新渲染。这种方式和上面使用缓存组件的作用是一样的，但代码可读性更强，也是React官方更推荐的方式。\r"},"react-hook-useMemo_278":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_279":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"考虑到和的特点，我们可以这么说：\r"},"react-hook-useMemo_280":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_281":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"- 当你想避免因为而产生的不必要的时，使用\r"},"react-hook-useMemo_282":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"- 当你想避免因为而产生的不必要的时，使用。\r"},"react-hook-useMemo_283":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_284":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"有无使用的效果对比也可以在体验。\r"},"react-hook-useMemo_285":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_286":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"缓存函数\r"},"react-hook-useMemo_287":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_288":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"除了缓存数据和组件，还能够缓存函数。你只需要在里一个函数即可，如下：\r"},"react-hook-useMemo_289":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_290":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_291":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"const handleUserClick = useMemo(() =\r"},"react-hook-useMemo_292":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (userName) =\r"},"react-hook-useMemo_293":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    alert();\r"},"react-hook-useMemo_294":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  };\r"},"react-hook-useMemo_295":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}, []);\r"},"react-hook-useMemo_296":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_297":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_298":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"不过，React有专门缓存函数的hook——useCallback，也是下一篇文章要精读的hook，所以这里就不展开说了。\r"},"react-hook-useMemo_299":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_300":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"反例：过渡优化\r"},"react-hook-useMemo_301":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_302":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"是用于优化的工具，但有时，如果过度使用它们，可能会导致性能更差或代码更加复杂。下面看一个过度优化的例子：\r"},"react-hook-useMemo_303":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_304":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"想象这个场景，我们有一个简单的组件，只显示一个数字和一个按钮，点击按钮会增加这个数字。\r"},"react-hook-useMemo_305":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_306":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"jsx\r"},"react-hook-useMemo_307":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"import React, { useState, useMemo } from 'react';\r"},"react-hook-useMemo_308":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_309":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"function Counter() {\r"},"react-hook-useMemo_310":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const [count, setCount] = useState(0);\r"},"react-hook-useMemo_311":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_312":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  const handleIncrease = useMemo(() =\r"},"react-hook-useMemo_313":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    return () =\r"},"react-hook-useMemo_314":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      setCount(count + 1);\r"},"react-hook-useMemo_315":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    };\r"},"react-hook-useMemo_316":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  }, [count]);\r"},"react-hook-useMemo_317":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_318":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  return (\r"},"react-hook-useMemo_319":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    <div"},"react-hook-useMemo_320":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <div>{count}</div"},"react-hook-useMemo_321":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"      <button onClick={handleIncrease}>Increase</button"},"react-hook-useMemo_322":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"    </div"},"react-hook-useMemo_323":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"  );\r"},"react-hook-useMemo_324":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"}\r"},"react-hook-useMemo_325":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_326":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"export default Counter;\r"},"react-hook-useMemo_327":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_328":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_329":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"这里的问题是：\r"},"react-hook-useMemo_330":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_331":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"1. ：原始的组件是简单的，并且性能表现得很好。引入只是增加了代码的复杂性，而并没有带来任何实际的性能提升。\r"},"react-hook-useMemo_332":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"2. ：也有开销。在这种情况下，任何由带来的小优势都被其自身的开销抵消了，因为每次变化，都会重新计算。\r"},"react-hook-useMemo_333":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"3. ：对于后来查看代码的其他开发者来说，看到可能会引起困惑。他们可能会花费时间思考为什么这里需要优化，尽管实际上并不需要。\r"},"react-hook-useMemo_334":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_335":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"综上所述，不是所有的组件都需要优化，特别是当它们已经足够简单和高效的时候。过度使用优化工具可能会导致更差的性能和更低的代码可读性。\r"},"react-hook-useMemo_336":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_337":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"结语\r"},"react-hook-useMemo_338":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_339":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"使用的关键是权衡。其目的是避免不必要的计算，但也要注意不要滥用，因为维持这些缓存值也是有开销的。最佳的做法是先写出清晰和可读的代码，然后在性能瓶颈出现时，再考虑优化。\r"},"react-hook-useMemo_340":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_341":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"本文对照示例均可在体验，TypeScript版源码在查看\r"},"react-hook-useMemo_342":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_343":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_344":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"专栏资源\r"},"react-hook-useMemo_345":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_346":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"专栏博客地址：\r"},"react-hook-useMemo_347":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_348":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"专栏演示站：\r"},"react-hook-useMemo_349":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_350":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"专栏源码仓库：👉\r"},"react-hook-useMemo_351":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_352":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"交个朋友：👉\r"},"react-hook-useMemo_353":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_354":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"专栏文章列表：\r"},"react-hook-useMemo_355":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_356":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_357":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_358":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_359":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_360":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_361":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_362":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_363":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_364":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_365":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_366":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_367":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_368":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_369":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_370":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_371":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_372":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_373":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_374":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_375":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_376":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_377":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_378":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_379":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_380":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_381":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_382":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_383":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_384":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_385":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":"\r"},"react-hook-useMemo_386":{"title":"精读React hooks（七）：用useMemo来减少性能开销","content":""},"react-hook-useLayoutEffect":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"精读React hooks（六）：useLayoutEffect解决了什么问题？","display":"\r"},"react-hook-useLayoutEffect_0":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_1":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"如果你会用（），那么你一定也会用。因为它们的用法一模一样。\r"},"react-hook-useLayoutEffect_2":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_3":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"和的区别仅有一个：\r"},"react-hook-useLayoutEffect_4":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_5":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 执行时机是在React的渲染和提交阶段之后；\r"},"react-hook-useLayoutEffect_6":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 执行时机是在React的提交阶段之后，但在浏览器实际绘制屏幕之前。\r"},"react-hook-useLayoutEffect_7":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_8":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"useEffect vs useLayoutEffect\r"},"react-hook-useLayoutEffect_9":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_10":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"我们通过一个例子来看看阻塞和非阻塞对用户来说有什么区别。\r"},"react-hook-useLayoutEffect_11":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_12":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"jsx\r"},"react-hook-useLayoutEffect_13":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"import React, { useEffect, useLayoutEffect, useState, useRef } from 'react';\r"},"react-hook-useLayoutEffect_14":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_15":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"function BoxComparison() {\r"},"react-hook-useLayoutEffect_16":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const [heightEffect, setHeightEffect] = useState(0);\r"},"react-hook-useLayoutEffect_17":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const [heightLayoutEffect, setHeightLayoutEffect] = useState(0);\r"},"react-hook-useLayoutEffect_18":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const refEffect = useRef(null);\r"},"react-hook-useLayoutEffect_19":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const refLayoutEffect = useRef(null);\r"},"react-hook-useLayoutEffect_20":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_21":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  useEffect(() =\r"},"react-hook-useLayoutEffect_22":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    if (refEffect.current) {\r"},"react-hook-useLayoutEffect_23":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      setHeightEffect(refEffect.current.offsetWidth);\r"},"react-hook-useLayoutEffect_24":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    }\r"},"react-hook-useLayoutEffect_25":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  }, []);\r"},"react-hook-useLayoutEffect_26":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_27":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  useLayoutEffect(() =\r"},"react-hook-useLayoutEffect_28":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    if (refLayoutEffect.current) {\r"},"react-hook-useLayoutEffect_29":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      setHeightLayoutEffect(refLayoutEffect.current.offsetWidth);\r"},"react-hook-useLayoutEffect_30":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    }\r"},"react-hook-useLayoutEffect_31":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  }, []);\r"},"react-hook-useLayoutEffect_32":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_33":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  return (\r"},"react-hook-useLayoutEffect_34":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    <div"},"react-hook-useLayoutEffect_35":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <div"},"react-hook-useLayoutEffect_36":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <h2>使用 useEffect</h2"},"react-hook-useLayoutEffect_37":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <div ref={refEffect} style={{ width: '200px', height: '50px', background: 'lightgray' }}>这是一个方块</div"},"react-hook-useLayoutEffect_38":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <div style={{ width: '100px', height: , background: 'red', marginTop: '10px' }}>红色方块</div"},"react-hook-useLayoutEffect_39":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </div"},"react-hook-useLayoutEffect_40":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      \r"},"react-hook-useLayoutEffect_41":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <div style={{ marginTop: '30px' }}"},"react-hook-useLayoutEffect_42":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <h2>使用 useLayoutEffect</h2"},"react-hook-useLayoutEffect_43":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <div ref={refLayoutEffect} style={{ width: '200px', height: '50px', background: 'lightgray' }}>这是一个方块</div"},"react-hook-useLayoutEffect_44":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <div style={{ width: '100px', height: , background: 'blue', marginTop: '10px' }}>蓝色方块</div"},"react-hook-useLayoutEffect_45":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </div"},"react-hook-useLayoutEffect_46":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    </div"},"react-hook-useLayoutEffect_47":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  );\r"},"react-hook-useLayoutEffect_48":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"}\r"},"react-hook-useLayoutEffect_49":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_50":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"export default BoxComparison;\r"},"react-hook-useLayoutEffect_51":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_52":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_53":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"这个例子写了两个方块，分别使用和来更新高度，代码实际效果在查看。\r"},"react-hook-useLayoutEffect_54":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_55":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"当你在性能较差的设备上肉眼可以明显看到区别：\r"},"react-hook-useLayoutEffect_56":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_57":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 的方块会闪一下\r"},"react-hook-useLayoutEffect_58":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 的方块则不会闪\r"},"react-hook-useLayoutEffect_59":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_60":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"如果你的电脑性能比较好，可以尝试多次刷新，也有一定几率看到的闪动。\r"},"react-hook-useLayoutEffect_61":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_62":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"我们应该这样描述二者的区别：\r"},"react-hook-useLayoutEffect_63":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_64":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- : 执行时机是在React的渲染和提交阶段之后。这意味着当任何相关DOM更改被应用并且组件已被重新渲染后，里的代码会执行。但它是异步的，所以可能会在浏览器的下一个绘制周期之后才执行。\r"},"react-hook-useLayoutEffect_65":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- : 执行时机是在React的提交阶段之后，但在浏览器实际绘制屏幕之前。这使得你可以同步地读取或更改DOM，然后让浏览器在下一次绘制时立即体现这些更改，从而避免不必要的闪烁或布局跳动。\r"},"react-hook-useLayoutEffect_66":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_67":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"useLayoutEffect的作用\r"},"react-hook-useLayoutEffect_68":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_69":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"我们已经清楚了的特性了，那么可以猜想，是作用于这样的场景：需要在浏览器绘制前获取 DOM 元素的大小或位置，或者在浏览器绘制前修改 DOM。\r"},"react-hook-useLayoutEffect_70":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_71":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"这里有一个非常典型的场景——tooltip 组件。我们就来写一个 tooltip 组件，应用来自适应设置 tooltip 位置。\r"},"react-hook-useLayoutEffect_72":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_73":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"我们的需求是：鼠标移入一个按钮，能够判断 tooltip 展示区域，如果按钮上方空间足够，则显示在上方，如果按钮上方空间不够，则自适应显示在按钮下方。\r"},"react-hook-useLayoutEffect_74":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_75":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"为了保证没有页面抖动，我们要使用来更新显示的位置，示例代码如下：\r"},"react-hook-useLayoutEffect_76":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_77":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"jsx\r"},"react-hook-useLayoutEffect_78":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"import React, { useLayoutEffect, useRef, useState } from \"react\";\r"},"react-hook-useLayoutEffect_79":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"import { createPortal } from \"react-dom\";\r"},"react-hook-useLayoutEffect_80":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_81":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"export default function HoverTooltip() {\r"},"react-hook-useLayoutEffect_82":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const containerRef = useRef(null);\r"},"react-hook-useLayoutEffect_83":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_84":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  return (\r"},"react-hook-useLayoutEffect_85":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    <div\r"},"react-hook-useLayoutEffect_86":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      ref={containerRef}\r"},"react-hook-useLayoutEffect_87":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      className=\"p-8 bg-gray-100 w-full rounded-xl mt-5 shadow-lg m-4 space-y-4 overflow-hidden\"\r"},"react-hook-useLayoutEffect_88":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    "},"react-hook-useLayoutEffect_89":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <ButtonWithTooltip\r"},"react-hook-useLayoutEffect_90":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        containerRef={containerRef}\r"},"react-hook-useLayoutEffect_91":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        tooltipContent=\"This tooltip does not fit above the button. This is why it's displayed below instead!\"\r"},"react-hook-useLayoutEffect_92":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      "},"react-hook-useLayoutEffect_93":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        Hover over me (tooltip above)\r"},"react-hook-useLayoutEffect_94":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </ButtonWithTooltip"},"react-hook-useLayoutEffect_95":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <ButtonWithTooltip\r"},"react-hook-useLayoutEffect_96":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        containerRef={containerRef}\r"},"react-hook-useLayoutEffect_97":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        tooltipContent=\"This tooltip fits above the button\"\r"},"react-hook-useLayoutEffect_98":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      "},"react-hook-useLayoutEffect_99":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        Hover over me (tooltip below)\r"},"react-hook-useLayoutEffect_100":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </ButtonWithTooltip"},"react-hook-useLayoutEffect_101":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <ButtonWithTooltip\r"},"react-hook-useLayoutEffect_102":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        containerRef={containerRef}\r"},"react-hook-useLayoutEffect_103":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        tooltipContent=\"This tooltip fits above the button\"\r"},"react-hook-useLayoutEffect_104":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      "},"react-hook-useLayoutEffect_105":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        Hover over me (tooltip below)\r"},"react-hook-useLayoutEffect_106":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </ButtonWithTooltip"},"react-hook-useLayoutEffect_107":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    </div"},"react-hook-useLayoutEffect_108":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  );\r"},"react-hook-useLayoutEffect_109":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"}\r"},"react-hook-useLayoutEffect_110":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_111":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"const ButtonWithTooltip = ({ tooltipContent, containerRef, children }) =\r"},"react-hook-useLayoutEffect_112":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const [targetRect, setTargetRect] = useState(null);\r"},"react-hook-useLayoutEffect_113":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const [containerRect, setContainerRect] = useState(null);\r"},"react-hook-useLayoutEffect_114":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const buttonRef = useRef(null);\r"},"react-hook-useLayoutEffect_115":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_116":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  return (\r"},"react-hook-useLayoutEffect_117":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    <div className=\"relative\""},"react-hook-useLayoutEffect_118":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      <button\r"},"react-hook-useLayoutEffect_119":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        ref={buttonRef}\r"},"react-hook-useLayoutEffect_120":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        className=\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600 active:bg-blue-700 focus:outline-none transition\"\r"},"react-hook-useLayoutEffect_121":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        onMouseEnter={() =\r"},"react-hook-useLayoutEffect_122":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"          buttonRef.current &&\r"},"react-hook-useLayoutEffect_123":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"            setTargetRect(buttonRef.current.getBoundingClientRect());\r"},"react-hook-useLayoutEffect_124":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"          containerRef.current &&\r"},"react-hook-useLayoutEffect_125":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"            setContainerRect(containerRef.current.getBoundingClientRect());\r"},"react-hook-useLayoutEffect_126":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        }}\r"},"react-hook-useLayoutEffect_127":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        onMouseLeave={() =\r"},"react-hook-useLayoutEffect_128":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      "},"react-hook-useLayoutEffect_129":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        {children}\r"},"react-hook-useLayoutEffect_130":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      </button"},"react-hook-useLayoutEffect_131":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      {targetRect && containerRect && (\r"},"react-hook-useLayoutEffect_132":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        <Tooltip targetRect={targetRect} containerRect={containerRect}"},"react-hook-useLayoutEffect_133":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"          {tooltipContent}\r"},"react-hook-useLayoutEffect_134":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        </Tooltip"},"react-hook-useLayoutEffect_135":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      )}\r"},"react-hook-useLayoutEffect_136":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    </div"},"react-hook-useLayoutEffect_137":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  );\r"},"react-hook-useLayoutEffect_138":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"};\r"},"react-hook-useLayoutEffect_139":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_140":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"const Tooltip = ({ children, targetRect, containerRect }) =\r"},"react-hook-useLayoutEffect_141":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const ref = useRef(null);\r"},"react-hook-useLayoutEffect_142":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  const [tooltipHeight, setTooltipHeight] = useState(0);\r"},"react-hook-useLayoutEffect_143":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_144":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  useLayoutEffect(() =\r"},"react-hook-useLayoutEffect_145":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    if (ref.current) {\r"},"react-hook-useLayoutEffect_146":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      const { height } = ref.current.getBoundingClientRect();\r"},"react-hook-useLayoutEffect_147":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      setTooltipHeight(height); // 设置高度\r"},"react-hook-useLayoutEffect_148":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    }\r"},"react-hook-useLayoutEffect_149":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  }, [children]);\r"},"react-hook-useLayoutEffect_150":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_151":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  let tooltipX = targetRect.left;\r"},"react-hook-useLayoutEffect_152":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  let tooltipY =\r"},"react-hook-useLayoutEffect_153":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    targetRect.top - containerRect.top - tooltipHeight < 0\r"},"react-hook-useLayoutEffect_154":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      ? targetRect.bottom\r"},"react-hook-useLayoutEffect_155":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      : targetRect.top - tooltipHeight; // 计算位置\r"},"react-hook-useLayoutEffect_156":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_157":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  return createPortal(\r"},"react-hook-useLayoutEffect_158":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    <div\r"},"react-hook-useLayoutEffect_159":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      ref={ref}\r"},"react-hook-useLayoutEffect_160":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      className=\"absolute bg-gray-700 text-white py-1 px-2 rounded shadow-md\"\r"},"react-hook-useLayoutEffect_161":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      style={{\r"},"react-hook-useLayoutEffect_162":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        left: ,\r"},"react-hook-useLayoutEffect_163":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"        top: ,\r"},"react-hook-useLayoutEffect_164":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      }}\r"},"react-hook-useLayoutEffect_165":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    "},"react-hook-useLayoutEffect_166":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"      {children}\r"},"react-hook-useLayoutEffect_167":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    </div>,\r"},"react-hook-useLayoutEffect_168":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"    document.body\r"},"react-hook-useLayoutEffect_169":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"  );\r"},"react-hook-useLayoutEffect_170":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"};\r"},"react-hook-useLayoutEffect_171":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_172":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_173":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"这里示例中，我们写了三个按钮，每次鼠标移入按钮的时候，计算按钮到父级上沿的空间是否可以容纳一个 tooltip，如果足够，tooltip 就在按钮上方展示，如果不够，则在按钮下方展示。实际效果如图：\r"},"react-hook-useLayoutEffect_174":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_175":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_176":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_177":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"你也可以试一试。\r"},"react-hook-useLayoutEffect_178":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_179":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"总结\r"},"react-hook-useLayoutEffect_180":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_181":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"最后，我们再明确一下和分别在何时使用、的使用注意事项。\r"},"react-hook-useLayoutEffect_182":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_183":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_184":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_185":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：例如，数据获取、设置订阅、手动更改浏览器的URL等。\r"},"react-hook-useLayoutEffect_186":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：如果你不关心可能的微小布局跳动或闪烁，那么就足够了。\r"},"react-hook-useLayoutEffect_187":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：通常对性能影响较小，因为它不会阻塞浏览器渲染。\r"},"react-hook-useLayoutEffect_188":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_189":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"何时使用\r"},"react-hook-useLayoutEffect_190":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_191":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：例如，你需要读取元素的大小或位置并在渲染前进行调整。\r"},"react-hook-useLayoutEffect_192":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：在某些情况下，异步的可能会导致可见的布局跳动或闪烁。例如，动画的启动或某些可见的快速DOM更改。\r"},"react-hook-useLayoutEffect_193":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- ：如果你正在将旧的类组件迁移到功能组件，并需要模拟 、和的同步行为。\r"},"react-hook-useLayoutEffect_194":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_195":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"使用注意事项\r"},"react-hook-useLayoutEffect_196":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_197":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 避免过度使用，因为它是同步的，可能会影响应用的性能。只有当你确实需要同步的DOM操作时才使用它。\r"},"react-hook-useLayoutEffect_198":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"- 如果代码在服务器端渲染（SSR）中出现问题，考虑回退到。在服务器端渲染时不会运行，可能会引发警告或错误。\r"},"react-hook-useLayoutEffect_199":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_200":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_201":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"专栏资源\r"},"react-hook-useLayoutEffect_202":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_203":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"专栏博客地址：\r"},"react-hook-useLayoutEffect_204":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_205":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"专栏演示站：\r"},"react-hook-useLayoutEffect_206":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_207":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"专栏源码仓库：👉\r"},"react-hook-useLayoutEffect_208":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_209":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"交个朋友：👉\r"},"react-hook-useLayoutEffect_210":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_211":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"专栏文章列表：\r"},"react-hook-useLayoutEffect_212":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_213":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_214":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_215":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_216":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_217":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_218":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_219":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_220":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_221":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_222":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_223":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_224":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_225":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_226":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_227":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_228":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_229":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_230":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_231":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_232":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_233":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_234":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_235":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_236":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_237":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_238":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_239":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_240":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_241":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_242":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":"\r"},"react-hook-useLayoutEffect_243":{"title":"精读React hooks（六）：useLayoutEffect解决了什么问题？","content":""},"react-hook-useEffect":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"精读React hooks（五）：useEffect使用细节知多少？","display":"\r"},"react-hook-useEffect_0":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_1":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"概念解释\r"},"react-hook-useEffect_2":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_3":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"当我们谈论 React，我们通常在讨论纯函数组件，这意味着它们没有副作用。但在实际应用中，我们通常需要执行有副作用的操作，如数据获取、手动更改 DOM、设置订阅等。就是为此设计的。\r"},"react-hook-useEffect_4":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_5":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect的定义如下：\r"},"react-hook-useEffect_6":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_7":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_8":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(setup, dependencies?)\r"},"react-hook-useEffect_9":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_10":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_11":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"接受两个参数：\r"},"react-hook-useEffect_12":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_13":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"1. ：这是包含我们的 Effect 逻辑的函数。setup 函数里还可以选择返回一个函数，函数会在组件卸载的时候执行。\r"},"react-hook-useEffect_14":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"2. ：这是 setup 代码内部引用的所有响应式值的列表。响应式值包括 props、state 以及直接在组件主体中声明的所有变量和函数。依赖数组可以不传递、传空数组和非空数组。\r"},"react-hook-useEffect_15":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_16":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"用法详解\r"},"react-hook-useEffect_17":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_18":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"基础使用\r"},"react-hook-useEffect_19":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_20":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"最简单的用法，在函数组件中执行副作用（例如：数据获取、手动修改 DOM、订阅事件等）。\r"},"react-hook-useEffect_21":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_22":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_23":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"import React, { useState, useEffect } from 'react';\r"},"react-hook-useEffect_24":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_25":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"function Example() {\r"},"react-hook-useEffect_26":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  const [count, setCount] = useState(0);\r"},"react-hook-useEffect_27":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_28":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  useEffect(() =\r"},"react-hook-useEffect_29":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    document.title = ;\r"},"react-hook-useEffect_30":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  });\r"},"react-hook-useEffect_31":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_32":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  return (\r"},"react-hook-useEffect_33":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    <div"},"react-hook-useEffect_34":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      <p>点击了 {count} 次</p"},"react-hook-useEffect_35":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      <button onClick={() =\r"},"react-hook-useEffect_36":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    </div"},"react-hook-useEffect_37":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  );\r"},"react-hook-useEffect_38":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}\r"},"react-hook-useEffect_39":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_40":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_41":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"不同的依赖数组的区别\r"},"react-hook-useEffect_42":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_43":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"现在升级上面这个示例，来看看不同依赖数组（optional dependencies）有什么区别\r"},"react-hook-useEffect_44":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_45":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_46":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"import React, { useState, useEffect } from 'react';\r"},"react-hook-useEffect_47":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_48":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"function Example() {\r"},"react-hook-useEffect_49":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\tconst [leftCount, setLeftCount] = useState(0);\r"},"react-hook-useEffect_50":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const [rightCount, setRightCount] = useState(0);\r"},"react-hook-useEffect_51":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_52":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    useEffect(() =\r"},"react-hook-useEffect_53":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      /\r"},"react-hook-useEffect_54":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * This useEffect will be executed when:\r"},"react-hook-useEffect_55":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 1、the component is mounted and unmounted.\r"},"react-hook-useEffect_56":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 2、click left button.\r"},"react-hook-useEffect_57":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 3、click right button.\r"},"react-hook-useEffect_58":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       */\r"},"react-hook-useEffect_59":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      console.log();\r"},"react-hook-useEffect_60":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      document.title = ;\r"},"react-hook-useEffect_61":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    });\r"},"react-hook-useEffect_62":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_63":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\tuseEffect(() =\r"},"react-hook-useEffect_64":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      /\r"},"react-hook-useEffect_65":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * This useEffect will be executed when:\r"},"react-hook-useEffect_66":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 1、the component is mounted and unmounted.\r"},"react-hook-useEffect_67":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 2、click right button.\r"},"react-hook-useEffect_68":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       */\r"},"react-hook-useEffect_69":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      console.log();\r"},"react-hook-useEffect_70":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    }, [rightCount]);\r"},"react-hook-useEffect_71":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  \r"},"react-hook-useEffect_72":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    useEffect(() =\r"},"react-hook-useEffect_73":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      /\r"},"react-hook-useEffect_74":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * This useEffect will be executed when:\r"},"react-hook-useEffect_75":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       * 1、the component is mounted and unmounted.\r"},"react-hook-useEffect_76":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"       */\r"},"react-hook-useEffect_77":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      console.log();\r"},"react-hook-useEffect_78":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    }, []);\r"},"react-hook-useEffect_79":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_80":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return (\r"},"react-hook-useEffect_81":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        <div className=\"flex\""},"react-hook-useEffect_82":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\t\t\t\t\t<div"},"react-hook-useEffect_83":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"              <p>左按钮点击了 {leftCount} 次</p"},"react-hook-useEffect_84":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"              <button onClick={() =\r"},"react-hook-useEffect_85":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\t\t\t\t\t</div"},"react-hook-useEffect_86":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\t\t\t\t\t<div"},"react-hook-useEffect_87":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"              <p>右按钮点击了 {rightCount} 次</p"},"react-hook-useEffect_88":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"              <button onClick={() =\r"},"react-hook-useEffect_89":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\t\t\t\t\t\t</div"},"react-hook-useEffect_90":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        </div"},"react-hook-useEffect_91":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    );\r"},"react-hook-useEffect_92":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}\r"},"react-hook-useEffect_93":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_94":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_95":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"示例代码 TypeScript 版已发布到我的，演示Demo已发布到\r"},"react-hook-useEffect_96":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_97":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"这个示例中，我们写了3个，添加了不同的依赖数组，它们分别会有这样的表现：\r"},"react-hook-useEffect_98":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_99":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"- 第一个没有添加依赖数组，它的触发时机有：\r"},"react-hook-useEffect_100":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    - 组件挂载、卸载的时候\r"},"react-hook-useEffect_101":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    - 页面每一次的时候，即和更新的时候，也是左按钮和右按钮点击的时候\r"},"react-hook-useEffect_102":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"- 第二个依赖数组添加了，它的触发时机有：\r"},"react-hook-useEffect_103":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    - 组件挂载、卸载的时候\r"},"react-hook-useEffect_104":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    - 触发的re-render的时候，即更新的时候，也是右按钮点击的时候\r"},"react-hook-useEffect_105":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"- 第三个useEffect依赖数组说空的，它的触发时机有：\r"},"react-hook-useEffect_106":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    - 组件挂载、卸载的时候\r"},"react-hook-useEffect_107":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_108":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"综上，我们只应该在必要的时候给添加依赖项，这样可以避免一些不必要的重新渲染。\r"},"react-hook-useEffect_109":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_110":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"这个示例也说明了，在单个组件中允许使用多个，我们可以按照不同的关注点将副作用逻辑分开。\r"},"react-hook-useEffect_111":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_112":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"清除函数的作用\r"},"react-hook-useEffect_113":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_114":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"开篇我们还提到一个函数，cleanup函数只在组件卸载时执行，它的用法如下：\r"},"react-hook-useEffect_115":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_116":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_117":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_118":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    ……\r"},"react-hook-useEffect_119":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_120":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_121":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        // 组件卸载会执行这里面的代码\r"},"react-hook-useEffect_122":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_123":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}, []);\r"},"react-hook-useEffect_124":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_125":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_126":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"：清除定时器\r"},"react-hook-useEffect_127":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_128":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"如果你在中设置了一个定时器（如或），在组件卸载前，你应该清除它，以防止它在组件不在 DOM 中时仍然执行。\r"},"react-hook-useEffect_129":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_130":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_131":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_132":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const timer = setInterval(() =\r"},"react-hook-useEffect_133":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        console.log('console once per second.');\r"},"react-hook-useEffect_134":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    }, 1000);\r"},"react-hook-useEffect_135":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    \r"},"react-hook-useEffect_136":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_137":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        clearInterval(timer);\r"},"react-hook-useEffect_138":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_139":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}, []);\r"},"react-hook-useEffect_140":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_141":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_142":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"：事件监听器\r"},"react-hook-useEffect_143":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_144":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"为全局对象（如或）或特定 DOM 元素添加的事件监听器应当在组件卸载或不再需要它们时被移除。\r"},"react-hook-useEffect_145":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_146":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_147":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_148":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const handleResize = () =\r"},"react-hook-useEffect_149":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        console.log(\"Window resized!\");\r"},"react-hook-useEffect_150":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_151":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_152":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    window.addEventListener('resize', handleResize);\r"},"react-hook-useEffect_153":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    \r"},"react-hook-useEffect_154":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_155":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        window.removeEventListener('resize', handleResize);\r"},"react-hook-useEffect_156":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_157":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}, []);\r"},"react-hook-useEffect_158":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_159":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_160":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"：WebSockets聊天室\r"},"react-hook-useEffect_161":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_162":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"当使用 WebSockets 或其他实时通信技术时，你可能会在组件加载时建立一个连接，而在组件卸载时需要断开这个连接。\r"},"react-hook-useEffect_163":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_164":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_165":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_166":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const socket = new WebSocket('ws://weijunext.com/socket');\r"},"react-hook-useEffect_167":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_168":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    socket.onmessage = (event) =\r"},"react-hook-useEffect_169":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        console.log(event.data);\r"},"react-hook-useEffect_170":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_171":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    \r"},"react-hook-useEffect_172":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_173":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        socket.close();\r"},"react-hook-useEffect_174":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_175":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}, []);\r"},"react-hook-useEffect_176":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_177":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_178":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"：请求的取消\r"},"react-hook-useEffect_179":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_180":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"对于可能在组件卸载后才完成的异步请求（如使用 Axios 发起的 HTTP 请求），你应该在组件卸载前取消它们，以防止设置已卸载组件的状态。\r"},"react-hook-useEffect_181":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_182":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_183":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_184":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const source = axios.CancelToken.source();\r"},"react-hook-useEffect_185":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_186":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    axios.get('/api/some-endpoint', { cancelToken: source.token })\r"},"react-hook-useEffect_187":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        .then(response =\r"},"react-hook-useEffect_188":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            console.log(response.data);\r"},"react-hook-useEffect_189":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        })\r"},"react-hook-useEffect_190":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        .catch(error =\r"},"react-hook-useEffect_191":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            if (axios.isCancel(error)) {\r"},"react-hook-useEffect_192":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"                console.log('Request cancelled');\r"},"react-hook-useEffect_193":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            } else {\r"},"react-hook-useEffect_194":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"                console.error(error);\r"},"react-hook-useEffect_195":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            }\r"},"react-hook-useEffect_196":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        });\r"},"react-hook-useEffect_197":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    \r"},"react-hook-useEffect_198":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_199":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        source.cancel('Component unmounted');\r"},"react-hook-useEffect_200":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_201":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}, []);\r"},"react-hook-useEffect_202":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_203":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_204":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"：DOM 直接操作和第三方 DOM 库\r"},"react-hook-useEffect_205":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_206":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"如果使用了直接操作 DOM 的方法或使用了如 D3、animation 这样的第三方库来操作 DOM，你可能需要在组件卸载时清理或还原某些操作。\r"},"react-hook-useEffect_207":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_208":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_209":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"useEffect(() =\r"},"react-hook-useEffect_210":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const animation = new FadeInAnimation(ref.current);\r"},"react-hook-useEffect_211":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    animation.start(1000);\r"},"react-hook-useEffect_212":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return () =\r"},"react-hook-useEffect_213":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"      animation.stop();\r"},"react-hook-useEffect_214":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    };\r"},"react-hook-useEffect_215":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"  }, []);\r"},"react-hook-useEffect_216":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_217":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_218":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"跳过初始渲染\r"},"react-hook-useEffect_219":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_220":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"在某些情况下，当组件首次渲染时，我们不希望立即执行某些操作。这些操作可能包括发送网络请求、触发某些动画或其他任务。而是只有在某个值或依赖项发生变化后，我们才希望执行这些任务。\r"},"react-hook-useEffect_221":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_222":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"假设我们有一个状态，我们希望当值发生变化时显示一个通知，但不希望在组件首次加载时显示这个通知。\r"},"react-hook-useEffect_223":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_224":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"jsx\r"},"react-hook-useEffect_225":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"import React, { useState, useEffect, useRef } from 'react';\r"},"react-hook-useEffect_226":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_227":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"function Counter() {\r"},"react-hook-useEffect_228":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const [count, setCount] = useState(0);\r"},"react-hook-useEffect_229":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    const mounted = useRef(false);\r"},"react-hook-useEffect_230":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_231":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    useEffect(() =\r"},"react-hook-useEffect_232":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        if (mounted.current) {\r"},"react-hook-useEffect_233":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            alert('Count value changed!');\r"},"react-hook-useEffect_234":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        } else {\r"},"react-hook-useEffect_235":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            mounted.current = true;\r"},"react-hook-useEffect_236":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        }\r"},"react-hook-useEffect_237":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    }, [count]);\r"},"react-hook-useEffect_238":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_239":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    return (\r"},"react-hook-useEffect_240":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        <div"},"react-hook-useEffect_241":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            <button onClick={() =\r"},"react-hook-useEffect_242":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"            <p>Count: {count}</p"},"react-hook-useEffect_243":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"        </div"},"react-hook-useEffect_244":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"    );\r"},"react-hook-useEffect_245":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"}\r"},"react-hook-useEffect_246":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_247":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"export default Counter;\r"},"react-hook-useEffect_248":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_249":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_250":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"这个示例中，当用户点击 Increase 按钮增加值时，会出现一个通知。但是在页面首次加载时，不会有任何通知出现。\r"},"react-hook-useEffect_251":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_252":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"结语\r"},"react-hook-useEffect_253":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_254":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"是一个常用的 hook，正因为常用容易让开发者忽略了其中的使用细节，本文主要针对用法细节进行梳理，希望对大家有帮助。\r"},"react-hook-useEffect_255":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_256":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_257":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"专栏资源\r"},"react-hook-useEffect_258":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_259":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"专栏博客地址：\r"},"react-hook-useEffect_260":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_261":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"专栏演示站：\r"},"react-hook-useEffect_262":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_263":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"专栏源码仓库：👉\r"},"react-hook-useEffect_264":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_265":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"交个朋友：👉\r"},"react-hook-useEffect_266":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_267":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"专栏文章列表：\r"},"react-hook-useEffect_268":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_269":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_270":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_271":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_272":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_273":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_274":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_275":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_276":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_277":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_278":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_279":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_280":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_281":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_282":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_283":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_284":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_285":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_286":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_287":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_288":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_289":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_290":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_291":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_292":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_293":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_294":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_295":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_296":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_297":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_298":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":"\r"},"react-hook-useEffect_299":{"title":"精读React hooks（五）：useEffect使用细节知多少？","content":""},"react-hook-useRef":{"title":"精读React hooks（四）：useRef的多维用途","content":"精读React hooks（四）：useRef的多维用途","display":"\r"},"react-hook-useRef_0":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_1":{"title":"精读React hooks（四）：useRef的多维用途","content":"在 React 里，我们经常听到 \"everything is a component\" 这样的说法。而为了保持组件的纯净性，React 强调声明式编程，减少直接操作 DOM 的情况。然而，有时我们仍然需要直接与 DOM 交互，或者访问某个组件的具体实例。在这些情况下，Refs 就派上用场了。\r"},"react-hook-useRef_2":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_3":{"title":"精读React hooks（四）：useRef的多维用途","content":"useRef 基础知识\r"},"react-hook-useRef_4":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_5":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_6":{"title":"精读React hooks（四）：useRef的多维用途","content":"// 定义\r"},"react-hook-useRef_7":{"title":"精读React hooks（四）：useRef的多维用途","content":"const inputRef = useRef(null);\r"},"react-hook-useRef_8":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_9":{"title":"精读React hooks（四）：useRef的多维用途","content":"// 使用\r"},"react-hook-useRef_10":{"title":"精读React hooks（四）：useRef的多维用途","content":"console.log(inputRef.current)\r"},"react-hook-useRef_11":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_12":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_13":{"title":"精读React hooks（四）：useRef的多维用途","content":"这是的使用示例，返回一个可变的 ref 对象，通过可以获取保存在的值。看起来像是一个复杂版的，那么和有什么区别？为什么需要呢？\r"},"react-hook-useRef_14":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_15":{"title":"精读React hooks（四）：useRef的多维用途","content":"主要原因有两个：\r"},"react-hook-useRef_16":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_17":{"title":"精读React hooks（四）：useRef的多维用途","content":"1. ：的返回对象在组件的整个生命周期中都是持久的，而不是每次渲染都重新创建。\r"},"react-hook-useRef_18":{"title":"精读React hooks（四）：useRef的多维用途","content":"2. ：当中的状态改变时，组件会重新渲染。而当的属性改变时，组件不会重新渲染。\r"},"react-hook-useRef_19":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_20":{"title":"精读React hooks（四）：useRef的多维用途","content":"总结来说，既能保存状态，还不会在更新时触发渲染。本文我们就来盘点一下的使用场景。\r"},"react-hook-useRef_21":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_22":{"title":"精读React hooks（四）：useRef的多维用途","content":"useRef 的常见用途\r"},"react-hook-useRef_23":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_24":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_25":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_26":{"title":"精读React hooks（四）：useRef的多维用途","content":"当我们需要直接与 DOM 元素进行交互（例如，手动获取焦点或测量元素尺寸）时，可以使用 。\r"},"react-hook-useRef_27":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_28":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_29":{"title":"精读React hooks（四）：useRef的多维用途","content":"function TextInput() {\r"},"react-hook-useRef_30":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const inputRef = useRef(null);\r"},"react-hook-useRef_31":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_32":{"title":"精读React hooks（四）：useRef的多维用途","content":"  function focusInput() {\r"},"react-hook-useRef_33":{"title":"精读React hooks（四）：useRef的多维用途","content":"    inputRef.current.focus();\r"},"react-hook-useRef_34":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_35":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_36":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_37":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <div"},"react-hook-useRef_38":{"title":"精读React hooks（四）：useRef的多维用途","content":"      <input ref={inputRef} type=\"text\" /"},"react-hook-useRef_39":{"title":"精读React hooks（四）：useRef的多维用途","content":"      <button onClick={focusInput}>Focus the input</button"},"react-hook-useRef_40":{"title":"精读React hooks（四）：useRef的多维用途","content":"    </div"},"react-hook-useRef_41":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_42":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_43":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_44":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_45":{"title":"精读React hooks（四）：useRef的多维用途","content":"我们还可以在组件嵌套的场景使用\r"},"react-hook-useRef_46":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_47":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_48":{"title":"精读React hooks（四）：useRef的多维用途","content":"import { forwardRef, useRef } from 'react';\r"},"react-hook-useRef_49":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_50":{"title":"精读React hooks（四）：useRef的多维用途","content":"const MyInput = forwardRef((props, ref) =\r"},"react-hook-useRef_51":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <input {...props} ref={ref} />;\r"},"react-hook-useRef_52":{"title":"精读React hooks（四）：useRef的多维用途","content":"});\r"},"react-hook-useRef_53":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_54":{"title":"精读React hooks（四）：useRef的多维用途","content":"export default function Form() {\r"},"react-hook-useRef_55":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const inputRef = useRef(null);\r"},"react-hook-useRef_56":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_57":{"title":"精读React hooks（四）：useRef的多维用途","content":"  function handleClick() {\r"},"react-hook-useRef_58":{"title":"精读React hooks（四）：useRef的多维用途","content":"    inputRef.current.focus();\r"},"react-hook-useRef_59":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_60":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_61":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_62":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <"},"react-hook-useRef_63":{"title":"精读React hooks（四）：useRef的多维用途","content":"      <MyInput ref={inputRef} /"},"react-hook-useRef_64":{"title":"精读React hooks（四）：useRef的多维用途","content":"      <button onClick={handleClick}"},"react-hook-useRef_65":{"title":"精读React hooks（四）：useRef的多维用途","content":"        Focus the input\r"},"react-hook-useRef_66":{"title":"精读React hooks（四）：useRef的多维用途","content":"      </button"},"react-hook-useRef_67":{"title":"精读React hooks（四）：useRef的多维用途","content":"    </"},"react-hook-useRef_68":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_69":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_70":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_71":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_72":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_73":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_74":{"title":"精读React hooks（四）：useRef的多维用途","content":"有时，你可能需要在组件中保存某些值，而不希望每次该值更改时都重新渲染组件。在这种情况下，很有用。\r"},"react-hook-useRef_75":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_76":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_77":{"title":"精读React hooks（四）：useRef的多维用途","content":"function Timer() {\r"},"react-hook-useRef_78":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const count = useRef(0);\r"},"react-hook-useRef_79":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_80":{"title":"精读React hooks（四）：useRef的多维用途","content":"  useEffect(() =\r"},"react-hook-useRef_81":{"title":"精读React hooks（四）：useRef的多维用途","content":"    const intervalId = setInterval(() =\r"},"react-hook-useRef_82":{"title":"精读React hooks（四）：useRef的多维用途","content":"      count.current += 1;\r"},"react-hook-useRef_83":{"title":"精读React hooks（四）：useRef的多维用途","content":"      console.log();\r"},"react-hook-useRef_84":{"title":"精读React hooks（四）：useRef的多维用途","content":"    }, 1000);\r"},"react-hook-useRef_85":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_86":{"title":"精读React hooks（四）：useRef的多维用途","content":"    return () =\r"},"react-hook-useRef_87":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }, []);\r"},"react-hook-useRef_88":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_89":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <div>Check the console to see the elapsed time!</div>;\r"},"react-hook-useRef_90":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_91":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_92":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_93":{"title":"精读React hooks（四）：useRef的多维用途","content":"这个示例完美说明了可以把视为一个能够在组件的整个生命周期中持久保存数据的“盒子”，而不会引起组件的重新渲染。\r"},"react-hook-useRef_94":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_95":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_96":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_97":{"title":"精读React hooks（四）：useRef的多维用途","content":"在某些情况下，你可能需要知道 props 或 state 的上一次值。这时可以使用结合来达到目的。\r"},"react-hook-useRef_98":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_99":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_100":{"title":"精读React hooks（四）：useRef的多维用途","content":"function DisplayValue({ value }) {\r"},"react-hook-useRef_101":{"title":"精读React hooks（四）：useRef的多维用途","content":"\tconst [prevValue, setPrevValue] = useState(null); // 初始时，没有前一个值\r"},"react-hook-useRef_102":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const previousValue = useRef(value);\r"},"react-hook-useRef_103":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_104":{"title":"精读React hooks（四）：useRef的多维用途","content":"  useEffect(() =\r"},"react-hook-useRef_105":{"title":"精读React hooks（四）：useRef的多维用途","content":"\t\tsetPrevValue(currentRef.current);\r"},"react-hook-useRef_106":{"title":"精读React hooks（四）：useRef的多维用途","content":"    previousValue.current = value;\r"},"react-hook-useRef_107":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }, [value]);\r"},"react-hook-useRef_108":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_109":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_110":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <div"},"react-hook-useRef_111":{"title":"精读React hooks（四）：useRef的多维用途","content":"      Current Value: {value} <br /"},"react-hook-useRef_112":{"title":"精读React hooks（四）：useRef的多维用途","content":"      Previous Value: {prevValue}\r"},"react-hook-useRef_113":{"title":"精读React hooks（四）：useRef的多维用途","content":"    </div"},"react-hook-useRef_114":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_115":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_116":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_117":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_118":{"title":"精读React hooks（四）：useRef的多维用途","content":"当组件首次渲染时，会被初始化为的当前值。随后，每当发生变化时，都会运行并更新为新的。\r"},"react-hook-useRef_119":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_120":{"title":"精读React hooks（四）：useRef的多维用途","content":"但这里有一个微妙之处：由于是在组件渲染运行的，因此在组件的渲染过程中，的值是从前一次渲染中保持不变的。只有当被调用并执行完毕后，才会更新为新的。\r"},"react-hook-useRef_121":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_122":{"title":"精读React hooks（四）：useRef的多维用途","content":"高级技巧\r"},"react-hook-useRef_123":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_124":{"title":"精读React hooks（四）：useRef的多维用途","content":"避免在\r"},"react-hook-useRef_125":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_126":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_127":{"title":"精读React hooks（四）：useRef的多维用途","content":"function DisplayValue({ value }) {\r"},"react-hook-useRef_128":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const previousValue = useRef(value);\r"},"react-hook-useRef_129":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_130":{"title":"精读React hooks（四）：useRef的多维用途","content":"\t// 错误：在渲染期间修改 ref\r"},"react-hook-useRef_131":{"title":"精读React hooks（四）：useRef的多维用途","content":"  if (previousValue.current !== value) {\r"},"react-hook-useRef_132":{"title":"精读React hooks（四）：useRef的多维用途","content":"    previousValue.current = value;\r"},"react-hook-useRef_133":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_134":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_135":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_136":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <div"},"react-hook-useRef_137":{"title":"精读React hooks（四）：useRef的多维用途","content":"      Current Value: {value} <br /"},"react-hook-useRef_138":{"title":"精读React hooks（四）：useRef的多维用途","content":"\t\t\t {//}\r"},"react-hook-useRef_139":{"title":"精读React hooks（四）：useRef的多维用途","content":"      Previous Value: {previousValue.current}\r"},"react-hook-useRef_140":{"title":"精读React hooks（四）：useRef的多维用途","content":"    </div"},"react-hook-useRef_141":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_142":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_143":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_144":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_145":{"title":"精读React hooks（四）：useRef的多维用途","content":"这里，我们尝试在组件的渲染期间更新。这违反了 React 的工作方式，并可能导致不可预测的行为。例如：\r"},"react-hook-useRef_146":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_147":{"title":"精读React hooks（四）：useRef的多维用途","content":"1. ：由于 React 在多次渲染中可能使用异步和优化技术，直接在渲染期间修改 refs 可能导致 UI 不一致。\r"},"react-hook-useRef_148":{"title":"精读React hooks（四）：useRef的多维用途","content":"2. ：如果其他效应或钩子依赖于 ref 的值，它们可能不会在期望的时刻运行，因为直接修改 ref 不会触发重新渲染或其他效应。\r"},"react-hook-useRef_149":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_150":{"title":"精读React hooks（四）：useRef的多维用途","content":"这是为什么我们通常在内部更新 refs。在内部，我们可以确保组件已经完成渲染，并且不会在渲染期间发生任何不期望的副作用。\r"},"react-hook-useRef_151":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_152":{"title":"精读React hooks（四）：useRef的多维用途","content":"避免重复创建 ref\r"},"react-hook-useRef_153":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_154":{"title":"精读React hooks（四）：useRef的多维用途","content":"如果我们在创建 ref 时，想要通过计算或有副作用的方法获取初值，可能会用下面这种写法。这种写法会导致在每次组建渲染的时候都被调用。虽然的设计让它只从首次渲染的时候获取初值，但这种做法仍然会造成不必要的性能损耗。\r"},"react-hook-useRef_155":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_156":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_157":{"title":"精读React hooks（四）：useRef的多维用途","content":"function ClickCounter() {\r"},"react-hook-useRef_158":{"title":"精读React hooks（四）：useRef的多维用途","content":"  // bad。这里的问题是，每次组件渲染时，getInitialCount都会被调用，尽管它的返回值只在第一次渲染时被使用。\r"},"react-hook-useRef_159":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const countRef = useRef(getInitialCount());\r"},"react-hook-useRef_160":{"title":"精读React hooks（四）：useRef的多维用途","content":"  \r"},"react-hook-useRef_161":{"title":"精读React hooks（四）：useRef的多维用途","content":"  function handleClick() {\r"},"react-hook-useRef_162":{"title":"精读React hooks（四）：useRef的多维用途","content":"    countRef.current += 1;\r"},"react-hook-useRef_163":{"title":"精读React hooks（四）：useRef的多维用途","content":"    console.log();\r"},"react-hook-useRef_164":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_165":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_166":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <button onClick={handleClick}>Click me!</button>;\r"},"react-hook-useRef_167":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_168":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_169":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_170":{"title":"精读React hooks（四）：useRef的多维用途","content":"解决这种场景下的 ref 创建也很简单，那就是用作为初始值，渲染的过程判断仅在null时去计算或调用有副作用的方法。\r"},"react-hook-useRef_171":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_172":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_173":{"title":"精读React hooks（四）：useRef的多维用途","content":"function ClickCounter() {\r"},"react-hook-useRef_174":{"title":"精读React hooks（四）：useRef的多维用途","content":"\t// good\r"},"react-hook-useRef_175":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const countRef = useRef(null);\r"},"react-hook-useRef_176":{"title":"精读React hooks（四）：useRef的多维用途","content":"\t// good\r"},"react-hook-useRef_177":{"title":"精读React hooks（四）：useRef的多维用途","content":"  if (countRef.current === null) {\r"},"react-hook-useRef_178":{"title":"精读React hooks（四）：useRef的多维用途","content":"    countRef.current = getInitialCount();\r"},"react-hook-useRef_179":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_180":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_181":{"title":"精读React hooks（四）：useRef的多维用途","content":"  function handleClick() {\r"},"react-hook-useRef_182":{"title":"精读React hooks（四）：useRef的多维用途","content":"    countRef.current += 1;\r"},"react-hook-useRef_183":{"title":"精读React hooks（四）：useRef的多维用途","content":"    console.log();\r"},"react-hook-useRef_184":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_185":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_186":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <button onClick={handleClick}>Click me!</button>;\r"},"react-hook-useRef_187":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_188":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_189":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_190":{"title":"精读React hooks（四）：useRef的多维用途","content":"与 useReducer 使用\r"},"react-hook-useRef_191":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_192":{"title":"精读React hooks（四）：useRef的多维用途","content":"当我们需要复杂的状态逻辑且希望避免额外的渲染时，可以考虑将与结合使用。\r"},"react-hook-useRef_193":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_194":{"title":"精读React hooks（四）：useRef的多维用途","content":"例如：跟踪的 action 数量。\r"},"react-hook-useRef_195":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_196":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_197":{"title":"精读React hooks（四）：useRef的多维用途","content":"const initialState = { count: 0 };\r"},"react-hook-useRef_198":{"title":"精读React hooks（四）：useRef的多维用途","content":"function reducer(state, action) {\r"},"react-hook-useRef_199":{"title":"精读React hooks（四）：useRef的多维用途","content":"  switch (action.type) {\r"},"react-hook-useRef_200":{"title":"精读React hooks（四）：useRef的多维用途","content":"    case \"increment\":\r"},"react-hook-useRef_201":{"title":"精读React hooks（四）：useRef的多维用途","content":"      return { count: state.count + 1 };\r"},"react-hook-useRef_202":{"title":"精读React hooks（四）：useRef的多维用途","content":"    default:\r"},"react-hook-useRef_203":{"title":"精读React hooks（四）：useRef的多维用途","content":"      throw new Error();\r"},"react-hook-useRef_204":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_205":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_206":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_207":{"title":"精读React hooks（四）：useRef的多维用途","content":"function Counter() {\r"},"react-hook-useRef_208":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const [state, dispatch] = useReducer(reducer, initialState);\r"},"react-hook-useRef_209":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const actionsCountRef = useRef(0);\r"},"react-hook-useRef_210":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_211":{"title":"精读React hooks（四）：useRef的多维用途","content":"  function handleIncrement() {\r"},"react-hook-useRef_212":{"title":"精读React hooks（四）：useRef的多维用途","content":"    dispatch({ type: \"increment\" });\r"},"react-hook-useRef_213":{"title":"精读React hooks（四）：useRef的多维用途","content":"    actionsCountRef.current += 1;\r"},"react-hook-useRef_214":{"title":"精读React hooks（四）：useRef的多维用途","content":"    console.log();\r"},"react-hook-useRef_215":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }\r"},"react-hook-useRef_216":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_217":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_218":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <"},"react-hook-useRef_219":{"title":"精读React hooks（四）：useRef的多维用途","content":"      Count: {state.count}\r"},"react-hook-useRef_220":{"title":"精读React hooks（四）：useRef的多维用途","content":"      <button onClick={handleIncrement}>Increment</button"},"react-hook-useRef_221":{"title":"精读React hooks（四）：useRef的多维用途","content":"    </"},"react-hook-useRef_222":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_223":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_224":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_225":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_226":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_227":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_228":{"title":"精读React hooks（四）：useRef的多维用途","content":"在使用非 React 库（如 D3、jQuery）时，我们可能需要使用来获得对真实 DOM 节点的引用。\r"},"react-hook-useRef_229":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_230":{"title":"精读React hooks（四）：useRef的多维用途","content":"例如：结合D3\r"},"react-hook-useRef_231":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_232":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_233":{"title":"精读React hooks（四）：useRef的多维用途","content":"import { useRef, useEffect } from 'react';\r"},"react-hook-useRef_234":{"title":"精读React hooks（四）：useRef的多维用途","content":"import * as d3 from 'd3';\r"},"react-hook-useRef_235":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_236":{"title":"精读React hooks（四）：useRef的多维用途","content":"function BarChart() {\r"},"react-hook-useRef_237":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const chartRef = useRef(null);\r"},"react-hook-useRef_238":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_239":{"title":"精读React hooks（四）：useRef的多维用途","content":"  useEffect(() =\r"},"react-hook-useRef_240":{"title":"精读React hooks（四）：useRef的多维用途","content":"    const svg = d3.select(chartRef.current);\r"},"react-hook-useRef_241":{"title":"精读React hooks（四）：useRef的多维用途","content":"    // ... 使用 D3 进行图表绘制\r"},"react-hook-useRef_242":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }, []);\r"},"react-hook-useRef_243":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_244":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <svg ref={chartRef}></svg>;\r"},"react-hook-useRef_245":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_246":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_247":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_248":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_249":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_250":{"title":"精读React hooks（四）：useRef的多维用途","content":"通过获取元素并使用 Web API 如可以实现复杂的动画效果。\r"},"react-hook-useRef_251":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_252":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_253":{"title":"精读React hooks（四）：useRef的多维用途","content":"import { useEffect, useRef } from \"react\";\r"},"react-hook-useRef_254":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_255":{"title":"精读React hooks（四）：useRef的多维用途","content":"function MovingBox() {\r"},"react-hook-useRef_256":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const boxRef = useRef(null);\r"},"react-hook-useRef_257":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const animationFrameRef = useRef(null);\r"},"react-hook-useRef_258":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_259":{"title":"精读React hooks（四）：useRef的多维用途","content":"  useEffect(() =\r"},"react-hook-useRef_260":{"title":"精读React hooks（四）：useRef的多维用途","content":"    const boxElem = boxRef.current;\r"},"react-hook-useRef_261":{"title":"精读React hooks（四）：useRef的多维用途","content":"    let position = 0;\r"},"react-hook-useRef_262":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_263":{"title":"精读React hooks（四）：useRef的多维用途","content":"    const animate = () =\r"},"react-hook-useRef_264":{"title":"精读React hooks（四）：useRef的多维用途","content":"      position += 1;\r"},"react-hook-useRef_265":{"title":"精读React hooks（四）：useRef的多维用途","content":"      if (position \r"},"react-hook-useRef_266":{"title":"精读React hooks（四）：useRef的多维用途","content":"        position = -100; // 如果方块移动到屏幕的右侧，则从左侧重新开始\r"},"react-hook-useRef_267":{"title":"精读React hooks（四）：useRef的多维用途","content":"      }\r"},"react-hook-useRef_268":{"title":"精读React hooks（四）：useRef的多维用途","content":"      boxElem.style.transform = ;\r"},"react-hook-useRef_269":{"title":"精读React hooks（四）：useRef的多维用途","content":"      animationFrameRef.current = requestAnimationFrame(animate);\r"},"react-hook-useRef_270":{"title":"精读React hooks（四）：useRef的多维用途","content":"    };\r"},"react-hook-useRef_271":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_272":{"title":"精读React hooks（四）：useRef的多维用途","content":"    animationFrameRef.current = requestAnimationFrame(animate);\r"},"react-hook-useRef_273":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_274":{"title":"精读React hooks（四）：useRef的多维用途","content":"    return () =\r"},"react-hook-useRef_275":{"title":"精读React hooks（四）：useRef的多维用途","content":"      cancelAnimationFrame(animationFrameRef.current); // 在组件卸载时取消动画\r"},"react-hook-useRef_276":{"title":"精读React hooks（四）：useRef的多维用途","content":"    };\r"},"react-hook-useRef_277":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }, []);\r"},"react-hook-useRef_278":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_279":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return (\r"},"react-hook-useRef_280":{"title":"精读React hooks（四）：useRef的多维用途","content":"    <div\r"},"react-hook-useRef_281":{"title":"精读React hooks（四）：useRef的多维用途","content":"      ref={boxRef}\r"},"react-hook-useRef_282":{"title":"精读React hooks（四）：useRef的多维用途","content":"      style={{ width: \"100px\", height: \"100px\", background: \"blue\" }}\r"},"react-hook-useRef_283":{"title":"精读React hooks（四）：useRef的多维用途","content":"    ></div"},"react-hook-useRef_284":{"title":"精读React hooks（四）：useRef的多维用途","content":"  );\r"},"react-hook-useRef_285":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_286":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_287":{"title":"精读React hooks（四）：useRef的多维用途","content":"export default MovingBox;\r"},"react-hook-useRef_288":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_289":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_290":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_291":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_292":{"title":"精读React hooks（四）：useRef的多维用途","content":"使用监听不由 React 管理的 DOM 事件。\r"},"react-hook-useRef_293":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_294":{"title":"精读React hooks（四）：useRef的多维用途","content":"例如：窗口大小变化\r"},"react-hook-useRef_295":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_296":{"title":"精读React hooks（四）：useRef的多维用途","content":"jsx\r"},"react-hook-useRef_297":{"title":"精读React hooks（四）：useRef的多维用途","content":"function WindowSize() {\r"},"react-hook-useRef_298":{"title":"精读React hooks（四）：useRef的多维用途","content":"  const widthRef = useRef(window.innerWidth);\r"},"react-hook-useRef_299":{"title":"精读React hooks（四）：useRef的多维用途","content":"  \r"},"react-hook-useRef_300":{"title":"精读React hooks（四）：useRef的多维用途","content":"  useEffect(() =\r"},"react-hook-useRef_301":{"title":"精读React hooks（四）：useRef的多维用途","content":"    const handleResize = () =\r"},"react-hook-useRef_302":{"title":"精读React hooks（四）：useRef的多维用途","content":"      widthRef.current = window.innerWidth;\r"},"react-hook-useRef_303":{"title":"精读React hooks（四）：useRef的多维用途","content":"      console.log();\r"},"react-hook-useRef_304":{"title":"精读React hooks（四）：useRef的多维用途","content":"    };\r"},"react-hook-useRef_305":{"title":"精读React hooks（四）：useRef的多维用途","content":"    \r"},"react-hook-useRef_306":{"title":"精读React hooks（四）：useRef的多维用途","content":"    window.addEventListener(\"resize\", handleResize);\r"},"react-hook-useRef_307":{"title":"精读React hooks（四）：useRef的多维用途","content":"    return () =\r"},"react-hook-useRef_308":{"title":"精读React hooks（四）：useRef的多维用途","content":"  }, []);\r"},"react-hook-useRef_309":{"title":"精读React hooks（四）：useRef的多维用途","content":"  \r"},"react-hook-useRef_310":{"title":"精读React hooks（四）：useRef的多维用途","content":"  return <div>Check the console for window width updates!</div>;\r"},"react-hook-useRef_311":{"title":"精读React hooks（四）：useRef的多维用途","content":"}\r"},"react-hook-useRef_312":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_313":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_314":{"title":"精读React hooks（四）：useRef的多维用途","content":"结语\r"},"react-hook-useRef_315":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_316":{"title":"精读React hooks（四）：useRef的多维用途","content":"在本篇文章中，我们从基本的 DOM 引用出发，探讨了各种实际的应用场景，包括性能优化和动画方面。通过深入了解并有效使用 ，我们可以更灵活地管理组件内部的状态，而不必担心触发不必要的渲染。希望这篇文章能帮助你更好地理解并能让你有所启发。\r"},"react-hook-useRef_317":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_318":{"title":"精读React hooks（四）：useRef的多维用途","content":"以上多个重要示例的实际效果都可以在查看，TypeScript版的源码也已发布到我的Github：。\r"},"react-hook-useRef_319":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_320":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_321":{"title":"精读React hooks（四）：useRef的多维用途","content":"专栏资源\r"},"react-hook-useRef_322":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_323":{"title":"精读React hooks（四）：useRef的多维用途","content":"专栏博客地址：\r"},"react-hook-useRef_324":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_325":{"title":"精读React hooks（四）：useRef的多维用途","content":"专栏演示站：\r"},"react-hook-useRef_326":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_327":{"title":"精读React hooks（四）：useRef的多维用途","content":"专栏源码仓库：👉\r"},"react-hook-useRef_328":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_329":{"title":"精读React hooks（四）：useRef的多维用途","content":"交个朋友：👉\r"},"react-hook-useRef_330":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_331":{"title":"精读React hooks（四）：useRef的多维用途","content":"专栏文章列表：\r"},"react-hook-useRef_332":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_333":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_334":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_335":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_336":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_337":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_338":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_339":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_340":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_341":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_342":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_343":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_344":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_345":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_346":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_347":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_348":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_349":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_350":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_351":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_352":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_353":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_354":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_355":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_356":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_357":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_358":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_359":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_360":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_361":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_362":{"title":"精读React hooks（四）：useRef的多维用途","content":"\r"},"react-hook-useRef_363":{"title":"精读React hooks（四）：useRef的多维用途","content":""},"react-hook-useContext":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"精读React hooks（三）：useContext从基础应用到性能优化","display":"\r"},"react-hook-useContext_0":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_1":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"上一篇文章（）我们用和实现了一个切换主题的功能，我们已经掌握了，那么本文就来学习。\r"},"react-hook-useContext_2":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_3":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"我们知道，每一个的诞生都有它独特的使命，比如是解决组件内状态更新的问题，是解决组件复杂状态更新的问题。\r"},"react-hook-useContext_4":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_5":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"而要解决的是：；实现的是：。\r"},"react-hook-useContext_6":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_7":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"基础用法\r"},"react-hook-useContext_8":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_9":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"1. \r"},"react-hook-useContext_10":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_11":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"首先，我们需要使用创建一个对象：\r"},"react-hook-useContext_12":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_13":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_14":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"const MyContext = React.createContext(defaultValue);\r"},"react-hook-useContext_15":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_16":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_17":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"这里的是当组件不在任何 Context Provider 内部时的默认值，可以用 null，但 React 官方建议提供一个有意义的默认值，这样可以让调用组件更安全。\r"},"react-hook-useContext_18":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_19":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"1. \r"},"react-hook-useContext_20":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_21":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"为了在组件树中使用这个，我们需要使用组件，它接受一个prop，这就是你想在它的子组件中共享的值。\r"},"react-hook-useContext_22":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_23":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_24":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"<MyContext.Provider value={someValue}"},"react-hook-useContext_25":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  {//}\r"},"react-hook-useContext_26":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"</MyContext.Provider"},"react-hook-useContext_27":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_28":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_29":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"1. \r"},"react-hook-useContext_30":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_31":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"在函数组件中，可以使用hook 来访问这个 context 的值。\r"},"react-hook-useContext_32":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_33":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_34":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function MyComponent() {\r"},"react-hook-useContext_35":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  const contextValue = useContext(MyContext);\r"},"react-hook-useContext_36":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return <div>{contextValue}</div>;\r"},"react-hook-useContext_37":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_38":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_39":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_40":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"这里的就是第二步传入的，而且获取到的永远是最新的值。\r"},"react-hook-useContext_41":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_42":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"一个示例\r"},"react-hook-useContext_43":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_44":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"我们来看一个更直观的示例：\r"},"react-hook-useContext_45":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_46":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_47":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"import React, { useContext } from 'react';\r"},"react-hook-useContext_48":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_49":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"// 1. 创建 Context\r"},"react-hook-useContext_50":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"const ThemeContext = React.createContext('light');\r"},"react-hook-useContext_51":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_52":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function App() {\r"},"react-hook-useContext_53":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_54":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    // 2. 使用 Context Provider\r"},"react-hook-useContext_55":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <ThemeContext.Provider value=\"dark\""},"react-hook-useContext_56":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      <Toolbar /"},"react-hook-useContext_57":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    </ThemeContext.Provider"},"react-hook-useContext_58":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_59":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_60":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_61":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function Toolbar() {\r"},"react-hook-useContext_62":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_63":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <div"},"react-hook-useContext_64":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      <ThemeButton /"},"react-hook-useContext_65":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    </div"},"react-hook-useContext_66":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_67":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_68":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_69":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function ThemeButton() {\r"},"react-hook-useContext_70":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  // 3. 在组件中访问 Context\r"},"react-hook-useContext_71":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  const theme = useContext(ThemeContext);\r"},"react-hook-useContext_72":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return <button>{theme} theme</button>;\r"},"react-hook-useContext_73":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_74":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_75":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"export default App;\r"},"react-hook-useContext_76":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_77":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_78":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"这个示例中，App 中引用了并传了值，ThemeButton 是 App 的孙组件，这二者之间没有通过 Toolbar 进行嵌套传值，但是 ThemeButton 依然通过拿到了 App 里的值。\r"},"react-hook-useContext_79":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_80":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"从这个示例中我们可以总结出，和共同组成了一个管道，通过这个管道，开发者可以进行跨组件共享状态。\r"},"react-hook-useContext_81":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_82":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"进阶技巧\r"},"react-hook-useContext_83":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_84":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"动态Context值\r"},"react-hook-useContext_85":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_86":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"有的时候 Context 传的值需要动态变化，我们可以基于useState去更新状态，更新后的值会实时反应到调用 Context 的组件上。\r"},"react-hook-useContext_87":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_88":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_89":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function ThemeProvider({ children }) {\r"},"react-hook-useContext_90":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  const [theme, setTheme] = useState(\"light\");\r"},"react-hook-useContext_91":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_92":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_93":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <ThemeContext.Provider value={theme}"},"react-hook-useContext_94":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      <button onClick={() =\r"},"react-hook-useContext_95":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        Toggle Theme\r"},"react-hook-useContext_96":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      </button"},"react-hook-useContext_97":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      {children}\r"},"react-hook-useContext_98":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    </ThemeContext.Provider"},"react-hook-useContext_99":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_100":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_101":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_102":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_103":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"如果要更新对象也是可以的：\r"},"react-hook-useContext_104":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_105":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_106":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"import React, { useContext } from 'react';\r"},"react-hook-useContext_107":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_108":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"// 1. 创建 Context\r"},"react-hook-useContext_109":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"const CurrentUserContext = React.createContext('light');\r"},"react-hook-useContext_110":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_111":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function App() {\r"},"react-hook-useContext_112":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\tconst [currentUser, setCurrentUser] = useState(null\r"},"react-hook-useContext_113":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_114":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    // 2. 使用 Context Provider\r"},"react-hook-useContext_115":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <CurrentUserContext.Provider \r"},"react-hook-useContext_116":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\t\t\tvalue={{\r"},"react-hook-useContext_117":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        currentUser,\r"},"react-hook-useContext_118":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        setCurrentUser\r"},"react-hook-useContext_119":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      }}\r"},"react-hook-useContext_120":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\t\t"},"react-hook-useContext_121":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      <Toolbar /"},"react-hook-useContext_122":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    </CurrentUserContext.Provider"},"react-hook-useContext_123":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_124":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_125":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_126":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function Toolbar() {\r"},"react-hook-useContext_127":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_128":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <div"},"react-hook-useContext_129":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      <LoginButton /"},"react-hook-useContext_130":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    </div"},"react-hook-useContext_131":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_132":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_133":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_134":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"function LoginButton() {\r"},"react-hook-useContext_135":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  const {\r"},"react-hook-useContext_136":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    currentUser,\r"},"react-hook-useContext_137":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    setCurrentUser\r"},"react-hook-useContext_138":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  } = useContext(CurrentUserContext);\r"},"react-hook-useContext_139":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_140":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  if (currentUser !== null) {\r"},"react-hook-useContext_141":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    return <p>You logged in as {currentUser.name}.</p>;\r"},"react-hook-useContext_142":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  }\r"},"react-hook-useContext_143":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_144":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  return (\r"},"react-hook-useContext_145":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <Button onClick={() =\r"},"react-hook-useContext_146":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      setCurrentUser({ name: 'Advika' })\r"},"react-hook-useContext_147":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    }}>Log in as Weijunext</Button"},"react-hook-useContext_148":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  );\r"},"react-hook-useContext_149":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"}\r"},"react-hook-useContext_150":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_151":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"export default App;\r"},"react-hook-useContext_152":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_153":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_154":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"和useReducer共用\r"},"react-hook-useContext_155":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_156":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"在大型应用中，通常会将与结合起来使用，以便从组件中提取与某些状态相关的逻辑。上一篇文章即是用这种思路实现了主题切换，源码可查看Github：，本文不再重复。\r"},"react-hook-useContext_157":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_158":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"覆盖Provider value\r"},"react-hook-useContext_159":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_160":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"当我们调用多个相同 Context，会实现的覆盖\r"},"react-hook-useContext_161":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_162":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"jsx\r"},"react-hook-useContext_163":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"<ThemeContext.Provider value=\"dark\""},"react-hook-useContext_164":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  ...\r"},"react-hook-useContext_165":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  <ThemeContext.Provider value=\"light\""},"react-hook-useContext_166":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    <Footer /"},"react-hook-useContext_167":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  </ThemeContext.Provider"},"react-hook-useContext_168":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"  ...\r"},"react-hook-useContext_169":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"</ThemeContext.Provider"},"react-hook-useContext_170":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_171":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_172":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"高级应用——性能优化\r"},"react-hook-useContext_173":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_174":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"当我们在使用时，一个经常被提到的问题是性能优化。如果不正确地使用，Context 可能导致不必要的组件渲染，从而影响应用性能。\r"},"react-hook-useContext_175":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_176":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_177":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_178":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"当的属性值发生变化时，所有使用了的组件都将重新渲染。如果经常变化，或者消费者组件很多，那么这会引起大量的不必要的渲染。\r"},"react-hook-useContext_179":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_180":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_181":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_182":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"- \r"},"react-hook-useContext_183":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_184":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    如果你的 context 包含许多不同的状态值，尝试将它们分解成更小的 context。例如，而不是只有一个大的 AppContext，你可以有 UserContext、ThemeContext 等。这样，当某一部分的数据发生变化时，只有依赖于那部分数据的组件会重新渲染。\r"},"react-hook-useContext_185":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_186":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    jsx\r"},"react-hook-useContext_187":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    import { createContext, useContext, useState } from 'react';\r"},"react-hook-useContext_188":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_189":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    const ThemeContext = createContext(null);\r"},"react-hook-useContext_190":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    const CurrentUserContext = createContext(null);\r"},"react-hook-useContext_191":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_192":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    export default function MyApp() {\r"},"react-hook-useContext_193":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      const [theme, setTheme] = useState('light');\r"},"react-hook-useContext_194":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      const [currentUser, setCurrentUser] = useState(null);\r"},"react-hook-useContext_195":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      return (\r"},"react-hook-useContext_196":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        <ThemeContext.Provider value={theme}"},"react-hook-useContext_197":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"          <CurrentUserContext.Provider\r"},"react-hook-useContext_198":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"            value={{\r"},"react-hook-useContext_199":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"              currentUser,\r"},"react-hook-useContext_200":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"              setCurrentUser\r"},"react-hook-useContext_201":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"            }}\r"},"react-hook-useContext_202":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"          "},"react-hook-useContext_203":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \t      <Toolbar /"},"react-hook-useContext_204":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \t\t\t\t<button onClick={() =\r"},"react-hook-useContext_205":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \t        Toggle Theme\r"},"react-hook-useContext_206":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \t      </button"},"react-hook-useContext_207":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"          </CurrentUserContext.Provider"},"react-hook-useContext_208":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        </ThemeContext.Provider"},"react-hook-useContext_209":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      )\r"},"react-hook-useContext_210":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    }\r"},"react-hook-useContext_211":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_212":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_213":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"- \r"},"react-hook-useContext_214":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_215":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    这与上一点相似。你可以为应用中的不同部分使用不同的 context 提供者，确保仅当真正需要的数据更改时才重新渲染组件。\r"},"react-hook-useContext_216":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_217":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"- \r"},"react-hook-useContext_218":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_219":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    为了避免变化造成子孙组件频繁的重新渲染，可以使用和对参数和方法进行缓存，减少的无意义更新。\r"},"react-hook-useContext_220":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_221":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    jsx\r"},"react-hook-useContext_222":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    import { useCallback, useMemo } from 'react';\r"},"react-hook-useContext_223":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_224":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    function MyApp() {\r"},"react-hook-useContext_225":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      const [currentUser, setCurrentUser] = useState(null);\r"},"react-hook-useContext_226":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_227":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      const login = useCallback((response) =\r"},"react-hook-useContext_228":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        storeCredentials(response.credentials);\r"},"react-hook-useContext_229":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        setCurrentUser(response.user);\r"},"react-hook-useContext_230":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      }, []);\r"},"react-hook-useContext_231":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_232":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      const contextValue = useMemo(() =\r"},"react-hook-useContext_233":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        currentUser,\r"},"react-hook-useContext_234":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        login\r"},"react-hook-useContext_235":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      }), [currentUser, login]);\r"},"react-hook-useContext_236":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_237":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      return (\r"},"react-hook-useContext_238":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        <AuthContext.Provider value={contextValue}"},"react-hook-useContext_239":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"          <Page /"},"react-hook-useContext_240":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"        </AuthContext.Provider"},"react-hook-useContext_241":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"      );\r"},"react-hook-useContext_242":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    }\r"},"react-hook-useContext_243":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_244":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"    \r"},"react-hook-useContext_245":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_246":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"注：如果你的应用状态经常发生变化，并触发大量组件的更新，那么这种情况不适合用，请立即考虑其它状态更新方案。\r"},"react-hook-useContext_247":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_248":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"结语\r"},"react-hook-useContext_249":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_250":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"希望本文所讲的useContext应用和技巧能帮助你掌握hook。\r"},"react-hook-useContext_251":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_252":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"专栏资源\r"},"react-hook-useContext_253":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_254":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"专栏博客地址：\r"},"react-hook-useContext_255":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_256":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"专栏演示站：\r"},"react-hook-useContext_257":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_258":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"专栏源码仓库：👉\r"},"react-hook-useContext_259":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_260":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"交个朋友：👉\r"},"react-hook-useContext_261":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_262":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"专栏文章列表：\r"},"react-hook-useContext_263":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_264":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_265":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_266":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_267":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_268":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_269":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_270":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_271":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_272":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_273":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_274":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_275":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_276":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_277":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_278":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_279":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_280":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_281":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_282":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_283":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_284":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_285":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_286":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_287":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_288":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_289":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_290":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_291":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_292":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_293":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":"\r"},"react-hook-useContext_294":{"title":"精读React hooks（三）：useContext从基础应用到性能优化","content":""},"react-hook-useReducer":{"title":"精读React hooks（二）：全面掌握useReducer","content":"精读React hooks（二）：全面掌握useReducer","display":"\r"},"react-hook-useReducer_0":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_1":{"title":"精读React hooks（二）：全面掌握useReducer","content":"中，我们学习了的一些基础用法和进阶技巧，是React的一个基础Hook，允许我们在函数组件中存储状态。\r"},"react-hook-useReducer_2":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_3":{"title":"精读React hooks（二）：全面掌握useReducer","content":"随着应用逐渐复杂，我们经常发现在管理复杂的状态逻辑时显得有些力不从心。这时，React为我们提供的另一个更为强大的hook————可以帮助我们优雅地处理复杂状态。\r"},"react-hook-useReducer_4":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_5":{"title":"精读React hooks（二）：全面掌握useReducer","content":"允许我们使用 action 和 reducer 的方式来组织复杂的状态逻辑，使其变得更加清晰和模块化，弥补了的局限性。\r"},"react-hook-useReducer_6":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_7":{"title":"精读React hooks（二）：全面掌握useReducer","content":"基础用法\r"},"react-hook-useReducer_8":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_9":{"title":"精读React hooks（二）：全面掌握useReducer","content":"与相似，也是 React 的 Hook，而且也只能放在组件最顶层使用。与前者不同的地方在于，它是通过 action 来更新状态的，使状态更新逻辑更具可读性。\r"},"react-hook-useReducer_10":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_11":{"title":"精读React hooks（二）：全面掌握useReducer","content":"：\r"},"react-hook-useReducer_12":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_13":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- reducer 函数：指定如何更新状态的还原函数，它必须是纯函数，以 state 和 dispatch 为参数，并返回下一个状态。\r"},"react-hook-useReducer_14":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- 初始状态：初始状态的计算值。\r"},"react-hook-useReducer_15":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- （可选的）初始化参数：用于返回初始状态。如果未指定，初始状态将设置为 initialArg；如果有指定，初始状态将被设置为调用的结果。\r"},"react-hook-useReducer_16":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_17":{"title":"精读React hooks（二）：全面掌握useReducer","content":"：\r"},"react-hook-useReducer_18":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_19":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- 当前的状态：当前状态。在第一次渲染时，它会被设置为或 initialArg（如果没有 init 的情况下）。\r"},"react-hook-useReducer_20":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- dispatch：调度函数，用于调用 reducer 函数，以更新状态并触发重新渲染。\r"},"react-hook-useReducer_21":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_22":{"title":"精读React hooks（二）：全面掌握useReducer","content":"基本形式如下：\r"},"react-hook-useReducer_23":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_24":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_25":{"title":"精读React hooks（二）：全面掌握useReducer","content":"const [state, dispatch] = useReducer(reducer, initialArg, init?)\r"},"react-hook-useReducer_26":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_27":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_28":{"title":"精读React hooks（二）：全面掌握useReducer","content":"通常情况下，我们只会用到的前两个参数，如这个计数器组件：\r"},"react-hook-useReducer_29":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_30":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_31":{"title":"精读React hooks（二）：全面掌握useReducer","content":"const initialState = { count: 0 };\r"},"react-hook-useReducer_32":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_33":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function reducer(state, action) {\r"},"react-hook-useReducer_34":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  switch (action.type) {\r"},"react-hook-useReducer_35":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case 'increment':\r"},"react-hook-useReducer_36":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count + 1 };\r"},"react-hook-useReducer_37":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case 'decrement':\r"},"react-hook-useReducer_38":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count - 1 };\r"},"react-hook-useReducer_39":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    default:\r"},"react-hook-useReducer_40":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      throw new Error();\r"},"react-hook-useReducer_41":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  }\r"},"react-hook-useReducer_42":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_43":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_44":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function Counter() {\r"},"react-hook-useReducer_45":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const [state, dispatch] = useReducer(reducer, initialState);\r"},"react-hook-useReducer_46":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_47":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return (\r"},"react-hook-useReducer_48":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    <"},"react-hook-useReducer_49":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      Count: {state.count}\r"},"react-hook-useReducer_50":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_51":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_52":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    </"},"react-hook-useReducer_53":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  );\r"},"react-hook-useReducer_54":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_55":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_56":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_57":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_58":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_59":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- 调用后，状态更新是异步的，因此立刻读取状态可能仍是旧的。\r"},"react-hook-useReducer_60":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \r"},"react-hook-useReducer_61":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    jsx\r"},"react-hook-useReducer_62":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    function addCount() {\r"},"react-hook-useReducer_63":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \tdispatch({ type: 'increment' })\r"},"react-hook-useReducer_64":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \tconsole.log(state.count) // 打印出来的不是新值\r"},"react-hook-useReducer_65":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    }\r"},"react-hook-useReducer_66":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \r"},"react-hook-useReducer_67":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    <button onClick={addCount}>+</button"},"react-hook-useReducer_68":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \r"},"react-hook-useReducer_69":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \r"},"react-hook-useReducer_70":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- React 对有一个优化机制：如果触发更新前后的值相等（使用判断），实际上React不会进行重新渲染，这是出于性能考虑。\r"},"react-hook-useReducer_71":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_72":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_73":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_74":{"title":"精读React hooks（二）：全面掌握useReducer","content":"你在里面更新对象和数组的状态，需要创建一个新的对象或数组，而不是在原对象和数组上修改，这一点和是一样的。\r"},"react-hook-useReducer_75":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_76":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_77":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_78":{"title":"精读React hooks（二）：全面掌握useReducer","content":"上一节我们提到了还有第三个参数，那么它的作用是什么？它也是为了性能优化而来。\r"},"react-hook-useReducer_79":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_80":{"title":"精读React hooks（二）：全面掌握useReducer","content":"我们先假设一个场景，计数器的值保存在里面，进入页面的时候，我们希望从中读取值来作为初值，如果没有，我们可以这样做：\r"},"react-hook-useReducer_81":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_82":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_83":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function getInitialCount() {\r"},"react-hook-useReducer_84":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const savedCount = localStorage.getItem(\"count\");\r"},"react-hook-useReducer_85":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return savedCount ? Number(savedCount) : 0;\r"},"react-hook-useReducer_86":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_87":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_88":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function counterReducer(state, action) {\r"},"react-hook-useReducer_89":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  switch (action.type) {\r"},"react-hook-useReducer_90":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case \"INCREMENT\":\r"},"react-hook-useReducer_91":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count + 1 };\r"},"react-hook-useReducer_92":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case \"DECREMENT\":\r"},"react-hook-useReducer_93":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count - 1 };\r"},"react-hook-useReducer_94":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    default:\r"},"react-hook-useReducer_95":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return state;\r"},"react-hook-useReducer_96":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  }\r"},"react-hook-useReducer_97":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_98":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_99":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function Counter() {\r"},"react-hook-useReducer_100":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const [state, dispatch] = useReducer(counterReducer, getInitialCount());\r"},"react-hook-useReducer_101":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_102":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  // 使用useEffect来监听状态的变化，并将其保存到localStorage\r"},"react-hook-useReducer_103":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  useEffect(() =\r"},"react-hook-useReducer_104":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    localStorage.setItem(\"count\", state.count);\r"},"react-hook-useReducer_105":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  }, [state.count]);\r"},"react-hook-useReducer_106":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_107":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return (\r"},"react-hook-useReducer_108":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    <"},"react-hook-useReducer_109":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      Count: {state.count}\r"},"react-hook-useReducer_110":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_111":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_112":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    </"},"react-hook-useReducer_113":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  );\r"},"react-hook-useReducer_114":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_115":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_116":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_117":{"title":"精读React hooks（二）：全面掌握useReducer","content":"在这个例子中，我们直接调用函数作为的第二个参数，从而得到初始状态。当React初始化这个组件时，它会执行这个函数并使用其返回值作为初始状态。\r"},"react-hook-useReducer_118":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_119":{"title":"精读React hooks（二）：全面掌握useReducer","content":"如果在第三个参数里进行初始化，代码是这样写：\r"},"react-hook-useReducer_120":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_121":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_122":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function init(initialValue) {\r"},"react-hook-useReducer_123":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  // 尝试从localStorage中读取值\r"},"react-hook-useReducer_124":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const savedCount = localStorage.getItem(\"count\");\r"},"react-hook-useReducer_125":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_126":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  // 如果有值并且可以被解析为数字，则返回它，否则返回initialValue\r"},"react-hook-useReducer_127":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return { count: savedCount ? Number(savedCount) : initialValue };\r"},"react-hook-useReducer_128":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_129":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_130":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function counterReducer(state, action) {\r"},"react-hook-useReducer_131":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  switch (action.type) {\r"},"react-hook-useReducer_132":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case \"INCREMENT\":\r"},"react-hook-useReducer_133":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count + 1 };\r"},"react-hook-useReducer_134":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    case \"DECREMENT\":\r"},"react-hook-useReducer_135":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return { count: state.count - 1 };\r"},"react-hook-useReducer_136":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    default:\r"},"react-hook-useReducer_137":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      return state;\r"},"react-hook-useReducer_138":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  }\r"},"react-hook-useReducer_139":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_140":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_141":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function Counter() {\r"},"react-hook-useReducer_142":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const [state, dispatch] = useReducer(counterReducer, 0, init);\r"},"react-hook-useReducer_143":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_144":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  // 使用useEffect来监听状态的变化，并将其保存到localStorage\r"},"react-hook-useReducer_145":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  useEffect(() =\r"},"react-hook-useReducer_146":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    localStorage.setItem(\"count\", state.count);\r"},"react-hook-useReducer_147":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  }, [state.count]);\r"},"react-hook-useReducer_148":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_149":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return (\r"},"react-hook-useReducer_150":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    <"},"react-hook-useReducer_151":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      Count: {state.count}\r"},"react-hook-useReducer_152":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_153":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      <button onClick={() =\r"},"react-hook-useReducer_154":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    </"},"react-hook-useReducer_155":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  );\r"},"react-hook-useReducer_156":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_157":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_158":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_159":{"title":"精读React hooks（二）：全面掌握useReducer","content":"这两种方式看似差不多，但它们区别很大：\r"},"react-hook-useReducer_160":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_161":{"title":"精读React hooks（二）：全面掌握useReducer","content":"1. ：\r"},"react-hook-useReducer_162":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 直接调用函数作为第二个参数：这个函数会在每次组件渲染时执行。\r"},"react-hook-useReducer_163":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 使用函数：函数只在组件初次渲染时执行一次。\r"},"react-hook-useReducer_164":{"title":"精读React hooks（二）：全面掌握useReducer","content":"2. ：\r"},"react-hook-useReducer_165":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 直接调用函数作为第二个参数：这个函数只能访问到定义它时的作用域内的数据。\r"},"react-hook-useReducer_166":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 使用函数：由于函数接受作为参数，这使得函数具有更大的灵活性，能够基于传入的参数进行计算。\r"},"react-hook-useReducer_167":{"title":"精读React hooks（二）：全面掌握useReducer","content":"3. ：\r"},"react-hook-useReducer_168":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 直接调用函数作为第二个参数：这通常更简洁，适合那些简单的初始化逻辑。\r"},"react-hook-useReducer_169":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 使用函数：它提供了更清晰的代码组织结构，特别是当初始化逻辑相对复杂或需要根据传入的参数变化时。\r"},"react-hook-useReducer_170":{"title":"精读React hooks（二）：全面掌握useReducer","content":"4. ：\r"},"react-hook-useReducer_171":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 直接调用函数作为第二个参数：如果这个函数执行了一些计算密集或副作用的操作，那么在每次组件渲染时都会执行，可能会导致性能问题。\r"},"react-hook-useReducer_172":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    - 使用函数：由于它只在组件的初始化阶段执行一次，所以对于那些计算密集的初始化操作，使用函数可能会更为高效。\r"},"react-hook-useReducer_173":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_174":{"title":"精读React hooks（二）：全面掌握useReducer","content":"总结一下，两者都可以用于初始化状态，如果你的初始化逻辑简单并且没有性能顾虑，可以直接使用一个函数作为的第二个参数，但如果你需要基于传入的参数来决定初始化逻辑或者想确保性能最优的做法，那么应该使用函数。\r"},"react-hook-useReducer_175":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_176":{"title":"精读React hooks（二）：全面掌握useReducer","content":"高级技巧\r"},"react-hook-useReducer_177":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_178":{"title":"精读React hooks（二）：全面掌握useReducer","content":"中间件\r"},"react-hook-useReducer_179":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_180":{"title":"精读React hooks（二）：全面掌握useReducer","content":"就像Redux中的中间件，我们可以利用创建一个中间件方法，支持调用之前或之后执行代码。\r"},"react-hook-useReducer_181":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_182":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_183":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function thunkMiddleware(dispatch) {\r"},"react-hook-useReducer_184":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    return function(action) {\r"},"react-hook-useReducer_185":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        if (typeof action === 'function') {\r"},"react-hook-useReducer_186":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            action(dispatch);\r"},"react-hook-useReducer_187":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        } else {\r"},"react-hook-useReducer_188":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            dispatch(action);\r"},"react-hook-useReducer_189":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        }\r"},"react-hook-useReducer_190":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\t\t\t\t // 代码在dispatch之后执行\r"},"react-hook-useReducer_191":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        console.log(\"Action dispatched at: \", new Date().toISOString());\r"},"react-hook-useReducer_192":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    };\r"},"react-hook-useReducer_193":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_194":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_195":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function fetchData() {\r"},"react-hook-useReducer_196":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    return dispatch =\r"},"react-hook-useReducer_197":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        fetch(\"/api/data\")\r"},"react-hook-useReducer_198":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            .then(res =\r"},"react-hook-useReducer_199":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            .then(data =\r"},"react-hook-useReducer_200":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    };\r"},"react-hook-useReducer_201":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_202":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_203":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function App() {\r"},"react-hook-useReducer_204":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    const [state, unenhancedDispatch] = useReducer(reducer, initialState);\r"},"react-hook-useReducer_205":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    const dispatch = thunkMiddleware(unenhancedDispatch);\r"},"react-hook-useReducer_206":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    \r"},"react-hook-useReducer_207":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    useEffect(() =\r"},"react-hook-useReducer_208":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        dispatch(fetchData());\r"},"react-hook-useReducer_209":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    }, [dispatch]);\r"},"react-hook-useReducer_210":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_211":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_212":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_213":{"title":"精读React hooks（二）：全面掌握useReducer","content":"在这个示例中，通过将原始的包裹在另一个函数内部，中间件为我们提供了一个在真正的状态更新前后注入自定义逻辑的机会。\r"},"react-hook-useReducer_214":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_215":{"title":"精读React hooks（二）：全面掌握useReducer","content":"示例中，我们在调用原始的之前首先检查了的类型。实际上，你可以在这里添加任何你想要的逻辑，例如日志记录、错误处理、请求等。在调用之后，依然可以添加额外的逻辑。\r"},"react-hook-useReducer_216":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_217":{"title":"精读React hooks（二）：全面掌握useReducer","content":"与一起使用\r"},"react-hook-useReducer_218":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_219":{"title":"精读React hooks（二）：全面掌握useReducer","content":"结合和可以创建简单的全局状态管理系统。\r"},"react-hook-useReducer_220":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_221":{"title":"精读React hooks（二）：全面掌握useReducer","content":"我们就以此来尝试创建一个完整的主题切换系统：\r"},"react-hook-useReducer_222":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_223":{"title":"精读React hooks（二）：全面掌握useReducer","content":"首先，定义状态、reducer 和 context:\r"},"react-hook-useReducer_224":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_225":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_226":{"title":"精读React hooks（二）：全面掌握useReducer","content":"const ThemeContext = React.createContext();\r"},"react-hook-useReducer_227":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_228":{"title":"精读React hooks（二）：全面掌握useReducer","content":"const initialState = { theme: 'light' };\r"},"react-hook-useReducer_229":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_230":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function themeReducer(state, action) {\r"},"react-hook-useReducer_231":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    switch (action.type) {\r"},"react-hook-useReducer_232":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        case 'TOGGLE_THEME':\r"},"react-hook-useReducer_233":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            return { theme: state.theme === 'light' ? 'dark' : 'light' };\r"},"react-hook-useReducer_234":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        default:\r"},"react-hook-useReducer_235":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            return state;\r"},"react-hook-useReducer_236":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    }\r"},"react-hook-useReducer_237":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_238":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_239":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_240":{"title":"精读React hooks（二）：全面掌握useReducer","content":"接下来，创建一个Provider组件：\r"},"react-hook-useReducer_241":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_242":{"title":"精读React hooks（二）：全面掌握useReducer","content":"jsx\r"},"react-hook-useReducer_243":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function ThemeProvider({ children }) {\r"},"react-hook-useReducer_244":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    const [state, dispatch] = useReducer(themeReducer, initialState);\r"},"react-hook-useReducer_245":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_246":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    return (\r"},"react-hook-useReducer_247":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        <ThemeContext.Provider value={{ theme: state.theme, toggleTheme: () =\r"},"react-hook-useReducer_248":{"title":"精读React hooks（二）：全面掌握useReducer","content":"            {children}\r"},"react-hook-useReducer_249":{"title":"精读React hooks（二）：全面掌握useReducer","content":"        </ThemeContext.Provider"},"react-hook-useReducer_250":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    );\r"},"react-hook-useReducer_251":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_252":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_253":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_254":{"title":"精读React hooks（二）：全面掌握useReducer","content":"在子组件中，你可以轻松切换和读取主题：\r"},"react-hook-useReducer_255":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_256":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_257":{"title":"精读React hooks（二）：全面掌握useReducer","content":"function ThemedButton() {\r"},"react-hook-useReducer_258":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  const { theme, toggleTheme } = useContext(ThemeContext);\r"},"react-hook-useReducer_259":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_260":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  return (\r"},"react-hook-useReducer_261":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    <button style={{ backgroundColor: theme === 'light' ? '#fff' : '#000' }} onClick={toggleTheme}"},"react-hook-useReducer_262":{"title":"精读React hooks（二）：全面掌握useReducer","content":"      Toggle Theme\r"},"react-hook-useReducer_263":{"title":"精读React hooks（二）：全面掌握useReducer","content":"    </button"},"react-hook-useReducer_264":{"title":"精读React hooks（二）：全面掌握useReducer","content":"  );\r"},"react-hook-useReducer_265":{"title":"精读React hooks（二）：全面掌握useReducer","content":"}\r"},"react-hook-useReducer_266":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_267":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_268":{"title":"精读React hooks（二）：全面掌握useReducer","content":"这部分代码只是示例说明，完整的使用逻辑和 TypeScript 实现的源码已经发布到我的Github：\r"},"react-hook-useReducer_269":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_270":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_271":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_272":{"title":"精读React hooks（二）：全面掌握useReducer","content":"虽然和Redux都采用了action和reducer的模式来处理状态，但它们在实现和使用上有几个主要的区别：\r"},"react-hook-useReducer_273":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_274":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- ：通常在组件或小型应用中使用，而Redux被设计为大型应用的全局状态管理工具。\r"},"react-hook-useReducer_275":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- ：Redux支持中间件，这允许开发者插入自定义逻辑，例如日志、异步操作等。而本身不直接支持，但我们可以模拟中间件的效果。\r"},"react-hook-useReducer_276":{"title":"精读React hooks（二）：全面掌握useReducer","content":"- ：对于简单的状态管理，通常更简单和直接。但当涉及到复杂的状态逻辑和中间件时，Redux可能更具优势。\r"},"react-hook-useReducer_277":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_278":{"title":"精读React hooks（二）：全面掌握useReducer","content":"结语\r"},"react-hook-useReducer_279":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_280":{"title":"精读React hooks（二）：全面掌握useReducer","content":"作为 React 的一部分，它比强大，又比 Redux 轻量，尤其适合中小型应用或组件级状态管理。本文把的用法和注意项完整的讲解了一遍，吃透其中的知识点就能保证你对有足够的了解了。\r"},"react-hook-useReducer_281":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_282":{"title":"精读React hooks（二）：全面掌握useReducer","content":"专栏资源\r"},"react-hook-useReducer_283":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_284":{"title":"精读React hooks（二）：全面掌握useReducer","content":"专栏博客地址：\r"},"react-hook-useReducer_285":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_286":{"title":"精读React hooks（二）：全面掌握useReducer","content":"专栏演示站：\r"},"react-hook-useReducer_287":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_288":{"title":"精读React hooks（二）：全面掌握useReducer","content":"专栏源码仓库：👉\r"},"react-hook-useReducer_289":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_290":{"title":"精读React hooks（二）：全面掌握useReducer","content":"交个朋友：👉\r"},"react-hook-useReducer_291":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_292":{"title":"精读React hooks（二）：全面掌握useReducer","content":"专栏文章列表：\r"},"react-hook-useReducer_293":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_294":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_295":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_296":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_297":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_298":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_299":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_300":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_301":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_302":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_303":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_304":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_305":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_306":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_307":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_308":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_309":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_310":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_311":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_312":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_313":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_314":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_315":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_316":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_317":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_318":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_319":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_320":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_321":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_322":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_323":{"title":"精读React hooks（二）：全面掌握useReducer","content":"\r"},"react-hook-useReducer_324":{"title":"精读React hooks（二）：全面掌握useReducer","content":""},"react-hook-useState":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","display":"\r"},"react-hook-useState_0":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_1":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"自从 React v16.8 版本以来，React Hooks 为我们提供了全新的编写和思考 React 组件的方式。不仅管理状态和生命周期变得更简洁、更强大，Hooks 还引入了并发渲染和其他高级功能。本系列文章将详细探讨每一个 Hook，从基础到高级。首篇，我们将探讨最常用的 hook——。\r"},"react-hook-useState_2":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_3":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"useState 的基本用法\r"},"react-hook-useState_4":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_5":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"主要用于给组件添加状态变量。注意，我们只能在组件的顶层或自定义的 Hooks 中调用。\r"},"react-hook-useState_6":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_7":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"初始化状态\r"},"react-hook-useState_8":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_9":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_10":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_11":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_12":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"const [age, setAge] = useState(42);\r"},"react-hook-useState_13":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_14":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_15":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_16":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_17":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"对于需要计算得到的初始状态，可以使用函数传递给。这样，函数只在初次渲染时执行，而非每次渲染。\r"},"react-hook-useState_18":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_19":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_20":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"const [todos, setTodos] = useState(createInitialTodos); // 注意：传递函数本身，非执行结果\r"},"react-hook-useState_21":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_22":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_23":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"更新状态\r"},"react-hook-useState_24":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_25":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"直接更新vs函数式更新\r"},"react-hook-useState_26":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_27":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"大部分情况，直接更新状态即可：\r"},"react-hook-useState_28":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_29":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_30":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"setAge(newState);\r"},"react-hook-useState_31":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_32":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_33":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"但当新状态依赖于前一个状态时，推荐使用函数式更新。这确保了更新准确性，特别是在并发模式下。\r"},"react-hook-useState_34":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_35":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_36":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"setState(prevState =\r"},"react-hook-useState_37":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_38":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_39":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"以下两个例子展示函数式更新的重要性：\r"},"react-hook-useState_40":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_41":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_42":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 示例1: 使用函数式更新\r"},"react-hook-useState_43":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"import { useState } from 'react';\r"},"react-hook-useState_44":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_45":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"export default function Counter() {\r"},"react-hook-useState_46":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  const [age, setAge] = useState(42);\r"},"react-hook-useState_47":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_48":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  function increment() {\r"},"react-hook-useState_49":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    setAge(a =\r"},"react-hook-useState_50":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  }\r"},"react-hook-useState_51":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_52":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  return (\r"},"react-hook-useState_53":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    <"},"react-hook-useState_54":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      <h1>Your age: {age}</h1"},"react-hook-useState_55":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      <button onClick={() =\r"},"react-hook-useState_56":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_57":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_58":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_59":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      }}>+3</button"},"react-hook-useState_60":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    </"},"react-hook-useState_61":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  );\r"},"react-hook-useState_62":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"}\r"},"react-hook-useState_63":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 结果：点击 +3 时，age 更新为 45。\r"},"react-hook-useState_64":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_65":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_66":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_67":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 示例2: 使用直接更新\r"},"react-hook-useState_68":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"import { useState } from 'react';\r"},"react-hook-useState_69":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_70":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"export default function Counter() {\r"},"react-hook-useState_71":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  const [age, setAge] = useState(42);\r"},"react-hook-useState_72":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  function increment() {\r"},"react-hook-useState_73":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    setAge(age + 1); // 直接更新\r"},"react-hook-useState_74":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  }\r"},"react-hook-useState_75":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  return (\r"},"react-hook-useState_76":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    <"},"react-hook-useState_77":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      <h1>Your age: {age}</h1"},"react-hook-useState_78":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      <button onClick={() =\r"},"react-hook-useState_79":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_80":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_81":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"        increment();\r"},"react-hook-useState_82":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"      }}>+3</button"},"react-hook-useState_83":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    </"},"react-hook-useState_84":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  );\r"},"react-hook-useState_85":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"}\r"},"react-hook-useState_86":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 结果：点击 +3 时，可能只更新为 43。\r"},"react-hook-useState_87":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_88":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_89":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"对象与数组的更新\r"},"react-hook-useState_90":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_91":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"对象和数组的更新需要创建新的引用，而不是直接修改原状态。\r"},"react-hook-useState_92":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_93":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_94":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"setForm({\r"},"react-hook-useState_95":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  ...form,\r"},"react-hook-useState_96":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  name: e.target.value // 更新这个属性\r"},"react-hook-useState_97":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"});\r"},"react-hook-useState_98":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_99":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 错误示例：\r"},"react-hook-useState_100":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// form.name = e.target.value\r"},"react-hook-useState_101":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_102":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_103":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_104":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"setTodos([\r"},"react-hook-useState_105":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  ...todos,\r"},"react-hook-useState_106":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  {\r"},"react-hook-useState_107":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    id: nextId++,\r"},"react-hook-useState_108":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    title: title,\r"},"react-hook-useState_109":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"    done: false\r"},"react-hook-useState_110":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  }\r"},"react-hook-useState_111":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"]);\r"},"react-hook-useState_112":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_113":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// 错误示例\r"},"react-hook-useState_114":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// todos.push({\r"},"react-hook-useState_115":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"//   id: nextId++,\r"},"react-hook-useState_116":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"//   title: title,\r"},"react-hook-useState_117":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"//   done: false\r"},"react-hook-useState_118":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// });\r"},"react-hook-useState_119":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"// setTodos(todos);\r"},"react-hook-useState_120":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_121":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_122":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"函数的更新\r"},"react-hook-useState_123":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_124":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"把函数存储到state里是很少见的做法，但某些情况下，我们有可能需要这么做。\r"},"react-hook-useState_125":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_126":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"先看一个错误的示例：\r"},"react-hook-useState_127":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_128":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_129":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"const [fn, setFn] = useState(someFunction);\r"},"react-hook-useState_130":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_131":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"function handleClick() {\r"},"react-hook-useState_132":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  setFn(someOtherFunction);\r"},"react-hook-useState_133":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"}\r"},"react-hook-useState_134":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_135":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_136":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"根据上文，我们知道这样的用法是把函数的返回值存储或更新到状态中，并不是把函数存储到状态中。\r"},"react-hook-useState_137":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_138":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"如果你想在状态中存储一个函数，你需要使用一个箭头函数来“包裹”它。这是正确的做法：\r"},"react-hook-useState_139":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_140":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"tsx\r"},"react-hook-useState_141":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"const [fn, setFn] = useState(() =\r"},"react-hook-useState_142":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_143":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"function handleClick() {\r"},"react-hook-useState_144":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"  setFn(() =\r"},"react-hook-useState_145":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"}\r"},"react-hook-useState_146":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_147":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_148":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"那么我们什么时候会需要这样使用？这里介绍一些可能的场景：\r"},"react-hook-useState_149":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_150":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"1. :\r"},"react-hook-useState_151":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"你可能有一个组件，它的行为可以由父组件进行配置。在这种情况下，你可以将函数作为状态存储，以便在组件的生命周期中更改或更新它。\r"},"react-hook-useState_152":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"2. :\r"},"react-hook-useState_153":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"在某些情况下，你可能需要基于组件的某些属性或状态动态创建函数。将这些函数存储为状态可以确保你只在必要时重新创建它们。\r"},"react-hook-useState_154":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"3. :\r"},"react-hook-useState_155":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"如果你的组件与外部系统交互，并且需要提供回调函数，你可能希望在状态中存储这些回调函数，以便在适当的时候更改或更新它们。\r"},"react-hook-useState_156":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"4. :\r"},"react-hook-useState_157":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"在某些情况下，你可能想要在将来的某个时间点执行函数（例如，使用）。将函数存储为状态可以确保即使组件的其他部分发生变化，你也可以访问到最初的函数引用。\r"},"react-hook-useState_158":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"5. :\r"},"react-hook-useState_159":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"有些第三方库可能要求你提供并在后续更改函数。在这种情况下，将函数作为状态存储可能会更加方便。\r"},"react-hook-useState_160":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_161":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"结语\r"},"react-hook-useState_162":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_163":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"在这篇文章中，我们深入探讨了 React 的Hook，从它的基础用法到一些进阶技巧。掌握好是走向 React 高手之路的关键一步。在未来的文章中，我们还将继续探讨其他的 Hooks。\r"},"react-hook-useState_164":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_165":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"专栏资源\r"},"react-hook-useState_166":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_167":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"专栏博客地址：\r"},"react-hook-useState_168":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_169":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"专栏演示站：\r"},"react-hook-useState_170":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_171":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"专栏源码仓库：👉\r"},"react-hook-useState_172":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_173":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"交个朋友：👉\r"},"react-hook-useState_174":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_175":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"专栏文章列表：\r"},"react-hook-useState_176":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_177":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_178":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_179":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_180":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_181":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_182":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_183":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_184":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_185":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_186":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_187":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_188":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_189":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_190":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_191":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_192":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_193":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_194":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_195":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_196":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_197":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_198":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_199":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_200":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_201":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_202":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_203":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_204":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_205":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_206":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":"\r"},"react-hook-useState_207":{"title":"精读React hooks（一）：useState 的几个基础用法和进阶技巧","content":""},"nextjs-csr-ssr-ssg-isr":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","display":"\r"},"nextjs-csr-ssr-ssg-isr_0":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_1":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"在 Web 前端的圈子里，渲染是一个无法绕开的概念。渲染决定了用户能够看到什么，以及他们能多快看到。但是，所有的渲染不都是相同的。随着现代前端开发的演进，我们有了多种不同的渲染方式，每种都有其独特的优势和挑战。\r"},"nextjs-csr-ssr-ssg-isr_2":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_3":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"Next.js 作为 React 的上层框架，为开发者提供了一系列强大的渲染方式——从传统的客户端渲染（CSR）到服务器端渲染（SSR），再到静态网站生成（SSG）和最新的增量静态生成（ISR）：每一种方法都有其适用的场景。\r"},"nextjs-csr-ssr-ssg-isr_4":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_5":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"思考一下，为什么我们需要这么多的渲染策略？它们之间有什么不同？如何为你的项目选择合适的策略？在本篇文章中，我们将详细探讨这些问题，一起来深入了解 Next.js 的渲染策略。\r"},"nextjs-csr-ssr-ssg-isr_6":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_7":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"客户端渲染 (CSR)\r"},"nextjs-csr-ssr-ssg-isr_8":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_9":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"客户端渲染（CSR）是 React 应用程序的默认渲染策略。在 CSR 中，应用首次渲染会加载一个最小的 HTML 文件，其中包括负责渲染 DOM 的 JavaScript 文件。然后，由浏览器执行 JavaScript，从 API 获取数据并完成渲染。\r"},"nextjs-csr-ssr-ssg-isr_10":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_11":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"Next.js 中在 useEffect() 中请求数据就属于 CSR：\r"},"nextjs-csr-ssr-ssg-isr_12":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_13":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_14":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"import React, { useState, useEffect } from 'react'\r"},"nextjs-csr-ssr-ssg-isr_15":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_16":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export function Page() {\r"},"nextjs-csr-ssr-ssg-isr_17":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const [data, setData] = useState(null)\r"},"nextjs-csr-ssr-ssg-isr_18":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_19":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  useEffect(() =\r"},"nextjs-csr-ssr-ssg-isr_20":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    const fetchData = async () =\r"},"nextjs-csr-ssr-ssg-isr_21":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      const response = await fetch('https://nextjs.weijunext.com/data')\r"},"nextjs-csr-ssr-ssg-isr_22":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      if (!response.ok) {\r"},"nextjs-csr-ssr-ssg-isr_23":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"        throw new Error()\r"},"nextjs-csr-ssr-ssg-isr_24":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      }\r"},"nextjs-csr-ssr-ssg-isr_25":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      const result = await response.json()\r"},"nextjs-csr-ssr-ssg-isr_26":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      setData(result)\r"},"nextjs-csr-ssr-ssg-isr_27":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    }\r"},"nextjs-csr-ssr-ssg-isr_28":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_29":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    fetchData().catch((e) =\r"},"nextjs-csr-ssr-ssg-isr_30":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      // handle the error as needed\r"},"nextjs-csr-ssr-ssg-isr_31":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      console.error('An error occurred while fetching the data: ', e)\r"},"nextjs-csr-ssr-ssg-isr_32":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    })\r"},"nextjs-csr-ssr-ssg-isr_33":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  }, [])\r"},"nextjs-csr-ssr-ssg-isr_34":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_35":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return <p>{data ?  : 'Loading...'}</p"},"nextjs-csr-ssr-ssg-isr_36":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_37":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_38":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_39":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"这个示例中，在请求完成前会显示Loading，请求完成后就会把请求结果渲染到页面。\r"},"nextjs-csr-ssr-ssg-isr_40":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_41":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"优缺点\r"},"nextjs-csr-ssr-ssg-isr_42":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_43":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_44":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_45":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 服务器负载较轻，因为大部分工作都在客户端完成。\r"},"nextjs-csr-ssr-ssg-isr_46":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 适用于高度交互的应用，如 SPA (单页应用)。\r"},"nextjs-csr-ssr-ssg-isr_47":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 一旦页面加载完成，页面间的导航和互动会非常迅速。\r"},"nextjs-csr-ssr-ssg-isr_48":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_49":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_50":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_51":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 首次加载时间可能较长，因为需要下载、解析和执行大量 JavaScript。\r"},"nextjs-csr-ssr-ssg-isr_52":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 不利于 SEO，因为搜索引擎可能只看到空的 HTML，而不是实际内容。\r"},"nextjs-csr-ssr-ssg-isr_53":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 增加了客户端的计算负担，可能导致手机等低功耗设备的性能问题。\r"},"nextjs-csr-ssr-ssg-isr_54":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_55":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"服务器端渲染 (SSR)\r"},"nextjs-csr-ssr-ssg-isr_56":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_57":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"Next.js 中，要使用服务器端渲染，需要导出一个名为  的异步函数。服务器将在每次请求页面时优先调用该函数。\r"},"nextjs-csr-ssr-ssg-isr_58":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_59":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"例如，假设页面需要预渲染频繁更新的数据（如下截图的页面访问量）。那你就可以编写  来获取这些数据并将其传递给页面\r"},"nextjs-csr-ssr-ssg-isr_60":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_61":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_62":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_63":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_64":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export default function Page({ data }) {\r"},"nextjs-csr-ssr-ssg-isr_65":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Render data...\r"},"nextjs-csr-ssr-ssg-isr_66":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_67":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\t<div>{data.view}</div"},"nextjs-csr-ssr-ssg-isr_68":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_69":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_70":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This gets called on every request\r"},"nextjs-csr-ssr-ssg-isr_71":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getServerSideProps() {\r"},"nextjs-csr-ssr-ssg-isr_72":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Fetch data from API\r"},"nextjs-csr-ssr-ssg-isr_73":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch()\r"},"nextjs-csr-ssr-ssg-isr_74":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const data = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_75":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_76":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Pass data to the page via props\r"},"nextjs-csr-ssr-ssg-isr_77":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return { props: { data } }\r"},"nextjs-csr-ssr-ssg-isr_78":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_79":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_80":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_81":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"这个示例中，页面访问量的数据请求无法再浏览器控制台看到，因为是在服务端执行的，页面渲染的时候就可以马上拿到访问量数据，不会像 CSR 那样有延迟。\r"},"nextjs-csr-ssr-ssg-isr_82":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_83":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"优缺点\r"},"nextjs-csr-ssr-ssg-isr_84":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_85":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_86":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_87":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 首次加载速度快，因为浏览器立即获得完整的页面内容。\r"},"nextjs-csr-ssr-ssg-isr_88":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 有助于 SEO，因为搜索引擎可以直接爬取和索引完整的页面内容。\r"},"nextjs-csr-ssr-ssg-isr_89":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 减轻了客户端的计算负担。\r"},"nextjs-csr-ssr-ssg-isr_90":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_91":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_92":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_93":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 服务器压力较大，尤其是在高流量情况下。\r"},"nextjs-csr-ssr-ssg-isr_94":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 总体延迟可能增加，因为每次页面请求都需要服务器处理。\r"},"nextjs-csr-ssr-ssg-isr_95":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 可能需要额外的服务器资源和优化。\r"},"nextjs-csr-ssr-ssg-isr_96":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_97":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"静态网站生成 (SSG)\r"},"nextjs-csr-ssr-ssg-isr_98":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_99":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"如果页面静态网站生成 (SSG)，页面 HTML 将在 build 时生成。也就是说，如果你的页面已经发布到生产，这时想修改页面内容，只能重新 build 来完成更新。\r"},"nextjs-csr-ssr-ssg-isr_100":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_101":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"Next.js 支持在 build 时生成带数据或者不带数据的 HTML，来看示例，\r"},"nextjs-csr-ssr-ssg-isr_102":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_103":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"不带数据的静态页面\r"},"nextjs-csr-ssr-ssg-isr_104":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_105":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_106":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"function About() {\r"},"nextjs-csr-ssr-ssg-isr_107":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return <div>About</div"},"nextjs-csr-ssr-ssg-isr_108":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_109":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_110":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export default About\r"},"nextjs-csr-ssr-ssg-isr_111":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_112":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_113":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"带数据的静态页面\r"},"nextjs-csr-ssr-ssg-isr_114":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_115":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"带数据的静态页面又区分为两种，一种是页面内容依赖数据，一种是页面路径依赖数据。\r"},"nextjs-csr-ssr-ssg-isr_116":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_117":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"页面内容依赖数据\r"},"nextjs-csr-ssr-ssg-isr_118":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_119":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"页面内容依赖数据，可以使用完成构建时的数据拉取\r"},"nextjs-csr-ssr-ssg-isr_120":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_121":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_122":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export default function Blog({ posts }) {\r"},"nextjs-csr-ssr-ssg-isr_123":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return (\r"},"nextjs-csr-ssr-ssg-isr_124":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    <ul"},"nextjs-csr-ssr-ssg-isr_125":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      {posts.map((post) =\r"},"nextjs-csr-ssr-ssg-isr_126":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"        <li>{post.title}</li"},"nextjs-csr-ssr-ssg-isr_127":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      ))}\r"},"nextjs-csr-ssr-ssg-isr_128":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    </ul"},"nextjs-csr-ssr-ssg-isr_129":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  )\r"},"nextjs-csr-ssr-ssg-isr_130":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_131":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_132":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This function gets called at build time\r"},"nextjs-csr-ssr-ssg-isr_133":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getStaticProps() {\r"},"nextjs-csr-ssr-ssg-isr_134":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Call an external API endpoint to get posts\r"},"nextjs-csr-ssr-ssg-isr_135":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch('https://.../posts')\r"},"nextjs-csr-ssr-ssg-isr_136":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const posts = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_137":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_138":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // By returning { props: { posts } }, the Blog component\r"},"nextjs-csr-ssr-ssg-isr_139":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // will receive  as a prop at build time\r"},"nextjs-csr-ssr-ssg-isr_140":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return {\r"},"nextjs-csr-ssr-ssg-isr_141":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    props: {\r"},"nextjs-csr-ssr-ssg-isr_142":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      posts,\r"},"nextjs-csr-ssr-ssg-isr_143":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    },\r"},"nextjs-csr-ssr-ssg-isr_144":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  }\r"},"nextjs-csr-ssr-ssg-isr_145":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_146":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_147":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_148":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"只要页面内使用了，那么 Next.js 都将在 build 时调用并获取数据，然后把数据传给客户端（即 Blog 组件），最后把客户端代码打包成 HTML。\r"},"nextjs-csr-ssr-ssg-isr_149":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_150":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"页面路径依赖数据\r"},"nextjs-csr-ssr-ssg-isr_151":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_152":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"页面路径依赖数据，要同时使用和完成构建时的数据拉取。\r"},"nextjs-csr-ssr-ssg-isr_153":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_154":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"假设你创建了一个动态路由文件 ，路由会根据 id 显示博客文章，而这个 id 是什么是由服务端告知客户端的。\r"},"nextjs-csr-ssr-ssg-isr_155":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_156":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"和是这样联合使用的：\r"},"nextjs-csr-ssr-ssg-isr_157":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_158":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_159":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export default function Post({ post }) {\r"},"nextjs-csr-ssr-ssg-isr_160":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Render post...\r"},"nextjs-csr-ssr-ssg-isr_161":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_162":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_163":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This function gets called at build time\r"},"nextjs-csr-ssr-ssg-isr_164":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getStaticPaths() {\r"},"nextjs-csr-ssr-ssg-isr_165":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Call an external API endpoint to get posts\r"},"nextjs-csr-ssr-ssg-isr_166":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch('https://.../posts')\r"},"nextjs-csr-ssr-ssg-isr_167":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const posts = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_168":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_169":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Get the paths we want to pre-render based on posts\r"},"nextjs-csr-ssr-ssg-isr_170":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const paths = posts.map((post) =\r"},"nextjs-csr-ssr-ssg-isr_171":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    params: { id: post.id },\r"},"nextjs-csr-ssr-ssg-isr_172":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  }))\r"},"nextjs-csr-ssr-ssg-isr_173":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_174":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // We'll pre-render only these paths at build time.\r"},"nextjs-csr-ssr-ssg-isr_175":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // { fallback: false } means other routes should 404.\r"},"nextjs-csr-ssr-ssg-isr_176":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return { paths, fallback: false }\r"},"nextjs-csr-ssr-ssg-isr_177":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_178":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_179":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This also gets called at build time\r"},"nextjs-csr-ssr-ssg-isr_180":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getStaticProps({ params }) {\r"},"nextjs-csr-ssr-ssg-isr_181":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // params contains the post .\r"},"nextjs-csr-ssr-ssg-isr_182":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // If the route is like /posts/1, then params.id is 1\r"},"nextjs-csr-ssr-ssg-isr_183":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch()\r"},"nextjs-csr-ssr-ssg-isr_184":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const post = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_185":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_186":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Pass post data to the page via props\r"},"nextjs-csr-ssr-ssg-isr_187":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return { props: { post } }\r"},"nextjs-csr-ssr-ssg-isr_188":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_189":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_190":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_191":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"我们首先要使用来获取需要预渲染的路径，然后再使用获取带有此 id 的博客文章，这样 build 时就能完成依次调用和来实现动态路由的静态页面渲染。\r"},"nextjs-csr-ssr-ssg-isr_192":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_193":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"SSG 无疑是几种渲染方式里最快的，所以你应该在较少变动数据的页面尽量使用 SSG。\r"},"nextjs-csr-ssr-ssg-isr_194":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_195":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"优缺点\r"},"nextjs-csr-ssr-ssg-isr_196":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_197":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_198":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_199":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 极快的加载速度，因为服务器仅提供预生成的文件。\r"},"nextjs-csr-ssr-ssg-isr_200":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 减轻了服务器压力，因为不需要实时渲染。\r"},"nextjs-csr-ssr-ssg-isr_201":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 非常适合内容不经常变动的网站或应用。\r"},"nextjs-csr-ssr-ssg-isr_202":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_203":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_204":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_205":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 不适合内容经常变动或需要实时更新的应用。\r"},"nextjs-csr-ssr-ssg-isr_206":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 需要在内容变更时重新生成所有页面。\r"},"nextjs-csr-ssr-ssg-isr_207":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 可能需要额外的构建和部署步骤。\r"},"nextjs-csr-ssr-ssg-isr_208":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_209":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"增量静态生成 (ISR)\r"},"nextjs-csr-ssr-ssg-isr_210":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_211":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"增量静态再生（ISR）建立在 SSG 的基础上，同时又有 SSR 的优点，ISR 允许页面的某些部分是静态的，而其他部分则可以在数据发生变化时动态渲染。ISR 在性能和内容更新之间取得了平衡，因此适用于内容经常更新的站点。\r"},"nextjs-csr-ssr-ssg-isr_212":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_213":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"先来看一个示例：\r"},"nextjs-csr-ssr-ssg-isr_214":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_215":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"tsx\r"},"nextjs-csr-ssr-ssg-isr_216":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"function Blog({ posts }) {\r"},"nextjs-csr-ssr-ssg-isr_217":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return (\r"},"nextjs-csr-ssr-ssg-isr_218":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    <ul"},"nextjs-csr-ssr-ssg-isr_219":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      {posts.map((post) =\r"},"nextjs-csr-ssr-ssg-isr_220":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"        <li key={post.id}>{post.title}</li"},"nextjs-csr-ssr-ssg-isr_221":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      ))}\r"},"nextjs-csr-ssr-ssg-isr_222":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    </ul"},"nextjs-csr-ssr-ssg-isr_223":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  )\r"},"nextjs-csr-ssr-ssg-isr_224":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_225":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_226":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This function gets called at build time on server-side.\r"},"nextjs-csr-ssr-ssg-isr_227":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// It may be called again, on a serverless function, if\r"},"nextjs-csr-ssr-ssg-isr_228":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// revalidation is enabled and a new request comes in\r"},"nextjs-csr-ssr-ssg-isr_229":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getStaticProps() {\r"},"nextjs-csr-ssr-ssg-isr_230":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch('https://.../posts')\r"},"nextjs-csr-ssr-ssg-isr_231":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const posts = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_232":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_233":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return {\r"},"nextjs-csr-ssr-ssg-isr_234":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    props: {\r"},"nextjs-csr-ssr-ssg-isr_235":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"      posts,\r"},"nextjs-csr-ssr-ssg-isr_236":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    },\r"},"nextjs-csr-ssr-ssg-isr_237":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    // Next.js will attempt to re-generate the page:\r"},"nextjs-csr-ssr-ssg-isr_238":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    // - When a request comes in\r"},"nextjs-csr-ssr-ssg-isr_239":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    // - At most once every 60 seconds\r"},"nextjs-csr-ssr-ssg-isr_240":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    revalidate: 60, // In seconds\r"},"nextjs-csr-ssr-ssg-isr_241":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  }\r"},"nextjs-csr-ssr-ssg-isr_242":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_243":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_244":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// This function gets called at build time on server-side.\r"},"nextjs-csr-ssr-ssg-isr_245":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// It may be called again, on a serverless function, if\r"},"nextjs-csr-ssr-ssg-isr_246":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"// the path has not been generated.\r"},"nextjs-csr-ssr-ssg-isr_247":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export async function getStaticPaths() {\r"},"nextjs-csr-ssr-ssg-isr_248":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const res = await fetch('https://.../posts')\r"},"nextjs-csr-ssr-ssg-isr_249":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const posts = await res.json()\r"},"nextjs-csr-ssr-ssg-isr_250":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_251":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // Get the paths we want to pre-render based on posts\r"},"nextjs-csr-ssr-ssg-isr_252":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  const paths = posts.map((post) =\r"},"nextjs-csr-ssr-ssg-isr_253":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    params: { id: post.id },\r"},"nextjs-csr-ssr-ssg-isr_254":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  }))\r"},"nextjs-csr-ssr-ssg-isr_255":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_256":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // We'll pre-render only these paths at build time.\r"},"nextjs-csr-ssr-ssg-isr_257":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // { fallback: 'blocking' } will server-render pages\r"},"nextjs-csr-ssr-ssg-isr_258":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  // on-demand if the path doesn't exist.\r"},"nextjs-csr-ssr-ssg-isr_259":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"  return { paths, fallback: 'blocking' }\r"},"nextjs-csr-ssr-ssg-isr_260":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"}\r"},"nextjs-csr-ssr-ssg-isr_261":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":" \r"},"nextjs-csr-ssr-ssg-isr_262":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"export default Blog\r"},"nextjs-csr-ssr-ssg-isr_263":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_264":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_265":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"这个示例和 SSG 的示例大同小异，为什么能做到增量渲染呢？核心就在于和。\r"},"nextjs-csr-ssr-ssg-isr_266":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_267":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"当我们使用 选项时，Next.js 会在 build 时调用一次，部署生产后，Next.js 还会在达到设置的时间间隔后再次运行，以此更新内容。\r"},"nextjs-csr-ssr-ssg-isr_268":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_269":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"则是用来决定当用户请求一个在构建时未被预渲染的路径时，Next.js 应当怎么处理。它有三种可选值：、 和 。\r"},"nextjs-csr-ssr-ssg-isr_270":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_271":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. :\r"},"nextjs-csr-ssr-ssg-isr_272":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 当用户请求一个在构建时未被预渲染的路径时，将立即返回 404 页面。\r"},"nextjs-csr-ssr-ssg-isr_273":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 这意味着如果路径不在返回的列表中，用户会看到一个 404 错误。\r"},"nextjs-csr-ssr-ssg-isr_274":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. :\r"},"nextjs-csr-ssr-ssg-isr_275":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 当用户请求一个未被预渲染的路径时，Next.js 会立即提供一个“fallback”版本的页面。这通常是一个空页面或一个加载状态。\r"},"nextjs-csr-ssr-ssg-isr_276":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 然后，Next.js 会在后台异步地运行来获取页面的数据，并重新渲染页面。一旦页面准备好，它将替换“fallback”版本。\r"},"nextjs-csr-ssr-ssg-isr_277":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 这允许页面几乎立即可用，但可能不显示任何实际内容，直到数据被加载并页面被渲染。\r"},"nextjs-csr-ssr-ssg-isr_278":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. :\r"},"nextjs-csr-ssr-ssg-isr_279":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 当用户请求一个未被预渲染的路径时，Next.js 会等待完成并生成该页面，然后再提供给用户。\r"},"nextjs-csr-ssr-ssg-isr_280":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"    - 这意味着用户会等待，直到页面准备好，但他们会立即看到完整的页面内容，而不是一个空页面或加载状态。\r"},"nextjs-csr-ssr-ssg-isr_281":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_282":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"优缺点\r"},"nextjs-csr-ssr-ssg-isr_283":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_284":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_285":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_286":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 结合了 SSR 的实时性和 SSG 的速度优势。\r"},"nextjs-csr-ssr-ssg-isr_287":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. 适合内容经常变动但不需要实时更新的应用。\r"},"nextjs-csr-ssr-ssg-isr_288":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. 减轻了服务器的压力，同时提供了实时内容。\r"},"nextjs-csr-ssr-ssg-isr_289":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_290":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_291":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_292":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. 相比于 SSG，初次请求可能需要更长的加载时间。\r"},"nextjs-csr-ssr-ssg-isr_293":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_294":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"如何选择合适的渲染策略建议\r"},"nextjs-csr-ssr-ssg-isr_295":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_296":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"1. ：如果你正在开发一个如单页应用（SPA）那样高度交互的应用， 可能是最佳选择。一旦页面加载，用户的任何交互都将非常迅速，无需再次从服务器加载内容。\r"},"nextjs-csr-ssr-ssg-isr_297":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"2. ：如果你的应用依赖于搜索引擎优化， 或  是更好的选择。这两种方法都会提供完整的 HTML，有助于搜索引擎索引。\r"},"nextjs-csr-ssr-ssg-isr_298":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"3. ：例如博客或新闻网站， 是一个很好的选择。它允许内容在背景中更新，而用户仍然可以快速访问页面。\r"},"nextjs-csr-ssr-ssg-isr_299":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"4. ：对于内容很少或根本不更改的网站， 是最佳选择。一次生成，无需再次渲染，提供了最快的加载速度。\r"},"nextjs-csr-ssr-ssg-isr_300":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"5. ：Next.js 允许你在同一个应用中混合使用不同的渲染策略。例如，你可以使用 SSR 渲染首页，使用 SSG 渲染博客部分，而使用 CSR 渲染用户交互部分。\r"},"nextjs-csr-ssr-ssg-isr_301":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_302":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"结语\r"},"nextjs-csr-ssr-ssg-isr_303":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_304":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"CSR、SSR、SSG、ISR 这些看起来让人头疼的概念，实际上都有适合自己的场景，只要分析场景，结合文档使用就不会再迷茫。\r"},"nextjs-csr-ssr-ssg-isr_305":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_306":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"专栏资源\r"},"nextjs-csr-ssr-ssg-isr_307":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_308":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"nextjs-csr-ssr-ssg-isr_309":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_310":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"专栏地址：👉\r"},"nextjs-csr-ssr-ssg-isr_311":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_312":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"专栏演示站：👉\r"},"nextjs-csr-ssr-ssg-isr_313":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_314":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"专栏源码仓库：👉\r"},"nextjs-csr-ssr-ssg-isr_315":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"\r"},"nextjs-csr-ssr-ssg-isr_316":{"title":"讲清楚 Next.js 里的 CSR, SSR, SSG 和 ISR","content":"交个朋友：👉"},"using-upstash-as-redis-server":{"title":"用 Upstash 作为你的 Redis 服务器","content":"用 Upstash 作为你的 Redis 服务器","display":"\r"},"using-upstash-as-redis-server_0":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_1":{"title":"用 Upstash 作为你的 Redis 服务器","content":"本文继续我们的实战教程（），今天给大家推荐一个免费的 Redis 服务器，它叫 Upstash。\r"},"using-upstash-as-redis-server_2":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_3":{"title":"用 Upstash 作为你的 Redis 服务器","content":"如果你正在开发个人产品，那么请忘掉 Redis 的配置和各种安全措施，用 Upstash，什么 RDB 和 AOF、雪崩和击穿、密码和权限，这些 Upstash 会帮你搞定，你只需要关注你要实现的功能。\r"},"using-upstash-as-redis-server_4":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_5":{"title":"用 Upstash 作为你的 Redis 服务器","content":"本文假定你已了解 Redis 的基本概念，阅读完本文，你将学习到：\r"},"using-upstash-as-redis-server_6":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_7":{"title":"用 Upstash 作为你的 Redis 服务器","content":"- 创建一个 Upstash 的 Redis 数据库\r"},"using-upstash-as-redis-server_8":{"title":"用 Upstash 作为你的 Redis 服务器","content":"- NextJS 服务端组件和 Redis 交互\r"},"using-upstash-as-redis-server_9":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_10":{"title":"用 Upstash 作为你的 Redis 服务器","content":"创建 Redis 数据库\r"},"using-upstash-as-redis-server_11":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_12":{"title":"用 Upstash 作为你的 Redis 服务器","content":"万事开头需注册，请到 https://upstash.com/ 注册登录，开始咱们的教程。\r"},"using-upstash-as-redis-server_13":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_14":{"title":"用 Upstash 作为你的 Redis 服务器","content":"首次进入后台，看到的是这样的界面\r"},"using-upstash-as-redis-server_15":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_16":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_17":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_18":{"title":"用 Upstash 作为你的 Redis 服务器","content":"创建 Redis 数据库\r"},"using-upstash-as-redis-server_19":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_20":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_21":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_22":{"title":"用 Upstash 作为你的 Redis 服务器","content":"稍等片刻就创建完成了，Redis 信息一览无余。\r"},"using-upstash-as-redis-server_23":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_24":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_25":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_26":{"title":"用 Upstash 作为你的 Redis 服务器","content":"这种方式创建Redis，相信要比我们手动在本地安装Redis、分配db要流畅的多吧。下面进入正题，NextJS中 怎么使用 Upstash 的 Redis。\r"},"using-upstash-as-redis-server_27":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_28":{"title":"用 Upstash 作为你的 Redis 服务器","content":"服务端组件调用\r"},"using-upstash-as-redis-server_29":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_30":{"title":"用 Upstash 作为你的 Redis 服务器","content":"先安装依赖\r"},"using-upstash-as-redis-server_31":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_32":{"title":"用 Upstash 作为你的 Redis 服务器","content":"bash\r"},"using-upstash-as-redis-server_33":{"title":"用 Upstash 作为你的 Redis 服务器","content":"yarn add @upstash/redis\r"},"using-upstash-as-redis-server_34":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_35":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_36":{"title":"用 Upstash 作为你的 Redis 服务器","content":"实际项目中，我们会在多个地方使用redis，所以应该把redis配置写到lib里，方便调用\r"},"using-upstash-as-redis-server_37":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_38":{"title":"用 Upstash 作为你的 Redis 服务器","content":"tsx\r"},"using-upstash-as-redis-server_39":{"title":"用 Upstash 作为你的 Redis 服务器","content":"// @/lib/redis.ts\r"},"using-upstash-as-redis-server_40":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_41":{"title":"用 Upstash 作为你的 Redis 服务器","content":"import { Redis } from '@upstash/redis'\r"},"using-upstash-as-redis-server_42":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_43":{"title":"用 Upstash 作为你的 Redis 服务器","content":"const redis = new Redis({\r"},"using-upstash-as-redis-server_44":{"title":"用 Upstash 作为你的 Redis 服务器","content":"  url: ,\r"},"using-upstash-as-redis-server_45":{"title":"用 Upstash 作为你的 Redis 服务器","content":"  token: ,\r"},"using-upstash-as-redis-server_46":{"title":"用 Upstash 作为你的 Redis 服务器","content":"})\r"},"using-upstash-as-redis-server_47":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_48":{"title":"用 Upstash 作为你的 Redis 服务器","content":"export default redis\r"},"using-upstash-as-redis-server_49":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_50":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_51":{"title":"用 Upstash 作为你的 Redis 服务器","content":"在服务端组件中直接和 redis 交互\r"},"using-upstash-as-redis-server_52":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_53":{"title":"用 Upstash 作为你的 Redis 服务器","content":"tsx\r"},"using-upstash-as-redis-server_54":{"title":"用 Upstash 作为你的 Redis 服务器","content":"// @/app/pages.tsx\r"},"using-upstash-as-redis-server_55":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_56":{"title":"用 Upstash 作为你的 Redis 服务器","content":"……\r"},"using-upstash-as-redis-server_57":{"title":"用 Upstash 作为你的 Redis 服务器","content":"import redis from \"@/lib/redis\";\r"},"using-upstash-as-redis-server_58":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_59":{"title":"用 Upstash 作为你的 Redis 服务器","content":"export default async function Home() {\r"},"using-upstash-as-redis-server_60":{"title":"用 Upstash 作为你的 Redis 服务器","content":"……\r"},"using-upstash-as-redis-server_61":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\tawait redis.incr(\"view\");\r"},"using-upstash-as-redis-server_62":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\tconst view = await redis.get(\"view\")\r"},"using-upstash-as-redis-server_63":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_64":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\treturn (\r"},"using-upstash-as-redis-server_65":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t\t<"},"using-upstash-as-redis-server_66":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t\t\t……\r"},"using-upstash-as-redis-server_67":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t\t\t\t<span className=\"flex max-w-fit items-center justify-center space-x-2 rounded-full border border-gray-300 bg-white px-5 py-2 text-sm text-gray-600 shadow-md transition-colors hover:border-gray-800\""},"using-upstash-as-redis-server_68":{"title":"用 Upstash 作为你的 Redis 服务器","content":"          <TablerEyeFilled /"},"using-upstash-as-redis-server_69":{"title":"用 Upstash 作为你的 Redis 服务器","content":"          <p"},"using-upstash-as-redis-server_70":{"title":"用 Upstash 作为你的 Redis 服务器","content":"            <span className=\"hidden sm:inline-block\">Page Views</span>{\" \"}\r"},"using-upstash-as-redis-server_71":{"title":"用 Upstash 作为你的 Redis 服务器","content":"            <span className=\"font-semibold\">{nFormatter(view)}</span"},"using-upstash-as-redis-server_72":{"title":"用 Upstash 作为你的 Redis 服务器","content":"          </p"},"using-upstash-as-redis-server_73":{"title":"用 Upstash 作为你的 Redis 服务器","content":"        </span"},"using-upstash-as-redis-server_74":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t\t\t……\r"},"using-upstash-as-redis-server_75":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t\t</"},"using-upstash-as-redis-server_76":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\t) \r"},"using-upstash-as-redis-server_77":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_78":{"title":"用 Upstash 作为你的 Redis 服务器","content":"……\r"},"using-upstash-as-redis-server_79":{"title":"用 Upstash 作为你的 Redis 服务器","content":"}\r"},"using-upstash-as-redis-server_80":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_81":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_82":{"title":"用 Upstash 作为你的 Redis 服务器","content":"如果你疑惑为什么组件内可以直接调用redis，那么请看我的过往文章：\r"},"using-upstash-as-redis-server_83":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_84":{"title":"用 Upstash 作为你的 Redis 服务器","content":"- \r"},"using-upstash-as-redis-server_85":{"title":"用 Upstash 作为你的 Redis 服务器","content":"- \r"},"using-upstash-as-redis-server_86":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_87":{"title":"用 Upstash 作为你的 Redis 服务器","content":"从 demo 中可以知道，Upstash 的 redis 命令和 Node开发者熟悉的 ioredis 几乎一样，所以 Upstash 使用起来不会有任何心理门槛。\r"},"using-upstash-as-redis-server_88":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_89":{"title":"用 Upstash 作为你的 Redis 服务器","content":"我们看看控制台，确认 redis 是否被正确操作了：\r"},"using-upstash-as-redis-server_90":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_91":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_92":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_93":{"title":"用 Upstash 作为你的 Redis 服务器","content":"当我们刷新几次页面后，在 Usage 页卡下可以看到命令调用次数；\r"},"using-upstash-as-redis-server_94":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_95":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_96":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_97":{"title":"用 Upstash 作为你的 Redis 服务器","content":"在 Data Browser 可以看到 Redis 里的所有数据。\r"},"using-upstash-as-redis-server_98":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_99":{"title":"用 Upstash 作为你的 Redis 服务器","content":"再看页面，数据和控制台相符，说明以上代码没有问题。\r"},"using-upstash-as-redis-server_100":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_101":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_102":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_103":{"title":"用 Upstash 作为你的 Redis 服务器","content":"结语\r"},"using-upstash-as-redis-server_104":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_105":{"title":"用 Upstash 作为你的 Redis 服务器","content":"Upstash 这样的第三方托管平台，比较适合个人开发者的个人项目使用，它能够让你最轻量又安全地用上 Redis，你要做的只是学习常用的 Redis 的命令。\r"},"using-upstash-as-redis-server_106":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_107":{"title":"用 Upstash 作为你的 Redis 服务器","content":"源码与演示\r"},"using-upstash-as-redis-server_108":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_109":{"title":"用 Upstash 作为你的 Redis 服务器","content":"源码：👉\r"},"using-upstash-as-redis-server_110":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_111":{"title":"用 Upstash 作为你的 Redis 服务器","content":"在线演示：👉\r"},"using-upstash-as-redis-server_112":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_113":{"title":"用 Upstash 作为你的 Redis 服务器","content":"专栏资源\r"},"using-upstash-as-redis-server_114":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_115":{"title":"用 Upstash 作为你的 Redis 服务器","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"using-upstash-as-redis-server_116":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_117":{"title":"用 Upstash 作为你的 Redis 服务器","content":"专栏地址：👉\r"},"using-upstash-as-redis-server_118":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_119":{"title":"用 Upstash 作为你的 Redis 服务器","content":"专栏演示站：👉\r"},"using-upstash-as-redis-server_120":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_121":{"title":"用 Upstash 作为你的 Redis 服务器","content":"专栏源码仓库：👉\r"},"using-upstash-as-redis-server_122":{"title":"用 Upstash 作为你的 Redis 服务器","content":"\r"},"using-upstash-as-redis-server_123":{"title":"用 Upstash 作为你的 Redis 服务器","content":"交个朋友：👉"},"nextjs-v13-server-side-and-client-side-components-best-practices":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"NextJS v13服务端组件和客户端组件及最佳实践","display":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_0":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_1":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在中，我们介绍了 NextJS v13 的混合渲染机制，本文将展开介绍 NextJS v13 服务端渲染和客户端渲染的工作原理、使用时机，以及官方推荐的最佳实践。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_2":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_3":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_4":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_5":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件就是在服务端渲染的组件，使用 NextJS v13 的项目，只要是在  目录内的页面，全部默认为服务端组件。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_6":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_7":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件的优势\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_8":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_9":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"1. ：服务端组件具备完整的服务端能力，所以可以直接与数据库或其他数据源进行交互。这消除了需要从客户端到服务器的额外请求，从而加速了数据获取。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_10":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"2. ：因为渲染是在服务器上进行的，所以你可以在服务器上使用敏感的 API 密钥或令牌，而不必担心它们被暴露给客户端用户。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_11":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"3. ：服务端渲染的结果可以被缓存。这意味着对于经常被访问的页面，你可以存储已经渲染的HTML，从而快速地为后续的请求提供响应，而不必每次都重新渲染。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_12":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"4. ：一些库或框架可能非常大，如果全部发送到客户端，会增加首次加载时间。通过在服务器上使用这些库，你可以避免增加客户端的包大小。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_13":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"5. ：服务端渲染的页面可以立即为用户提供可见的内容，而不必等待客户端JavaScript加载和执行。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_14":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"6. ：服务端渲染的页面为搜索引擎提供了完整的HTML内容，这有助于提高SEO排名。此外，社交媒体平台也可以预览这些页面，从而提高分享的吸引力。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_15":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"7. ：这是一个更高级的优化。你可以将页面渲染分成多个部分，并在它们准备好时发送到客户端。这允许用户更早地看到部分内容，而不必等待整个页面在服务器上渲染完成。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_16":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_17":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"除了这些优势，还要清楚一个注意点：服务端组件是在服务端运行的，所以就没有调用浏览器 API 的能力了，比如要使用类似于、、等方法，需要在文件开头用声明，这是后文的内容。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_18":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_19":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件的渲染\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_20":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_21":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"NextJS v13 基于 React v18，将 Server Component 变为实际可用了，而且通过 Suspense 实现了流式渲染，也就是把页面一块一块返回给客户端，然后与客户端组件进行混合渲染。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_22":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_23":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_24":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_25":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件的渲染策略\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_26":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_27":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务器渲染三种策略：静态渲染、动态渲染和流式渲染。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_28":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_29":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"静态渲染（默认）\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_30":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_31":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"NextJS v13 的服务端组件默认是静态渲染，它有以下特点：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_32":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_33":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 路由会在构建时进行渲染，或在数据重新验证后在后台运行\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_34":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 结果会被缓存，并可推送到内容分发网络（CDN）\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_35":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_36":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"这种渲染方式很适合静态博客或产品介绍页面。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_37":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_38":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"动态渲染\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_39":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_40":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"既然默认是静态渲染，那么什么情况下会触发动态渲染呢？\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_41":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_42":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在渲染过程中，如果 NextJS 发现有动态函数或未缓存的数据请求，会自动切换为动态渲染整个路由。本表总结了动态函数和数据缓存对静态或动态渲染路由的影响：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_43":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_44":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 是否有动态方法 | 数据是否缓存 | 路由渲染方式 |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_45":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"|  |  |  |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_46":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 否   | 是   | 静态渲染   |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_47":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 是   | 是   | 动态渲染   |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_48":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 否   | 否   | 动态渲染   |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_49":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 是   | 否   | 动态渲染   |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_50":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_51":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"动态函数依赖于只能在请求时知道的信息，如用户的 cookie、当前请求头或 URL 的搜索参数。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_52":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_53":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"流式渲染\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_54":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_55":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"通过流式处理，路由会在请求时在服务器上渲染。当工作准备就绪时，会将其分成几块并以流式传输到客户端。这样，用户就能在页面完全呈现之前看到页面预览。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_56":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_57":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_58":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_59":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_60":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_61":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"流式渲染适合应用于优先级较低的用户界面，或依赖于较慢数据获取速度的用户界面。例如，产品页面上的评论。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_62":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_63":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在 NextJS 中，我们可以使用 loading.js 对路由段进行流式处理，并使用 React Suspense 对 UI 组件进行流式处理。关于 ，以后有机会再展开说。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_64":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_65":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"客户端组件\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_66":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_67":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在app文件夹中，默认是服务端组件，如果要使用客户端组件，只需要在文章开头添加 指令。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_68":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_69":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"客户端组件的优势\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_70":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_71":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 交互性：客户端组件可以使用状态、效果和事件监听器，这意味着它们可以向用户提供即时反馈并更新用户界面。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_72":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 浏览器 API：客户端组件可以访问浏览器 API，如 window，从而为特定用例构建用户界面。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_73":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_74":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"如何使用客户端组件\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_75":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_76":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"如果要使用客户端组件，只需要在文章开头添加 指令。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_77":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_78":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_79":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"'use client'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_80":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_81":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"import { useState } from 'react'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_82":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_83":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"export default function Counter() {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_84":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  const [count, setCount] = useState(0)\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_85":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_86":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_87":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <div"},"nextjs-v13-server-side-and-client-side-components-best-practices_88":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <p>You clicked {count} times</p"},"nextjs-v13-server-side-and-client-side-components-best-practices_89":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <button onClick={() =\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_90":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </div"},"nextjs-v13-server-side-and-client-side-components-best-practices_91":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_92":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_93":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_94":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_95":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"使用了等于是声明了一个服务器和客户端组件模块之间的边界，也就是说，如果一个文件顶部有这个指令，那么导入该文件的所有其他模块（包括子组件）都将被视为客户端捆绑的一部分，并将由 React 在客户端上呈现。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_96":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_97":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_98":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_99":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"客户端组件如何渲染\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_100":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_101":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在 NextJS，客户端组件会根据请求是完整页面加载（首次访问应用程序或浏览器刷新触发的页面重载）的一部分还是后续导航而以不同方式呈现。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_102":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_103":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"完整页面加载\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_104":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_105":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"为了优化初始页面加载，NextJS 将使用 React 的 API 在服务器上为客户端组件和服务端组件呈现静态 HTML 预览。这意味着，当用户第一次访问我们的应用程序时，他们将立即看到页面内容，而无需等待客户端下载、解析和执行客户端组件 JavaScript 捆绑程序。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_106":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_107":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在服务端侧：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_108":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_109":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- React 将 Server Components 渲染成一个特殊的数据格式，称为 React Server Component Payload（RSC Payload），其中包括对 Client Components 的引用。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_110":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- NextJS 使用 RSC Payload 和 Client Component 的 JavaScript 指令在服务器上为路由渲染 HTML。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_111":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_112":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_113":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_114":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_115":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在客户端侧：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_116":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_117":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- HTML 用于立即显示路由的快速非交互式初始预览。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_118":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- RSC Payload 用于调和 Client 和 Server Component 树，并更新 DOM。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_119":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- JavaScript 指令用于 hydrate Client Components，使其 UI 成为可交互的。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_120":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_121":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"这种方法的主要优点是，它允许页面在不需要客户端执行任何 JavaScript 的情况下快速显示，从而提供更好的用户体验。然后，一旦客户端的 JavaScript 加载并执行，页面就会变得完全可交互。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_122":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_123":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"后续导航\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_124":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_125":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"对于后续的导航（即用户在应用内从一个页面导航到另一个页面），情况会有所不同。这是因为在这种情况下，已经假设客户端已经加载了必要的代码和数据，所以不需要再次从服务器获取渲染的HTML。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_126":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_127":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"后续导航的处理流程：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_128":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_129":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"1. ：当用户进行后续导航时，NextJS 会确保客户端下载并解析了必要的 Client Component JavaScript 包。如果包已经被缓存（例如，用户之前访问过该页面），则不需要重新下载。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_130":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"2. ：一旦 JavaScript 包准备好，React 会使用之前从服务器获取的 RSC Payload 来调和 Client 和 Server Component 树。这基本上是比较当前 DOM 与新的 Server Component 结果之间的差异，并进行必要的更新。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_131":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"3. ：在上述调和过程中，React 会更新 DOM，以确保它反映了最新的页面内容和状态。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_132":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_133":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"这种处理后续导航的方式有几个优点：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_134":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_135":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- ：由于不需要从服务器获取完整的 HTML，导航会更快。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_136":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- ：React 通过智能地只更新发生变化的 DOM 部分，确保了平滑的页面转换。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_137":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- ：只传输真正需要的数据和代码，而不是完整的页面 HTML。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_138":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_139":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"<callout"},"nextjs-v13-server-side-and-client-side-components-best-practices_140":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"❓ \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_141":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_142":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"因为这两种情况有所不同：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_143":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_144":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"1. :\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_145":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 当用户首次访问你的应用时，他们的浏览器尚未加载任何相关的 JavaScript 或数据。在这种情况下，从服务器发送预渲染的 HTML 是有益的，因为用户可以立即看到页面的内容，而不必等待客户端 JavaScript 下载、解析和执行。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_146":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"2. :\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_147":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 在用户已经在你的应用内部并开始导航到其他页面时，大部分所需的 JavaScript 代码和数据可能已经被缓存或预加载。因此，再次进行服务端渲染并从服务器获取完整的 HTML 可能不是最有效的方法。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_148":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 在这种情况下，只获取必要的数据（例如 JSON 格式）并在客户端进行渲染可能更为高效，因为这消除了服务器渲染的延迟，并减少了网络传输的数据量。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_149":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"</callout"},"nextjs-v13-server-side-and-client-side-components-best-practices_150":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_151":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端和客户端组件最佳实践\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_152":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_153":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"在构建 NextJS/React 应用程序时，我们应当考虑应用程序的哪些部分应在服务器或客户端上呈现。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_154":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_155":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"分别在什么时候使用服务端和客户端组件\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_156":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_157":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 动作 | 服务端组件 | 客户端组件 |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_158":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"|  |  |  |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_159":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 获取数据 | ✅ | ❌ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_160":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 访问后台资源（直接） | ✅ | ❌ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_161":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 将敏感信息保存在服务器上（访问令牌、应用程序接口密钥等） | ✅ | ❌ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_162":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 在服务器上保留大量依赖关系/减少客户端 JavaScript | ✅ | ❌ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_163":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 添加交互性和事件监听器（onClick()、onChange()等） | ❌ | ✅ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_164":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 使用状态和生命周期效果（useState()、useReducer()、useEffect()等） | ❌ | ✅ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_165":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 使用浏览器专用 API | ❌ | ✅ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_166":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 使用依赖于状态、效果或浏览器专用 API 的自定义钩子 | ❌ | ✅ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_167":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"| 使用 React 类组件 | ❌ | ✅ |\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_168":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_169":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"服务端组件最佳实践\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_170":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_171":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"1. ：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_172":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_173":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    当在服务器上获取数据时，可能需要在不同的组件之间共享数据。与其使用 React Context（在服务器上不可用）或传递数据作为 props，不如使用  函数在需要的组件中获取相同的数据，React 将对重复请求进行合并。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_174":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_175":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"2. ：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_176":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_177":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    要确保一些只应在服务器上运行的代码不会意外地进入客户端，可以使用  包。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_178":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_179":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    bash\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_180":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    npm install server-only\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_181":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_182":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_183":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_184":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import 'server-only'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_185":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_186":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export async function getData() {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_187":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      const res = await fetch('https://external-service.com/data', {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_188":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        headers: {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_189":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          authorization: process.env.API_KEY,\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_190":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        },\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_191":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      })\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_192":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_193":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return res.json()\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_194":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_195":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_196":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_197":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    使用了  包的组件，将只允许服务端代码调用，如果客户端代码调用则会报错。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_198":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_199":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    相应的，还有一个  包，可以用来标记仅包含客户端代码的模块。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_200":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_201":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"3. \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_202":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_203":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    由于服务端组件是一个新的 React 功能，许多 npm 包可能还没有添加指令。如果一个第三方组件在服务端组件中不起作用，可以将其封装在你自己的客户端组件中来解决这个问题。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_204":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_205":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    例如：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_206":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_207":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_208":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import { Carousel } from 'acme-carousel'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_209":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_210":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function Page() {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_211":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_212":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        <div"},"nextjs-v13-server-side-and-client-side-components-best-practices_213":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <p>View pictures</p"},"nextjs-v13-server-side-and-client-side-components-best-practices_214":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_215":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          {//}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_216":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <Carousel /"},"nextjs-v13-server-side-and-client-side-components-best-practices_217":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        </div"},"nextjs-v13-server-side-and-client-side-components-best-practices_218":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_219":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_220":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_221":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_222":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    可以通过封装一层，客户端组件引入封装后的代码，就能解决掉报错：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_223":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_224":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_225":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    'use client'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_226":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_227":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import { Carousel } from 'acme-carousel'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_228":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_229":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default Carousel\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_230":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_231":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_232":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_233":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import Carousel from './carousel'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_234":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_235":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function Page() {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_236":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_237":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        <div"},"nextjs-v13-server-side-and-client-side-components-best-practices_238":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <p>View pictures</p"},"nextjs-v13-server-side-and-client-side-components-best-practices_239":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_240":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          {//}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_241":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <Carousel /"},"nextjs-v13-server-side-and-client-side-components-best-practices_242":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        </div"},"nextjs-v13-server-side-and-client-side-components-best-practices_243":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_244":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_245":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_246":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_247":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"4. \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_248":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_249":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    通常，Context Providers 会在应用的根部渲染，以共享全局状态，如当前主题。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_250":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_251":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    但是 Context Providers 在服务端组件里是不受支持的，例如：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_252":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_253":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_254":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // layout.tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_255":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_256":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import { createContext } from 'react'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_257":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_258":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    //  createContext is not supported in Server Components\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_259":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export const ThemeContext = createContext({})\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_260":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_261":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function RootLayout({ children }) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_262":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_263":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        <html"},"nextjs-v13-server-side-and-client-side-components-best-practices_264":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <body"},"nextjs-v13-server-side-and-client-side-components-best-practices_265":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"            <ThemeContext.Provider value=\"dark\">{children}</ThemeContext.Provider"},"nextjs-v13-server-side-and-client-side-components-best-practices_266":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          </body"},"nextjs-v13-server-side-and-client-side-components-best-practices_267":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        </html"},"nextjs-v13-server-side-and-client-side-components-best-practices_268":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_269":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_270":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_271":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_272":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    要解决这个问题，就要在客户端组件中创建上下文并呈现其提供程序\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_273":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_274":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_275":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // theme-provider.tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_276":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_277":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    'use client'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_278":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_279":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import { createContext } from 'react'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_280":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_281":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export const ThemeContext = createContext({})\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_282":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_283":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function ThemeProvider({ children }) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_284":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return <ThemeContext.Provider value=\"dark\">{children}</ThemeContext.Provider"},"nextjs-v13-server-side-and-client-side-components-best-practices_285":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_286":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_287":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_288":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    现在引入服务端组件就不会报错了\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_289":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_290":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_291":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // layout.tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_292":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_293":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import ThemeProvider from './theme-provider'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_294":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_295":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function RootLayout({\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_296":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      children,\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_297":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }: {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_298":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      children: React.ReactNode\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_299":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_300":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_301":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        <html"},"nextjs-v13-server-side-and-client-side-components-best-practices_302":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <body"},"nextjs-v13-server-side-and-client-side-components-best-practices_303":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"            <ThemeProvider>{children}</ThemeProvider"},"nextjs-v13-server-side-and-client-side-components-best-practices_304":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          </body"},"nextjs-v13-server-side-and-client-side-components-best-practices_305":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        </html"},"nextjs-v13-server-side-and-client-side-components-best-practices_306":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_307":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_308":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_309":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_310":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_311":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_312":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_313":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_314":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    其实不是，在这里其实只是提供了一个插槽，只能决定子元素的位置，而不能决定子元素的渲染方式。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_315":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_316":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_317":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_318":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_319":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"客户端组件最佳实践\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_320":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_321":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"1. \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_322":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_323":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    为了减少客户端打包后的大小，客户端组件应当放在组件树的枝干（组件树从上到下，最上面是跟节点）。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_324":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_325":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    例如，我们有一个的组件，这个组件需要交互，所以只能是客户端组件。那么，如果要加快渲染速度，就可以把页面放在服务端渲染，而作为客户端组件引入。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_326":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_327":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_328":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // SearchBar is a Client Component\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_329":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import SearchBar from './searchbar'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_330":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // Logo is a Server Component\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_331":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    import Logo from './logo'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_332":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"     \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_333":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    // Layout is a Server Component by default\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_334":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    export default function Layout({ children }: { children: React.ReactNode }) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_335":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_336":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        <"},"nextjs-v13-server-side-and-client-side-components-best-practices_337":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <nav"},"nextjs-v13-server-side-and-client-side-components-best-practices_338":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"            <Logo /"},"nextjs-v13-server-side-and-client-side-components-best-practices_339":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"            <SearchBar /"},"nextjs-v13-server-side-and-client-side-components-best-practices_340":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          </nav"},"nextjs-v13-server-side-and-client-side-components-best-practices_341":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"          <main>{children}</main"},"nextjs-v13-server-side-and-client-side-components-best-practices_342":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"        </"},"nextjs-v13-server-side-and-client-side-components-best-practices_343":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_344":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    }\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_345":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_346":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_347":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    联系上文，我们可以知道，这样做的方式，会优先进行服务端组件渲染，而此时的位置会是一个占位符，一旦开始混合渲染，占位符的位置会被真实的填充。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_348":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_349":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"2. \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_350":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_351":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    考虑以下场景：你有一个服务器组件负责获取用户的信息，然后你希望将这些信息传递给一个客户端组件以展示一个交互式的用户资料卡。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_352":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_353":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    在这种情境中，你会：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_354":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_355":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 在服务器组件中预获取用户数据。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_356":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 将数据作为  传递给客户端组件。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_357":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - 为了使这个过程有效且无错误，从服务器组件传递给客户端组件的  必须是可序列化的。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_358":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_359":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    由此又引申出两个问题：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_360":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_361":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_362":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_363":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_364":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    基本的数据类型（如数字、字符串、数组和普通对象）通常都是可序列化的。但是，如函数、特定的对象实例（例如  对象或自定义类的实例）或包含循环引用的对象可能不是。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_365":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_366":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_367":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_368":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_369":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_370":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_371":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    如果客户端组件依赖于不可序列化的数据，你有几个选项：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_372":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_373":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - ：在客户端组件中直接获取数据，比如使用 AJAX 请求。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_374":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    - ：在 NextJS 中，你可以使用 API 路由来在服务器上获取数据，并从客户端进行调用。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_375":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </Aside"},"nextjs-v13-server-side-and-client-side-components-best-practices_376":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_377":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_378":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"混合使用客户端和服务器组件\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_379":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_380":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"当你混合使用客户端和服务器组件时，应当将 UI 视为组件树。从根布局开始（它是一个服务器组件），你可以通过添加 \"use client\" 指令在客户端渲染某些子树。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_381":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_382":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"虽然在这些客户端子树中仍然可以嵌套服务器组件或调用服务器操作，但仍有一些事情需要注意：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_383":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_384":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 如果需要在客户端访问服务器上的数据或资源，客户端需要向服务器发出新的请求。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_385":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 当向服务器发出新请求时，首先渲染所有服务器组件，在客户端上，React 会使用 RSC Payload 将服务器组件和客户端组件调和成一棵树。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_386":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"- 由于客户端组件是在服务器组件之后呈现的，因此不能将服务器组件导入到客户端组件中。正确的方式应该是：将服务器组件作为属性传递给客户端组件（如：children），这种方式允许你在客户端组件中使用来自服务器组件的数据或内容，而不必再次请求服务器。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_387":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_388":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"错误示例：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_389":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_390":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_391":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"'use client'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_392":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_393":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"// You cannot import a Server Component into a Client Component.\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_394":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"import ServerComponent from './Server-Component'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_395":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_396":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"export default function ClientComponent({\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_397":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  children,\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_398":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}: {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_399":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  children: React.ReactNode\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_400":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_401":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  const [count, setCount] = useState(0)\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_402":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_403":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_404":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <"},"nextjs-v13-server-side-and-client-side-components-best-practices_405":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <button onClick={() =\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_406":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_407":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <ServerComponent /"},"nextjs-v13-server-side-and-client-side-components-best-practices_408":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </"},"nextjs-v13-server-side-and-client-side-components-best-practices_409":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_410":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_411":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_412":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_413":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"正确示例：\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_414":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_415":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_416":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"'use client'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_417":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_418":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"import { useState } from 'react'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_419":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_420":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"export default function ClientComponent({\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_421":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  children,\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_422":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}: {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_423":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  children: React.ReactNode\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_424":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}) {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_425":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  const [count, setCount] = useState(0)\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_426":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_427":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_428":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <"},"nextjs-v13-server-side-and-client-side-components-best-practices_429":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <button onClick={() =\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_430":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      {children}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_431":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </"},"nextjs-v13-server-side-and-client-side-components-best-practices_432":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_433":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_434":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_435":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_436":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"tsx\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_437":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"// This pattern works:\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_438":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"// You can pass a Server Component as a child or prop of a\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_439":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"// Client Component.\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_440":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"import ClientComponent from './client-component'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_441":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"import ServerComponent from './server-component'\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_442":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":" \r"},"nextjs-v13-server-side-and-client-side-components-best-practices_443":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"// Pages in Next.js are Server Components by default\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_444":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"export default function Page() {\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_445":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  return (\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_446":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    <ClientComponent"},"nextjs-v13-server-side-and-client-side-components-best-practices_447":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"      <ServerComponent /"},"nextjs-v13-server-side-and-client-side-components-best-practices_448":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"    </ClientComponent"},"nextjs-v13-server-side-and-client-side-components-best-practices_449":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"  )\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_450":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"}\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_451":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_452":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_453":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"结语\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_454":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_455":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"本文是衔接，这两篇文章把 NextJS v13 的渲染机制讨论得透透的了，学完就再也不是知其然却不知其所以然的 NextJS 开发者了🫡。\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_456":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_457":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"专栏资源\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_458":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_459":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_460":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_461":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"专栏地址：👉\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_462":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_463":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"专栏演示站：👉\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_464":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_465":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"专栏源码仓库：👉\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_466":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"\r"},"nextjs-v13-server-side-and-client-side-components-best-practices_467":{"title":"NextJS v13服务端组件和客户端组件及最佳实践","content":"交个朋友：👉"},"nextjs-v13-rendering":{"title":"NextJS v13 的渲染机制有什么不同？","content":"NextJS v13 的渲染机制有什么不同？","display":"\r"},"nextjs-v13-rendering_0":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_1":{"title":"NextJS v13 的渲染机制有什么不同？","content":"关注 NextJS 的朋友都知道，NextJS 在 v13 版本推出了 app router模式，还支持了 use client 指令，与 app router 模式和 use client 指令息息相关的，是 NextJS v13 对渲染机制的优化。在新的渲染机制下，我们可以更灵活地控制服务端渲染（SSR）和客户端渲染（CSR），实现更高性能的 Web 体验。\r"},"nextjs-v13-rendering_2":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_3":{"title":"NextJS v13 的渲染机制有什么不同？","content":"混合渲染\r"},"nextjs-v13-rendering_4":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_5":{"title":"NextJS v13 的渲染机制有什么不同？","content":"在早期版本中，NextJS 主要采用服务端渲染的方式。而在 v13 版本中，NextJS 实现了同时支持服务端渲染和客户端渲染。开发者可以在同一个应用中采用两种渲染方式的组合。当服务端渲染的组件内容和客户端渲染的组件内容合并生成用户界面时，这就实现了混合渲染。\r"},"nextjs-v13-rendering_6":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_7":{"title":"NextJS v13 的渲染机制有什么不同？","content":"那么，为什么 NextJS 这次要区分服务端渲染和客户端渲染呢？我们先来看一张图\r"},"nextjs-v13-rendering_8":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_9":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_10":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_11":{"title":"NextJS v13 的渲染机制有什么不同？","content":"这是我们印象中的客户端和服务端：\r"},"nextjs-v13-rendering_12":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_13":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 客户端是在浏览器展示界面\r"},"nextjs-v13-rendering_14":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 服务端在服务区上存储代码、计算数据\r"},"nextjs-v13-rendering_15":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 客户端和服务端可以通过请求交换信息\r"},"nextjs-v13-rendering_16":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_17":{"title":"NextJS v13 的渲染机制有什么不同？","content":"也就是说，客户端和服务端它们功能迥异、使命不同。\r"},"nextjs-v13-rendering_18":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_19":{"title":"NextJS v13 的渲染机制有什么不同？","content":"那么，如果能扬长避短，最大程度发挥客户端和服务端的优势，是不是就可以让我们开发的产品获得更好的性能？正是基于这样的理念，NextJS才有了服务端渲染和客户端渲染并存的设计。\r"},"nextjs-v13-rendering_20":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_21":{"title":"NextJS v13 的渲染机制有什么不同？","content":"总结来说，从 v13 版开始，NextJS 希望开发者对应用进行更细致地划分渲染环境，以实现更高性能的产品。而框架为此做的工作就是混合服务端和客户端的渲染结果，展示到用户面前。\r"},"nextjs-v13-rendering_22":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_23":{"title":"NextJS v13 的渲染机制有什么不同？","content":"网络边界\r"},"nextjs-v13-rendering_24":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_25":{"title":"NextJS v13 的渲染机制有什么不同？","content":"我们知道，服务端和客户端是通过网络进行交互的，先来看一下网络请求的生命周期：\r"},"nextjs-v13-rendering_26":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_27":{"title":"NextJS v13 的渲染机制有什么不同？","content":"1. 用户交互：用户通过点击、输入等方式与应用交互。\r"},"nextjs-v13-rendering_28":{"title":"NextJS v13 的渲染机制有什么不同？","content":"2. 发起HTTP请求：客户端向服务器发起HTTP请求，包含所需资源、方法等信息。\r"},"nextjs-v13-rendering_29":{"title":"NextJS v13 的渲染机制有什么不同？","content":"3. 服务器处理：服务器接收请求，进行诸如路由、数据获取等处理。\r"},"nextjs-v13-rendering_30":{"title":"NextJS v13 的渲染机制有什么不同？","content":"4. 返回HTTP响应：服务器向客户端发送HTTP响应，包含状态码和请求资源。\r"},"nextjs-v13-rendering_31":{"title":"NextJS v13 的渲染机制有什么不同？","content":"5. 客户端渲染：客户端解析响应资源，渲染用户界面。\r"},"nextjs-v13-rendering_32":{"title":"NextJS v13 的渲染机制有什么不同？","content":"6. 用户交互：用户继续与渲染后的界面交互，周期重新开始。\r"},"nextjs-v13-rendering_33":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_34":{"title":"NextJS v13 的渲染机制有什么不同？","content":"根据请求-响应生命周期不同阶段，服务端渲染和客户端渲染各自的擅长和限制如下：\r"},"nextjs-v13-rendering_35":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_36":{"title":"NextJS v13 的渲染机制有什么不同？","content":"服务端渲染的优势和适用场景：\r"},"nextjs-v13-rendering_37":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_38":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 请求处理阶段：可以进行数据获取，读取数据库\r"},"nextjs-v13-rendering_39":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 生成响应阶段：可以渲染HTML页面\r"},"nextjs-v13-rendering_40":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 有利于SEO，爬虫可以获取预渲染内容\r"},"nextjs-v13-rendering_41":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 可以快速构建首屏阶段需要的页面内容\r"},"nextjs-v13-rendering_42":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_43":{"title":"NextJS v13 的渲染机制有什么不同？","content":"客户端渲染的优势和适用场景：\r"},"nextjs-v13-rendering_44":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_45":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 获取响应后可以与用户交互，绑定事件\r"},"nextjs-v13-rendering_46":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 可以进行复杂的客户端路由和状态管理\r"},"nextjs-v13-rendering_47":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 可异步加载额外的数据和资源\r"},"nextjs-v13-rendering_48":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 渲染交互复杂的组件或功能\r"},"nextjs-v13-rendering_49":{"title":"NextJS v13 的渲染机制有什么不同？","content":"- 提供更流畅的用户体验\r"},"nextjs-v13-rendering_50":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_51":{"title":"NextJS v13 的渲染机制有什么不同？","content":"要划分渲染环境，等同于划分网络边界，那么在NextJS里用什么来划分网络边界呢？\r"},"nextjs-v13-rendering_52":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_53":{"title":"NextJS v13 的渲染机制有什么不同？","content":"就是使用“use client”。\r"},"nextjs-v13-rendering_54":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_55":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_56":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_57":{"title":"NextJS v13 的渲染机制有什么不同？","content":"NextJS 的页面和组件默认是服务端渲染，只有使用了 use client 指令的页面或组件，它和它的子组件都将是客户端渲染。use client 更详细的用法推荐模式将在下一篇详细解读，现在只要记住它的作用就可以。\r"},"nextjs-v13-rendering_58":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_59":{"title":"NextJS v13 的渲染机制有什么不同？","content":"那么 NextJS 推荐开发者划分网络边界的原因是什么呢？总结下来有这几点：\r"},"nextjs-v13-rendering_60":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_61":{"title":"NextJS v13 的渲染机制有什么不同？","content":"1. 分离关注点：网络边界的不同侧关注不同的功能，客户端关注用户界面，服务器端关注数据获取和处理。明确分离有利于模块化开发。\r"},"nextjs-v13-rendering_62":{"title":"NextJS v13 的渲染机制有什么不同？","content":"2. 利用不同环境的优势：客户端和服务器端有各自的优势，例如客户端可以快速交互，服务器端可以访问数据库。划分边界可以发挥两者优势。\r"},"nextjs-v13-rendering_63":{"title":"NextJS v13 的渲染机制有什么不同？","content":"3. 优化性能：适当地划分边界可以优化应用加载速度、响应速度等性能。比如服务器渲染可以加快首屏加载。\r"},"nextjs-v13-rendering_64":{"title":"NextJS v13 的渲染机制有什么不同？","content":"4. 调整部署位置：边界可以让部分代码运行在客户机，部分在服务器。这为代码部署提供灵活性。\r"},"nextjs-v13-rendering_65":{"title":"NextJS v13 的渲染机制有什么不同？","content":"5. 安全：对边界两侧的代码施加不同限制，可以提高应用安全性。\r"},"nextjs-v13-rendering_66":{"title":"NextJS v13 的渲染机制有什么不同？","content":"6. 离线使用：客户端代码可以在断网时继续工作，提高应用可靠性。\r"},"nextjs-v13-rendering_67":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_68":{"title":"NextJS v13 的渲染机制有什么不同？","content":"结语\r"},"nextjs-v13-rendering_69":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_70":{"title":"NextJS v13 的渲染机制有什么不同？","content":"学完以上的概念，我们就对 Next v13 版本的混合渲染有了初步的了解，猛烈点击开始学习。\r"},"nextjs-v13-rendering_71":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_72":{"title":"NextJS v13 的渲染机制有什么不同？","content":"专栏资源\r"},"nextjs-v13-rendering_73":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_74":{"title":"NextJS v13 的渲染机制有什么不同？","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"nextjs-v13-rendering_75":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_76":{"title":"NextJS v13 的渲染机制有什么不同？","content":"专栏地址：👉\r"},"nextjs-v13-rendering_77":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_78":{"title":"NextJS v13 的渲染机制有什么不同？","content":"专栏演示站：👉\r"},"nextjs-v13-rendering_79":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_80":{"title":"NextJS v13 的渲染机制有什么不同？","content":"专栏源码仓库：👉\r"},"nextjs-v13-rendering_81":{"title":"NextJS v13 的渲染机制有什么不同？","content":"\r"},"nextjs-v13-rendering_82":{"title":"NextJS v13 的渲染机制有什么不同？","content":"交个朋友：👉"},"docker-full-stack":{"title":"前端有了Docker，全栈之路更轻松了","content":"前端有了Docker，全栈之路更轻松了","display":"\r"},"docker-full-stack_0":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_1":{"title":"前端有了Docker，全栈之路更轻松了","content":"引言\r"},"docker-full-stack_2":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_3":{"title":"前端有了Docker，全栈之路更轻松了","content":"前端工程师常常觉得，后端和运维团队负责部署和维护应用的生产环境，这种想法没有错，但我认为，即使前端工程师不直接负责部署，学习和理解 Docker 以及与其相关的工作流程也是有其价值的，原因如下：\r"},"docker-full-stack_4":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_5":{"title":"前端有了Docker，全栈之路更轻松了","content":"- ：在一个团队中，前端、后端和运维需要密切合作。了解 Docker 和容器化可以帮助前端工程师更好地与团队其他成员沟通。\r"},"docker-full-stack_6":{"title":"前端有了Docker，全栈之路更轻松了","content":"- ：使用 Docker 可以确保开发环境和生产环境之间的一致性，这可以减少“在我机器上可以运行”的问题。\r"},"docker-full-stack_7":{"title":"前端有了Docker，全栈之路更轻松了","content":"- ：有了 Docker，前端工程师可以在本地或在某个测试环境中轻松地部署整个应用堆栈，包括后端服务和数据库。如果你还想学习当全栈，那这个特点完全有理由说服你学习 Docker。\r"},"docker-full-stack_8":{"title":"前端有了Docker，全栈之路更轻松了","content":"- ：技术领域总是在不断地发展和变化。学习新技术和工具不仅可以帮助前端工程师保持与时俱进，还可以打开新的职业机会。\r"},"docker-full-stack_9":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_10":{"title":"前端有了Docker，全栈之路更轻松了","content":"Docker demo 分析\r"},"docker-full-stack_11":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_12":{"title":"前端有了Docker，全栈之路更轻松了","content":"在上一篇文章（），我们在本地开发时使用Postgres数据库，只需两步：\r"},"docker-full-stack_13":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_14":{"title":"前端有了Docker，全栈之路更轻松了","content":"1. 安装 Dcoker\r"},"docker-full-stack_15":{"title":"前端有了Docker，全栈之路更轻松了","content":"2. 配置 docker-compose.yml，执行启动命令\r"},"docker-full-stack_16":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_17":{"title":"前端有了Docker，全栈之路更轻松了","content":"如果没有Docker，我们就需要做这么多工作：\r"},"docker-full-stack_18":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_19":{"title":"前端有了Docker，全栈之路更轻松了","content":"1. 下载和安装 Postgres\r"},"docker-full-stack_20":{"title":"前端有了Docker，全栈之路更轻松了","content":"2. 配置数据目录、用户、权限等\r"},"docker-full-stack_21":{"title":"前端有了Docker，全栈之路更轻松了","content":"3. 初始化数据库目录\r"},"docker-full-stack_22":{"title":"前端有了Docker，全栈之路更轻松了","content":"4. 启动 Postgres\r"},"docker-full-stack_23":{"title":"前端有了Docker，全栈之路更轻松了","content":"5. 考虑安全性\r"},"docker-full-stack_24":{"title":"前端有了Docker，全栈之路更轻松了","content":"6. 定期更新和维护\r"},"docker-full-stack_25":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_26":{"title":"前端有了Docker，全栈之路更轻松了","content":"很明显，对于一名前端工程师，如果你想折腾非前端领域的工具，使用 Docker 将为你节约很多时间。\r"},"docker-full-stack_27":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_28":{"title":"前端有了Docker，全栈之路更轻松了","content":"现在重新看一遍上一篇文章的 docker-compose.yml\r"},"docker-full-stack_29":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_30":{"title":"前端有了Docker，全栈之路更轻松了","content":"yaml\r"},"docker-full-stack_31":{"title":"前端有了Docker，全栈之路更轻松了","content":"version: '3.1'\r"},"docker-full-stack_32":{"title":"前端有了Docker，全栈之路更轻松了","content":"services:\r"},"docker-full-stack_33":{"title":"前端有了Docker，全栈之路更轻松了","content":"  db:\r"},"docker-full-stack_34":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: postgres\r"},"docker-full-stack_35":{"title":"前端有了Docker，全栈之路更轻松了","content":"    volumes:\r"},"docker-full-stack_36":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - ./postgres:/var/lib/postgresql/data\r"},"docker-full-stack_37":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_38":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 5432:5432\r"},"docker-full-stack_39":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment:\r"},"docker-full-stack_40":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_USER=myuser\r"},"docker-full-stack_41":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_PASSWORD=mypassword\r"},"docker-full-stack_42":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_43":{"title":"前端有了Docker，全栈之路更轻松了","content":"  adminer:\r"},"docker-full-stack_44":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: adminer\r"},"docker-full-stack_45":{"title":"前端有了Docker，全栈之路更轻松了","content":"    restart: always\r"},"docker-full-stack_46":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_47":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 8080:8080\r"},"docker-full-stack_48":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_49":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_50":{"title":"前端有了Docker，全栈之路更轻松了","content":"文件是 Docker Compose 的配置文件,它可以用来定义多容器 Docker 应用程序的服务,网络和依赖关系。\r"},"docker-full-stack_51":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_52":{"title":"前端有了Docker，全栈之路更轻松了","content":"我们一行一行分析下这个文件的配置：\r"},"docker-full-stack_53":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_54":{"title":"前端有了Docker，全栈之路更轻松了","content":"1. version: '3.1'，指定使用 Docker Compose 3.1 版本的语法。\r"},"docker-full-stack_55":{"title":"前端有了Docker，全栈之路更轻松了","content":"2. services: 定义了两个服务 db 和 adminer\r"},"docker-full-stack_56":{"title":"前端有了Docker，全栈之路更轻松了","content":"3. db:\r"},"docker-full-stack_57":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - image: postgres 使用官方的 postgres 镜像\r"},"docker-full-stack_58":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - volumes: 将宿主机的目录映射到容器内的  目录，用于持久化保存数据库数据。映射目录是 Postgres 的规范要求，填其它路径会报错。\r"},"docker-full-stack_59":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - ports: 将容器的 5432 端口映射到宿主机的 5432 端口。用于从外部访问数据库服务。\r"},"docker-full-stack_60":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - environment: 设置 postgres 数据库的用户名和密码。\r"},"docker-full-stack_61":{"title":"前端有了Docker，全栈之路更轻松了","content":"4. adminer:\r"},"docker-full-stack_62":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - image: adminer 使用 adminer 镜像,这是一个数据库管理界面。\r"},"docker-full-stack_63":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - restart: always 始终重新启动这个服务,实现高可用。\r"},"docker-full-stack_64":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - ports: 将容器 8080 端口映射到宿主机 8080 端口,用于从外部访问 adminer 网页界面。\r"},"docker-full-stack_65":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_66":{"title":"前端有了Docker，全栈之路更轻松了","content":"有了这个配置文件，我们执行就完成postgres数据库的安装启动，并且可以在8080端口可视化界面查看数据库内容。\r"},"docker-full-stack_67":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_68":{"title":"前端有了Docker，全栈之路更轻松了","content":"还想启动前端\r"},"docker-full-stack_69":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_70":{"title":"前端有了Docker，全栈之路更轻松了","content":"假设我们部署项目时，希望 Docker 一起把前端也启动了，那么加一下配置：\r"},"docker-full-stack_71":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_72":{"title":"前端有了Docker，全栈之路更轻松了","content":"yaml\r"},"docker-full-stack_73":{"title":"前端有了Docker，全栈之路更轻松了","content":"……\r"},"docker-full-stack_74":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_75":{"title":"前端有了Docker，全栈之路更轻松了","content":"nextjs:\r"},"docker-full-stack_76":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: node:18 基于官方node镜像\r"},"docker-full-stack_77":{"title":"前端有了Docker，全栈之路更轻松了","content":"    working_dir: /app/app 设置工作目录\r"},"docker-full-stack_78":{"title":"前端有了Docker，全栈之路更轻松了","content":"    volumes:\r"},"docker-full-stack_79":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - .:/app/app 把当前目录挂载到容器里 \r"},"docker-full-stack_80":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_81":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 3001:3000 对外暴露端口\r"},"docker-full-stack_82":{"title":"前端有了Docker，全栈之路更轻松了","content":"    command: bash -c \"npx prisma generate && npm run dev\" 容器内启动命令\r"},"docker-full-stack_83":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment: 环境变量\r"},"docker-full-stack_84":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - PG_HOST=db 设置数据库主机名为db    \r"},"docker-full-stack_85":{"title":"前端有了Docker，全栈之路更轻松了","content":"    depends_on: 指定服务启动顺序和依赖关系\r"},"docker-full-stack_86":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - db 依赖于db，先启动bd服务，再启动nextjs\r"},"docker-full-stack_87":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_88":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_89":{"title":"前端有了Docker，全栈之路更轻松了","content":"现在执行再执行，打开确实可以看到首页了\r"},"docker-full-stack_90":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_91":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_92":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_93":{"title":"前端有了Docker，全栈之路更轻松了","content":"关于这个配置，有以下需要注意的点：\r"},"docker-full-stack_94":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_95":{"title":"前端有了Docker，全栈之路更轻松了","content":"- 这个例子中，我们配置了 node v18，它能帮助我们实现应用环境一致性，在不同环境中启动服务都会自动加载 node v18。\r"},"docker-full-stack_96":{"title":"前端有了Docker，全栈之路更轻松了","content":"- 为什么command 增加了？如果不加这条命令，会出现下面的报错：\r"},"docker-full-stack_97":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_98":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_99":{"title":"前端有了Docker，全栈之路更轻松了","content":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\r"},"docker-full-stack_100":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_101":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_102":{"title":"前端有了Docker，全栈之路更轻松了","content":"这是因为修改配置前在本机生成了 Prisma 查询引擎，但在 Docker 容器内运行应用时，容器的平台与本机可能不同，就出现了这个错误。\r"},"docker-full-stack_103":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_104":{"title":"前端有了Docker，全栈之路更轻松了","content":"- 代码里还有个，这是配置环境变量的地方，如果我们希望统一在env文件里配置，那么就可以改成这样写：\r"},"docker-full-stack_105":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_106":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_107":{"title":"前端有了Docker，全栈之路更轻松了","content":".env\r"},"docker-full-stack_108":{"title":"前端有了Docker，全栈之路更轻松了","content":"PG_HOST=db\r"},"docker-full-stack_109":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_110":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_111":{"title":"前端有了Docker，全栈之路更轻松了","content":"yaml\r"},"docker-full-stack_112":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker-compose.yml\r"},"docker-full-stack_113":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_114":{"title":"前端有了Docker，全栈之路更轻松了","content":"environment: 环境变量\r"},"docker-full-stack_115":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - PGHOST} 设置数据库主机名为db  \r"},"docker-full-stack_116":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_117":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_118":{"title":"前端有了Docker，全栈之路更轻松了","content":"- 现在尝试运行docker compose，然后页面上登录，会发现登录失败，控制台还是报错：\r"},"docker-full-stack_119":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_120":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_121":{"title":"前端有了Docker，全栈之路更轻松了","content":"Invalid  invocation Can't reach database server at : Please make sure your database server is running at :\r"},"docker-full-stack_122":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_123":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_124":{"title":"前端有了Docker，全栈之路更轻松了","content":"这个错误提示我们应用程序尝试连接到  来通信，而应该使用服务名称作为主机名。\r"},"docker-full-stack_125":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_126":{"title":"前端有了Docker，全栈之路更轻松了","content":"我们来修改一下env文件\r"},"docker-full-stack_127":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_128":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_129":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker中不能使用localhost，要用服务名称，所以用db\r"},"docker-full-stack_130":{"title":"前端有了Docker，全栈之路更轻松了","content":"DATABASE_URL=\"postgresql://myuser:mypassword@localhost:5432/mydb?schema=public\"\r"},"docker-full-stack_131":{"title":"前端有了Docker，全栈之路更轻松了","content":"DATABASE_URL=\"postgresql://myuser:mypassword@db:5432/mydb?schema=public\"\r"},"docker-full-stack_132":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_133":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_134":{"title":"前端有了Docker，全栈之路更轻松了","content":"这时候再启动docker compose就不再有报错了。\r"},"docker-full-stack_135":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_136":{"title":"前端有了Docker，全栈之路更轻松了","content":"学到这里你就已经学完了 Docker 的核心概念，下面我们再学习一下 Docker 怎么区分环境。\r"},"docker-full-stack_137":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_138":{"title":"前端有了Docker，全栈之路更轻松了","content":"区分开发和生产环境\r"},"docker-full-stack_139":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_140":{"title":"前端有了Docker，全栈之路更轻松了","content":"实际场景中，我们除了把 Docker 用于开发环境（如前面的demo），还会使用到生产环境部署。但是开发环境和生产环境有很多配置名同实异。这就需要做好两个环境的配置策略。\r"},"docker-full-stack_141":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_142":{"title":"前端有了Docker，全栈之路更轻松了","content":"三种策略\r"},"docker-full-stack_143":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_144":{"title":"前端有了Docker，全栈之路更轻松了","content":"1. :\r"},"docker-full-stack_145":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_146":{"title":"前端有了Docker，全栈之路更轻松了","content":"    我们可以为开发和生产环境使用不同的  文件。例如：\r"},"docker-full-stack_147":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_148":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - ：用于开发环境\r"},"docker-full-stack_149":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - ：用于生产环境\r"},"docker-full-stack_150":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_151":{"title":"前端有了Docker，全栈之路更轻松了","content":"    启动服务时，指定要使用的文件：\r"},"docker-full-stack_152":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_153":{"title":"前端有了Docker，全栈之路更轻松了","content":"    bash\r"},"docker-full-stack_154":{"title":"前端有了Docker，全栈之路更轻松了","content":"    docker-compose -f docker-compose.dev.yml up\r"},"docker-full-stack_155":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_156":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_157":{"title":"前端有了Docker，全栈之路更轻松了","content":"    或者\r"},"docker-full-stack_158":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_159":{"title":"前端有了Docker，全栈之路更轻松了","content":"    bash\r"},"docker-full-stack_160":{"title":"前端有了Docker，全栈之路更轻松了","content":"    docker-compose -f docker-compose.prod.yml up\r"},"docker-full-stack_161":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_162":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_163":{"title":"前端有了Docker，全栈之路更轻松了","content":"2. :\r"},"docker-full-stack_164":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_165":{"title":"前端有了Docker，全栈之路更轻松了","content":"    我们可以在  和  文件：\r"},"docker-full-stack_166":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_167":{"title":"前端有了Docker，全栈之路更轻松了","content":"    bash\r"},"docker-full-stack_168":{"title":"前端有了Docker，全栈之路更轻松了","content":"    env $(cat .env.dev | xargs) docker-compose up\r"},"docker-full-stack_169":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_170":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_171":{"title":"前端有了Docker，全栈之路更轻松了","content":"3. :\r"},"docker-full-stack_172":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_173":{"title":"前端有了Docker，全栈之路更轻松了","content":"    Docker Compose 支持使用多个文件来定义和覆盖服务配置。这意味着我们可以有一个基本的  文件，并为开发和生产环境使用单独的覆盖文件。\r"},"docker-full-stack_174":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_175":{"title":"前端有了Docker，全栈之路更轻松了","content":"    例如，我们可以使用以下文件结构：\r"},"docker-full-stack_176":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_177":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - : 基本配置\r"},"docker-full-stack_178":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - : 默认的覆盖文件，通常用于开发环境\r"},"docker-full-stack_179":{"title":"前端有了Docker，全栈之路更轻松了","content":"    - : 用于生产环境的覆盖文件\r"},"docker-full-stack_180":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_181":{"title":"前端有了Docker，全栈之路更轻松了","content":"    在开发环境中，只需运行  和 。\r"},"docker-full-stack_182":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_183":{"title":"前端有了Docker，全栈之路更轻松了","content":"    在生产环境中，我们可以运行：\r"},"docker-full-stack_184":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_185":{"title":"前端有了Docker，全栈之路更轻松了","content":"    bash\r"},"docker-full-stack_186":{"title":"前端有了Docker，全栈之路更轻松了","content":"    docker-compose -f docker-compose.yml -f docker-compose.prod.yml up\r"},"docker-full-stack_187":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_188":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_189":{"title":"前端有了Docker，全栈之路更轻松了","content":"    这将首先应用  中的设置来覆盖它。\r"},"docker-full-stack_190":{"title":"前端有了Docker，全栈之路更轻松了","content":"    \r"},"docker-full-stack_191":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_192":{"title":"前端有了Docker，全栈之路更轻松了","content":"这些策略都可以有效地区分开发和生产环境的配置。选择哪种方法取决于具体需求和团队的偏好。\r"},"docker-full-stack_193":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_194":{"title":"前端有了Docker，全栈之路更轻松了","content":"demo演练\r"},"docker-full-stack_195":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_196":{"title":"前端有了Docker，全栈之路更轻松了","content":"基于前文的demo，我们使用第一条策略来做一下环境区分。\r"},"docker-full-stack_197":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_198":{"title":"前端有了Docker，全栈之路更轻松了","content":"开发环境\r"},"docker-full-stack_199":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_200":{"title":"前端有了Docker，全栈之路更轻松了","content":"文件名\r"},"docker-full-stack_201":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_202":{"title":"前端有了Docker，全栈之路更轻松了","content":"yaml\r"},"docker-full-stack_203":{"title":"前端有了Docker，全栈之路更轻松了","content":"version: '3.1'\r"},"docker-full-stack_204":{"title":"前端有了Docker，全栈之路更轻松了","content":"services:\r"},"docker-full-stack_205":{"title":"前端有了Docker，全栈之路更轻松了","content":"  db:\r"},"docker-full-stack_206":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: postgres\r"},"docker-full-stack_207":{"title":"前端有了Docker，全栈之路更轻松了","content":"    volumes:\r"},"docker-full-stack_208":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - ./postgres:/var/lib/postgresql/data\r"},"docker-full-stack_209":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_210":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 5432:5432\r"},"docker-full-stack_211":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment:\r"},"docker-full-stack_212":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_USER=myuser\r"},"docker-full-stack_213":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_PASSWORD=mypassword\r"},"docker-full-stack_214":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_215":{"title":"前端有了Docker，全栈之路更轻松了","content":"  adminer:\r"},"docker-full-stack_216":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: adminer\r"},"docker-full-stack_217":{"title":"前端有了Docker，全栈之路更轻松了","content":"    restart: always\r"},"docker-full-stack_218":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_219":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 8080:8080\r"},"docker-full-stack_220":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_221":{"title":"前端有了Docker，全栈之路更轻松了","content":"  nextjs:\r"},"docker-full-stack_222":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: node:18 基于官方node镜像\r"},"docker-full-stack_223":{"title":"前端有了Docker，全栈之路更轻松了","content":"    working_dir: /app/app 设置工作目录\r"},"docker-full-stack_224":{"title":"前端有了Docker，全栈之路更轻松了","content":"    volumes:\r"},"docker-full-stack_225":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - .:/app/app 把当前目录挂载到容器里 \r"},"docker-full-stack_226":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_227":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 3001:3000 对外暴露端口\r"},"docker-full-stack_228":{"title":"前端有了Docker，全栈之路更轻松了","content":"    command: bash -c \"npx prisma generate && npm run dev\" 容器内启动命令\r"},"docker-full-stack_229":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_230":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment:\r"},"docker-full-stack_231":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - PG_HOST=db 设置数据库主机名为db    \r"},"docker-full-stack_232":{"title":"前端有了Docker，全栈之路更轻松了","content":"    depends_on:\r"},"docker-full-stack_233":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - db\r"},"docker-full-stack_234":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_235":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_236":{"title":"前端有了Docker，全栈之路更轻松了","content":"使用方法:\r"},"docker-full-stack_237":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_238":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_239":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker-compose -f docker-compose.dev.yml up\r"},"docker-full-stack_240":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_241":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_242":{"title":"前端有了Docker，全栈之路更轻松了","content":"生产环境\r"},"docker-full-stack_243":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_244":{"title":"前端有了Docker，全栈之路更轻松了","content":"文件名：\r"},"docker-full-stack_245":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_246":{"title":"前端有了Docker，全栈之路更轻松了","content":"yaml\r"},"docker-full-stack_247":{"title":"前端有了Docker，全栈之路更轻松了","content":"version: '3.1'\r"},"docker-full-stack_248":{"title":"前端有了Docker，全栈之路更轻松了","content":"services:\r"},"docker-full-stack_249":{"title":"前端有了Docker，全栈之路更轻松了","content":"  db:\r"},"docker-full-stack_250":{"title":"前端有了Docker，全栈之路更轻松了","content":"    image: postgres\r"},"docker-full-stack_251":{"title":"前端有了Docker，全栈之路更轻松了","content":"    volumes:\r"},"docker-full-stack_252":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - ./postgres:/var/lib/postgresql/data\r"},"docker-full-stack_253":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment:\r"},"docker-full-stack_254":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_USER=myuser\r"},"docker-full-stack_255":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - POSTGRES_PASSWORD=mypassword\r"},"docker-full-stack_256":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_257":{"title":"前端有了Docker，全栈之路更轻松了","content":"  nextjs:\r"},"docker-full-stack_258":{"title":"前端有了Docker，全栈之路更轻松了","content":"    build:\r"},"docker-full-stack_259":{"title":"前端有了Docker，全栈之路更轻松了","content":"      context: .\r"},"docker-full-stack_260":{"title":"前端有了Docker，全栈之路更轻松了","content":"      dockerfile: Dockerfile.prod\r"},"docker-full-stack_261":{"title":"前端有了Docker，全栈之路更轻松了","content":"    environment:\r"},"docker-full-stack_262":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - PG_HOST=db\r"},"docker-full-stack_263":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - NODE_ENV=production\r"},"docker-full-stack_264":{"title":"前端有了Docker，全栈之路更轻松了","content":"    ports:\r"},"docker-full-stack_265":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - 3001:3000\r"},"docker-full-stack_266":{"title":"前端有了Docker，全栈之路更轻松了","content":"    depends_on:\r"},"docker-full-stack_267":{"title":"前端有了Docker，全栈之路更轻松了","content":"      - db\r"},"docker-full-stack_268":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_269":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_270":{"title":"前端有了Docker，全栈之路更轻松了","content":"请注意，我们在生产环境的配置中添加了一个  的 Dockerfile。为此我们还需要创建 Dockerfile，以确保正确构建和优化生产环境。\r"},"docker-full-stack_271":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_272":{"title":"前端有了Docker，全栈之路更轻松了","content":"一个基本的  为 Next.js 应用可能是这样的:\r"},"docker-full-stack_273":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_274":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker\r"},"docker-full-stack_275":{"title":"前端有了Docker，全栈之路更轻松了","content":"使用官方 Node.js 镜像作为基础镜像\r"},"docker-full-stack_276":{"title":"前端有了Docker，全栈之路更轻松了","content":"FROM node:18\r"},"docker-full-stack_277":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_278":{"title":"前端有了Docker，全栈之路更轻松了","content":"设置工作目录\r"},"docker-full-stack_279":{"title":"前端有了Docker，全栈之路更轻松了","content":"WORKDIR /app/app\r"},"docker-full-stack_280":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_281":{"title":"前端有了Docker，全栈之路更轻松了","content":"复制 package.json 和 package-lock.json 到工作目录\r"},"docker-full-stack_282":{"title":"前端有了Docker，全栈之路更轻松了","content":"COPY package*.json ./\r"},"docker-full-stack_283":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_284":{"title":"前端有了Docker，全栈之路更轻松了","content":"安装依赖\r"},"docker-full-stack_285":{"title":"前端有了Docker，全栈之路更轻松了","content":"RUN npm install\r"},"docker-full-stack_286":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_287":{"title":"前端有了Docker，全栈之路更轻松了","content":"复制应用代码到工作目录\r"},"docker-full-stack_288":{"title":"前端有了Docker，全栈之路更轻松了","content":"COPY . .\r"},"docker-full-stack_289":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_290":{"title":"前端有了Docker，全栈之路更轻松了","content":"构建应用\r"},"docker-full-stack_291":{"title":"前端有了Docker，全栈之路更轻松了","content":"RUN npm run build\r"},"docker-full-stack_292":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_293":{"title":"前端有了Docker，全栈之路更轻松了","content":"设置运行时命令\r"},"docker-full-stack_294":{"title":"前端有了Docker，全栈之路更轻松了","content":"CMD [\"npm\", \"start\"]\r"},"docker-full-stack_295":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_296":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_297":{"title":"前端有了Docker，全栈之路更轻松了","content":"使用方法:\r"},"docker-full-stack_298":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_299":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_300":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker-compose -f docker-compose.prod.yml up --build\r"},"docker-full-stack_301":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_302":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_303":{"title":"前端有了Docker，全栈之路更轻松了","content":"-  参数确保在启动容器之前先构建镜像。\r"},"docker-full-stack_304":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_305":{"title":"前端有了Docker，全栈之路更轻松了","content":"现在重新打开和，会发现无法打开，因为生产配置里没有启动 adminer。\r"},"docker-full-stack_306":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_307":{"title":"前端有了Docker，全栈之路更轻松了","content":"部署到生产服务器\r"},"docker-full-stack_308":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_309":{"title":"前端有了Docker，全栈之路更轻松了","content":"先查看本地有哪些 Docker 镜像\r"},"docker-full-stack_310":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_311":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_312":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker images\r"},"docker-full-stack_313":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_314":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_315":{"title":"前端有了Docker，全栈之路更轻松了","content":"构建本地镜像\r"},"docker-full-stack_316":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_317":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_318":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker-compose -f docker-compose.prod.yml build\r"},"docker-full-stack_319":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_320":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_321":{"title":"前端有了Docker，全栈之路更轻松了","content":"保存镜像\r"},"docker-full-stack_322":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_323":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_324":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker save -o outputname:tag\r"},"docker-full-stack_325":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_326":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_327":{"title":"前端有了Docker，全栈之路更轻松了","content":"要用实际值，如图：\r"},"docker-full-stack_328":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_329":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_330":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_331":{"title":"前端有了Docker，全栈之路更轻松了","content":"到处完成后，就可以在根目录看到了\r"},"docker-full-stack_332":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_333":{"title":"前端有了Docker，全栈之路更轻松了","content":"上传到服务器后，用load命令加载\r"},"docker-full-stack_334":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_335":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_336":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker load -i yourname.tar\r"},"docker-full-stack_337":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_338":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_339":{"title":"前端有了Docker，全栈之路更轻松了","content":"确保也上传到服务器了，然后执行启动命令\r"},"docker-full-stack_340":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_341":{"title":"前端有了Docker，全栈之路更轻松了","content":"bash\r"},"docker-full-stack_342":{"title":"前端有了Docker，全栈之路更轻松了","content":"docker-compose -f docker-compose.prod.yml up -d\r"},"docker-full-stack_343":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_344":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_345":{"title":"前端有了Docker，全栈之路更轻松了","content":"这样 Docker 的部署流程就算完成了。\r"},"docker-full-stack_346":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_347":{"title":"前端有了Docker，全栈之路更轻松了","content":"结语\r"},"docker-full-stack_348":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_349":{"title":"前端有了Docker，全栈之路更轻松了","content":"Docker 已经成为现代软件开发中的一个不可或缺的工具。它为开发者提供了一个高度一致、隔离且可移植的环境，使得从开发到生产的过程变得更加流畅和可预测。\r"},"docker-full-stack_350":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_351":{"title":"前端有了Docker，全栈之路更轻松了","content":"对于前端工程师而言，虽然 Docker 可能最初看起来有些复杂，但一旦你掌握了其基本概念和操作，你将发现它能极大地提高工作效率和应用的部署稳定性。\r"},"docker-full-stack_352":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_353":{"title":"前端有了Docker，全栈之路更轻松了","content":"在这篇文章中，我们探讨了 Docker 和 Docker Compose 的基本概念、配置和常见问题。希望能为你打开新的大门，帮助你更好地理解和利用 Docker 的强大功能。\r"},"docker-full-stack_354":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_355":{"title":"前端有了Docker，全栈之路更轻松了","content":"源码与演示\r"},"docker-full-stack_356":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_357":{"title":"前端有了Docker，全栈之路更轻松了","content":"源码：👉\r"},"docker-full-stack_358":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_359":{"title":"前端有了Docker，全栈之路更轻松了","content":"在线演示：👉\r"},"docker-full-stack_360":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_361":{"title":"前端有了Docker，全栈之路更轻松了","content":"专栏资源\r"},"docker-full-stack_362":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_363":{"title":"前端有了Docker，全栈之路更轻松了","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"docker-full-stack_364":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_365":{"title":"前端有了Docker，全栈之路更轻松了","content":"专栏地址：👉\r"},"docker-full-stack_366":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_367":{"title":"前端有了Docker，全栈之路更轻松了","content":"专栏演示站：👉\r"},"docker-full-stack_368":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_369":{"title":"前端有了Docker，全栈之路更轻松了","content":"专栏源码仓库：👉\r"},"docker-full-stack_370":{"title":"前端有了Docker，全栈之路更轻松了","content":"\r"},"docker-full-stack_371":{"title":"前端有了Docker，全栈之路更轻松了","content":"交个朋友：👉"},"nextjs-auth-postgres-prisma-login":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"从Next-Auth到Prisma，用最新潮的技术栈做登录","display":"\r"},"nextjs-auth-postgres-prisma-login_0":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_1":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"引言\r"},"nextjs-auth-postgres-prisma-login_2":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_3":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"使用框架的前端工程师应该都听过一句话：的成员不是在就是在去的路上。的核心团队多来自，这正是快速成长的原因之一。\r"},"nextjs-auth-postgres-prisma-login_4":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_5":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"那么有什么特性呢？为应用提供了非常便利的开箱即用功能，如路由、页面预获取、服务器端渲染等，极大地简化和加速了开发，这也让成为前端领域的当红炸子鸡。\r"},"nextjs-auth-postgres-prisma-login_6":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_7":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"背后的公司是，这家公司还有当前最热门的自动化部署云平台。\r"},"nextjs-auth-postgres-prisma-login_8":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_9":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在社区里，还有下一代和的——；还有英国开发者Iain Collins开发了，这是一个支持多种登录方式如 的库，能够极大简化我们开发登录功能的时间。\r"},"nextjs-auth-postgres-prisma-login_10":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_11":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"，随着三个主角悉数亮相，就可以明确本文的目标了：用来完成一个登录的功能。\r"},"nextjs-auth-postgres-prisma-login_12":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_13":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_14":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_15":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"- 创建你的应用\r"},"nextjs-auth-postgres-prisma-login_16":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"- 在项目中使用完成登录流程（不限于登录）\r"},"nextjs-auth-postgres-prisma-login_17":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"- 构建开发环境数据库\r"},"nextjs-auth-postgres-prisma-login_18":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"- 当前最热门的——的基本使用\r"},"nextjs-auth-postgres-prisma-login_19":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_20":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"创建Github应用\r"},"nextjs-auth-postgres-prisma-login_21":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_22":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"本文假定你对有基本的了解，如果你还不了解，找个可以扫码登录的网站体验一下，那就叫授权登录。\r"},"nextjs-auth-postgres-prisma-login_23":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_24":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在我们在自己的后台创建一个应用，用户通过授权登录，那就成为你这个应用的用户啦。\r"},"nextjs-auth-postgres-prisma-login_25":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_26":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"第一步：到  创建应用\r"},"nextjs-auth-postgres-prisma-login_27":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_28":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"第二步：填写应用信息\r"},"nextjs-auth-postgres-prisma-login_29":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_30":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_31":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_32":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"注意：是授权登录后的回调地址，如果登录流程是自己开发，你可以根据自己代码来填，但是本文是用，所以得按的规范来做，必须填\r"},"nextjs-auth-postgres-prisma-login_33":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_34":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"第三步：创建完成后，会进入应用后台，此时需要生成和，并保存下和。\r"},"nextjs-auth-postgres-prisma-login_35":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_36":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_37":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_38":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"因为现在还处于本地调试阶段，所以我把设置的两个URL改成了：\r"},"nextjs-auth-postgres-prisma-login_39":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_40":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_41":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_42":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"应用创建就是这么简单，很适合用来做一些实验性的功能。\r"},"nextjs-auth-postgres-prisma-login_43":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_44":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"扩展阅读：\r"},"nextjs-auth-postgres-prisma-login_45":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_46":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果想学习的，请猛烈点击我的历史文章：\r"},"nextjs-auth-postgres-prisma-login_47":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_48":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_49":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_50":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"用Next-Auth实现登录\r"},"nextjs-auth-postgres-prisma-login_51":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_52":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"先创建一个项目：\r"},"nextjs-auth-postgres-prisma-login_53":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_54":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_55":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"npx create-next-app@latest\r"},"nextjs-auth-postgres-prisma-login_56":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_57":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_58":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"安装\r"},"nextjs-auth-postgres-prisma-login_59":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_60":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_61":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"yarn add next-auth\r"},"nextjs-auth-postgres-prisma-login_62":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_63":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_64":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在推出后，已支持模式下在文件夹内构建，但是鉴于官方文档主要使用方式仍然是放在文件夹下，所以本例也将在下进行编写。\r"},"nextjs-auth-postgres-prisma-login_65":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_66":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在中创建一个名为的文件\r"},"nextjs-auth-postgres-prisma-login_67":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_68":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_69":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import NextAuth from \"next-auth\"\r"},"nextjs-auth-postgres-prisma-login_70":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_71":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { authOptions } from \"@/lib/auth\"\r"},"nextjs-auth-postgres-prisma-login_72":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_73":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"// @see ./lib/auth\r"},"nextjs-auth-postgres-prisma-login_74":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export default NextAuth(authOptions)\r"},"nextjs-auth-postgres-prisma-login_75":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_76":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_77":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"中使用是为了动态匹配的所有API路由，如:\r"},"nextjs-auth-postgres-prisma-login_78":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_79":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"-  处理认证回调\r"},"nextjs-auth-postgres-prisma-login_80":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"-  处理登录\r"},"nextjs-auth-postgres-prisma-login_81":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"-  处理登出\r"},"nextjs-auth-postgres-prisma-login_82":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"-  获取等等\r"},"nextjs-auth-postgres-prisma-login_83":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_84":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"也就是说，使用可以动态匹配所有包含和的路由。\r"},"nextjs-auth-postgres-prisma-login_85":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_86":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"我们把的基本配置放在了里：\r"},"nextjs-auth-postgres-prisma-login_87":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_88":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_89":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import NextAuth, { NextAuthOptions } from \"next-auth\"\r"},"nextjs-auth-postgres-prisma-login_90":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import GithubProvider from 'next-auth/providers/github';\r"},"nextjs-auth-postgres-prisma-login_91":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_92":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export const authOptions: NextAuthOptions = {\r"},"nextjs-auth-postgres-prisma-login_93":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  session: {\r"},"nextjs-auth-postgres-prisma-login_94":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    strategy: \"jwt\",\r"},"nextjs-auth-postgres-prisma-login_95":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  },\r"},"nextjs-auth-postgres-prisma-login_96":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  pages: {\r"},"nextjs-auth-postgres-prisma-login_97":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    signIn: \"/auth/login\",\r"},"nextjs-auth-postgres-prisma-login_98":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    signOut: '/auth/logout',\r"},"nextjs-auth-postgres-prisma-login_99":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  },\r"},"nextjs-auth-postgres-prisma-login_100":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  providers: [\r"},"nextjs-auth-postgres-prisma-login_101":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    GithubProvider({\r"},"nextjs-auth-postgres-prisma-login_102":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      clientId: ,\r"},"nextjs-auth-postgres-prisma-login_103":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      clientSecret: ,\r"},"nextjs-auth-postgres-prisma-login_104":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      httpOptions: {\r"},"nextjs-auth-postgres-prisma-login_105":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        timeout: 50000,\r"},"nextjs-auth-postgres-prisma-login_106":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      },\r"},"nextjs-auth-postgres-prisma-login_107":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    }),\r"},"nextjs-auth-postgres-prisma-login_108":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    // GoogleProvider({\r"},"nextjs-auth-postgres-prisma-login_109":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    //   clientId: process.env.GOOGLE_ID,\r"},"nextjs-auth-postgres-prisma-login_110":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    //   clientSecret: process.env.GOOGLE_SECRET\r"},"nextjs-auth-postgres-prisma-login_111":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    // }),\r"},"nextjs-auth-postgres-prisma-login_112":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  ],\r"},"nextjs-auth-postgres-prisma-login_113":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  callbacks: {\r"},"nextjs-auth-postgres-prisma-login_114":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    session: async ({ session, token }) =\r"},"nextjs-auth-postgres-prisma-login_115":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      return token\r"},"nextjs-auth-postgres-prisma-login_116":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    }\r"},"nextjs-auth-postgres-prisma-login_117":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  },\r"},"nextjs-auth-postgres-prisma-login_118":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_119":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_120":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export default NextAuth(authOptions)\r"},"nextjs-auth-postgres-prisma-login_121":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_122":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_123":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"的服务端内容就是这些，乍一看容易一头雾水，但确实就是这么简单，它把中间繁琐的过程都封装起来了。\r"},"nextjs-auth-postgres-prisma-login_124":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_125":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在来写个这样的登录页\r"},"nextjs-auth-postgres-prisma-login_126":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_127":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_128":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_129":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"核心代码是「使用Github登录」的按钮\r"},"nextjs-auth-postgres-prisma-login_130":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_131":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_132":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"// components/UserAuthForm.tsx\r"},"nextjs-auth-postgres-prisma-login_133":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_134":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\"use client\";\r"},"nextjs-auth-postgres-prisma-login_135":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_136":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import * as React from \"react\";\r"},"nextjs-auth-postgres-prisma-login_137":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { signIn } from \"next-auth/react\";\r"},"nextjs-auth-postgres-prisma-login_138":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_139":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { cn } from \"@/lib/utils\";\r"},"nextjs-auth-postgres-prisma-login_140":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { buttonVariants } from \"@/components/ui/button\";\r"},"nextjs-auth-postgres-prisma-login_141":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { Icons } from \"@/components/Icons\";\r"},"nextjs-auth-postgres-prisma-login_142":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_143":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"interface UserAuthFormProps extends React.HTMLAttributes<HTMLDivElement\r"},"nextjs-auth-postgres-prisma-login_144":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_145":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export function UserAuthForm({ className, ...props }: UserAuthFormProps) {\r"},"nextjs-auth-postgres-prisma-login_146":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  const [isGitHubLoading, setIsGitHubLoading] = React.useState<boolean>(false);\r"},"nextjs-auth-postgres-prisma-login_147":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_148":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  const login = async () =\r"},"nextjs-auth-postgres-prisma-login_149":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    setIsGitHubLoading(true);\r"},"nextjs-auth-postgres-prisma-login_150":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    signIn(\"github\", { // 登录方法，第一个参数标注平台\r"},"nextjs-auth-postgres-prisma-login_151":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      callbackUrl: , // 设置登录成功后的回调地址\r"},"nextjs-auth-postgres-prisma-login_152":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    });\r"},"nextjs-auth-postgres-prisma-login_153":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  };\r"},"nextjs-auth-postgres-prisma-login_154":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_155":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  return (\r"},"nextjs-auth-postgres-prisma-login_156":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    <div className={cn(\"grid gap-6\", className)} {...props}"},"nextjs-auth-postgres-prisma-login_157":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      <button\r"},"nextjs-auth-postgres-prisma-login_158":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        type=\"button\"\r"},"nextjs-auth-postgres-prisma-login_159":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        className={cn(buttonVariants())}\r"},"nextjs-auth-postgres-prisma-login_160":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        onClick={login}\r"},"nextjs-auth-postgres-prisma-login_161":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        disabled={isGitHubLoading}\r"},"nextjs-auth-postgres-prisma-login_162":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      "},"nextjs-auth-postgres-prisma-login_163":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        {isGitHubLoading ? (\r"},"nextjs-auth-postgres-prisma-login_164":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          <Icons.spinner className=\"mr-2 h-4 w-4 animate-spin\" /"},"nextjs-auth-postgres-prisma-login_165":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        ) : (\r"},"nextjs-auth-postgres-prisma-login_166":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          <Icons.gitHub className=\"mr-2 h-4 w-4\" /"},"nextjs-auth-postgres-prisma-login_167":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        )}{\" \"}\r"},"nextjs-auth-postgres-prisma-login_168":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        Github\r"},"nextjs-auth-postgres-prisma-login_169":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      </button"},"nextjs-auth-postgres-prisma-login_170":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    </div"},"nextjs-auth-postgres-prisma-login_171":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  );\r"},"nextjs-auth-postgres-prisma-login_172":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_173":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_174":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_175":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"前端部分也完成了。\r"},"nextjs-auth-postgres-prisma-login_176":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_177":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"这时候还要配一个环境变量\r"},"nextjs-auth-postgres-prisma-login_178":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_179":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_180":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":".env\r"},"nextjs-auth-postgres-prisma-login_181":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"GITHUBGITHUB_ID\r"},"nextjs-auth-postgres-prisma-login_182":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"GITHUBGITHUB_SECRET\r"},"nextjs-auth-postgres-prisma-login_183":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_184":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"NEXTAUTH_SECRET是必填项，用命令生成: openssl rand -base64 32\r"},"nextjs-auth-postgres-prisma-login_185":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"NEXTAUTHNEXTAUTH_SECRET\r"},"nextjs-auth-postgres-prisma-login_186":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"NEXTAUTH_URL=http://localhost:3001 告诉next-auth授权回调的基础 URL，这个环境变量是必须的，虽然它没有在我们的代码里体现\r"},"nextjs-auth-postgres-prisma-login_187":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_188":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_189":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在试一下能不能完成登录。点击按钮确实会跳到授权页\r"},"nextjs-auth-postgres-prisma-login_190":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_191":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_192":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_193":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"授权后会跳到首页，完成了授权登录流程了。\r"},"nextjs-auth-postgres-prisma-login_194":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_195":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"需要一个更准确的信息证明真的完成授权登录了？那就在首页把个人信息回显出来。这依然需要用到的。让我们在下面新建一个文件叫做\r"},"nextjs-auth-postgres-prisma-login_196":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_197":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_198":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"// session.ts\r"},"nextjs-auth-postgres-prisma-login_199":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { getServerSession } from \"next-auth/next\"\r"},"nextjs-auth-postgres-prisma-login_200":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_201":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { authOptions } from \"@/lib/auth\"\r"},"nextjs-auth-postgres-prisma-login_202":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_203":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export async function getCurrentUser() {\r"},"nextjs-auth-postgres-prisma-login_204":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  const session = await getServerSession(authOptions)\r"},"nextjs-auth-postgres-prisma-login_205":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_206":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  return session?.user\r"},"nextjs-auth-postgres-prisma-login_207":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_208":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_209":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_210":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在调用\r"},"nextjs-auth-postgres-prisma-login_211":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_212":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_213":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import Image from 'next/image'\r"},"nextjs-auth-postgres-prisma-login_214":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { getCurrentUser } from \"@/lib/session\";\r"},"nextjs-auth-postgres-prisma-login_215":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_216":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export default async function Home() {\r"},"nextjs-auth-postgres-prisma-login_217":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  const user = await getCurrentUser();\r"},"nextjs-auth-postgres-prisma-login_218":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  console.log(user);\r"},"nextjs-auth-postgres-prisma-login_219":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_220":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\treturn (\r"},"nextjs-auth-postgres-prisma-login_221":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\t\t<main"},"nextjs-auth-postgres-prisma-login_222":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\t\t\t……<div"},"nextjs-auth-postgres-prisma-login_223":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        <div className=\"flex\""},"nextjs-auth-postgres-prisma-login_224":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          {user?.image ? (\r"},"nextjs-auth-postgres-prisma-login_225":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            <"},"nextjs-auth-postgres-prisma-login_226":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              {\" \"}\r"},"nextjs-auth-postgres-prisma-login_227":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              Current User:{\" \"}\r"},"nextjs-auth-postgres-prisma-login_228":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              <Image\r"},"nextjs-auth-postgres-prisma-login_229":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                className=\"relative rounded-full ml-3 dark:drop-shadow-[00.3rem_#ffffff70] dark:invert\"\r"},"nextjs-auth-postgres-prisma-login_230":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                src={user.image}\r"},"nextjs-auth-postgres-prisma-login_231":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                alt=\"Next.js Logo\"\r"},"nextjs-auth-postgres-prisma-login_232":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                width={36}\r"},"nextjs-auth-postgres-prisma-login_233":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                height={36}\r"},"nextjs-auth-postgres-prisma-login_234":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"                priority\r"},"nextjs-auth-postgres-prisma-login_235":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              /"},"nextjs-auth-postgres-prisma-login_236":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            </"},"nextjs-auth-postgres-prisma-login_237":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          ) : (\r"},"nextjs-auth-postgres-prisma-login_238":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            <></"},"nextjs-auth-postgres-prisma-login_239":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          )}\r"},"nextjs-auth-postgres-prisma-login_240":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        </div"},"nextjs-auth-postgres-prisma-login_241":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        {!user ? (\r"},"nextjs-auth-postgres-prisma-login_242":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          <div className=\"\""},"nextjs-auth-postgres-prisma-login_243":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            Next-Auth的demo请到\r"},"nextjs-auth-postgres-prisma-login_244":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            <Link\r"},"nextjs-auth-postgres-prisma-login_245":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              href=\"/login\"\r"},"nextjs-auth-postgres-prisma-login_246":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              className=\"hover:text-brand underline underline-offset-4\"\r"},"nextjs-auth-postgres-prisma-login_247":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            "},"nextjs-auth-postgres-prisma-login_248":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"              登录页\r"},"nextjs-auth-postgres-prisma-login_249":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            </Link"},"nextjs-auth-postgres-prisma-login_250":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"            体验\r"},"nextjs-auth-postgres-prisma-login_251":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          </div"},"nextjs-auth-postgres-prisma-login_252":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        ) : (\r"},"nextjs-auth-postgres-prisma-login_253":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          <SignOut></SignOut"},"nextjs-auth-postgres-prisma-login_254":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        )}\r"},"nextjs-auth-postgres-prisma-login_255":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      </div"},"nextjs-auth-postgres-prisma-login_256":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\t\t\t……\r"},"nextjs-auth-postgres-prisma-login_257":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\t\t</main"},"nextjs-auth-postgres-prisma-login_258":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\t)\r"},"nextjs-auth-postgres-prisma-login_259":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_260":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_261":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_262":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"为了可以生效，我们需要在里添加可信域\r"},"nextjs-auth-postgres-prisma-login_263":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_264":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_265":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"//\r"},"nextjs-auth-postgres-prisma-login_266":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"const nextConfig = {\r"},"nextjs-auth-postgres-prisma-login_267":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  images: {\r"},"nextjs-auth-postgres-prisma-login_268":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    domains: ['avatars.githubusercontent.com'], // 添加github头像服务的域名\r"},"nextjs-auth-postgres-prisma-login_269":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  },\r"},"nextjs-auth-postgres-prisma-login_270":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_271":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_272":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"module.exports = nextConfig\r"},"nextjs-auth-postgres-prisma-login_273":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_274":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_275":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在在首页就可以看到用户信息回显了\r"},"nextjs-auth-postgres-prisma-login_276":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_277":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_278":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_279":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果你自己开发过登录，再看到的流程，你一定会很兴奋，因为帮我们处理掉了很多中间过程。如果你没开发过，可以到这一篇看看自己开发登录有多麻烦：\r"},"nextjs-auth-postgres-prisma-login_280":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_281":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"搭建postgres测试数据库\r"},"nextjs-auth-postgres-prisma-login_282":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_283":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"有时候我们不止是需要第三方授权的用户信息，我们还想自己保存一个用户表，把用户基本信息和我们自定义的一些字段共存，那么我们就需要建一个数据库了。\r"},"nextjs-auth-postgres-prisma-login_284":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_285":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在被收购后，成为开源社区里最闪亮的新星。也是本文代码用到的数据库。\r"},"nextjs-auth-postgres-prisma-login_286":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_287":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果我们自己安装，很多操作会显得非常繁琐，但如果在中安装，一切就变得非常丝滑。\r"},"nextjs-auth-postgres-prisma-login_288":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_289":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果你还没安装，请通过官网安装一下，安装后用命令验证是否安装成功，如果安装成功，会返回的版本号。\r"},"nextjs-auth-postgres-prisma-login_290":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_291":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_292":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"docker-compose -v\r"},"nextjs-auth-postgres-prisma-login_293":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_294":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_295":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"docker安装完成后，到项目根目录下创建文件\r"},"nextjs-auth-postgres-prisma-login_296":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_297":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"yaml\r"},"nextjs-auth-postgres-prisma-login_298":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"docker-compose.yml\r"},"nextjs-auth-postgres-prisma-login_299":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"version: '3.1'\r"},"nextjs-auth-postgres-prisma-login_300":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"services:\r"},"nextjs-auth-postgres-prisma-login_301":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  nextjs-learn-domes:\r"},"nextjs-auth-postgres-prisma-login_302":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    image: postgres\r"},"nextjs-auth-postgres-prisma-login_303":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    volumes:\r"},"nextjs-auth-postgres-prisma-login_304":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      - ./postgres:/var/lib/postgresql/data\r"},"nextjs-auth-postgres-prisma-login_305":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    ports:\r"},"nextjs-auth-postgres-prisma-login_306":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      - 5432:5432\r"},"nextjs-auth-postgres-prisma-login_307":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    environment:\r"},"nextjs-auth-postgres-prisma-login_308":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      - POSTGRES_USER=myuser\r"},"nextjs-auth-postgres-prisma-login_309":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      - POSTGRES_PASSWORD=mypassword\r"},"nextjs-auth-postgres-prisma-login_310":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_311":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  adminer:\r"},"nextjs-auth-postgres-prisma-login_312":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    image: adminer\r"},"nextjs-auth-postgres-prisma-login_313":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    restart: always\r"},"nextjs-auth-postgres-prisma-login_314":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    ports:\r"},"nextjs-auth-postgres-prisma-login_315":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      - 8080:8080\r"},"nextjs-auth-postgres-prisma-login_316":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_317":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_318":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"启动\r"},"nextjs-auth-postgres-prisma-login_319":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_320":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_321":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"docker-compose up -d\r"},"nextjs-auth-postgres-prisma-login_322":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_323":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_324":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果启动失败，请排查5432和8080端口是否被占用，如果被占用需要先关闭占用的服务再启动。\r"},"nextjs-auth-postgres-prisma-login_325":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_326":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在访问就可以登录数据库了\r"},"nextjs-auth-postgres-prisma-login_327":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_328":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_329":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_330":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果要关闭，可以执行命令\r"},"nextjs-auth-postgres-prisma-login_331":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_332":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_333":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"docker-compose down\r"},"nextjs-auth-postgres-prisma-login_334":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_335":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_336":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"：\r"},"nextjs-auth-postgres-prisma-login_337":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_338":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"用Prisma操作数据库\r"},"nextjs-auth-postgres-prisma-login_339":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_340":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"Prisma是下一代和的。在Node中用过操作数据库的兄弟都知道，这是一个让你可以用写对象的方式来写的工具，极大简化了前端对的学习成本和开发成本，也是这样的工具。\r"},"nextjs-auth-postgres-prisma-login_341":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_342":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_343":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_344":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_345":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_346":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_347":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_348":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_349":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_350":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_351":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"开始使用Prisma\r"},"nextjs-auth-postgres-prisma-login_352":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_353":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_354":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"yarn add prisma @prisma/client\r"},"nextjs-auth-postgres-prisma-login_355":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_356":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_357":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"初始化Prisma\r"},"nextjs-auth-postgres-prisma-login_358":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_359":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_360":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"npx prisma init\r"},"nextjs-auth-postgres-prisma-login_361":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_362":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_363":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"初始化后，在根目录会出现一个的文件夹，这个文件夹用来存放相关配置；里面还有一个文件，是核心的数据库定义文件，开发时主要通过修改它来更新数据库模型设计。\r"},"nextjs-auth-postgres-prisma-login_364":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_365":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"再去看.env文件，会发现多了一条配置\r"},"nextjs-auth-postgres-prisma-login_366":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_367":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_368":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"DATABASE_URL=\"postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public\"\r"},"nextjs-auth-postgres-prisma-login_369":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_370":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_371":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"需要改成我们的postgres配置\r"},"nextjs-auth-postgres-prisma-login_372":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_373":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_374":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"DATABASE_URL=\"postgresql://myuser:mypassword@localhost:5432/mydb?schema=public\"\r"},"nextjs-auth-postgres-prisma-login_375":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_376":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_377":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"创建数据库\r"},"nextjs-auth-postgres-prisma-login_378":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_379":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"现在开始思考我们的用户表结构，未来我们希望通过接入多个第三方平台的，那么可以记录下用户在第三方平台的唯一id，还需要抹平不同平台的用户信息字段。那么就可以在用户表里添加和，再统一用户信息字段、。\r"},"nextjs-auth-postgres-prisma-login_380":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_381":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"是唯一的定义文件，定义表结构如下：\r"},"nextjs-auth-postgres-prisma-login_382":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_383":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"scheme\r"},"nextjs-auth-postgres-prisma-login_384":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"// schema.prisma\r"},"nextjs-auth-postgres-prisma-login_385":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_386":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"……\r"},"nextjs-auth-postgres-prisma-login_387":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_388":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"model User {\r"},"nextjs-auth-postgres-prisma-login_389":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  id        Int      @id @default(autoincrement())\r"},"nextjs-auth-postgres-prisma-login_390":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  sub       String   @unique // 第三方平台的唯一id\r"},"nextjs-auth-postgres-prisma-login_391":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  platform  String   // 第三方平台标识，如：github google\r"},"nextjs-auth-postgres-prisma-login_392":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  username  String\r"},"nextjs-auth-postgres-prisma-login_393":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  avatar    String\r"},"nextjs-auth-postgres-prisma-login_394":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  email     String\r"},"nextjs-auth-postgres-prisma-login_395":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  createdAt DateTime @default(now())\r"},"nextjs-auth-postgres-prisma-login_396":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  updatedAt DateTime @updatedAt\r"},"nextjs-auth-postgres-prisma-login_397":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_398":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_399":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_400":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"定义了表结构后，本身不会自动创建表，需要执行命令才会由来生成和执行创建表的SQL语句\r"},"nextjs-auth-postgres-prisma-login_401":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_402":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"bash\r"},"nextjs-auth-postgres-prisma-login_403":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"npx prisma migrate dev --name \"init\"\r"},"nextjs-auth-postgres-prisma-login_404":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_405":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_406":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"打开数据库，会发现现在表已经创建出来了\r"},"nextjs-auth-postgres-prisma-login_407":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_408":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_409":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_410":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"如果你想深入了解一下命令，请猛烈点击：\r"},"nextjs-auth-postgres-prisma-login_411":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_412":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"实例化PrismaClient\r"},"nextjs-auth-postgres-prisma-login_413":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_414":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"创建，实例化\r"},"nextjs-auth-postgres-prisma-login_415":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_416":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_417":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { PrismaClient } from \"@prisma/client\";\r"},"nextjs-auth-postgres-prisma-login_418":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_419":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"declare global {\r"},"nextjs-auth-postgres-prisma-login_420":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  // eslint-disable-next-line no-var\r"},"nextjs-auth-postgres-prisma-login_421":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  var prisma: PrismaClient\r"},"nextjs-auth-postgres-prisma-login_422":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_423":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_424":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"let prisma: PrismaClient;\r"},"nextjs-auth-postgres-prisma-login_425":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_426":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"if (process.env.NODE_ENV === \"production\") {\r"},"nextjs-auth-postgres-prisma-login_427":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  prisma = new PrismaClient();\r"},"nextjs-auth-postgres-prisma-login_428":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"} else {\r"},"nextjs-auth-postgres-prisma-login_429":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  if (!global.prisma) {\r"},"nextjs-auth-postgres-prisma-login_430":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    global.prisma = new PrismaClient();\r"},"nextjs-auth-postgres-prisma-login_431":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  }\r"},"nextjs-auth-postgres-prisma-login_432":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  prisma = global.prisma;\r"},"nextjs-auth-postgres-prisma-login_433":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"}\r"},"nextjs-auth-postgres-prisma-login_434":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"export default prisma;\r"},"nextjs-auth-postgres-prisma-login_435":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_436":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_437":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"实例的作用是连接数据库并执行数据库操作，可以把它理解为一个数据库客户端,可以通过它来发送数据库查询、修改数据。\r"},"nextjs-auth-postgres-prisma-login_438":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_439":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"修改，我们尝试把从获取的用户信息存到表里\r"},"nextjs-auth-postgres-prisma-login_440":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_441":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"tsx\r"},"nextjs-auth-postgres-prisma-login_442":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"……\r"},"nextjs-auth-postgres-prisma-login_443":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import prisma from \"@/lib/prisma\";\r"},"nextjs-auth-postgres-prisma-login_444":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"import { UserInfo } from \"@/types/user\";\r"},"nextjs-auth-postgres-prisma-login_445":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_446":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"……\r"},"nextjs-auth-postgres-prisma-login_447":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_448":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"callbacks: {\r"},"nextjs-auth-postgres-prisma-login_449":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    session: async ({ session, token }) =\r"},"nextjs-auth-postgres-prisma-login_450":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      const res = await prisma.user.upsert({\r"},"nextjs-auth-postgres-prisma-login_451":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        where: {\r"},"nextjs-auth-postgres-prisma-login_452":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          sub: token.sub\r"},"nextjs-auth-postgres-prisma-login_453":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        },\r"},"nextjs-auth-postgres-prisma-login_454":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        update: {\r"},"nextjs-auth-postgres-prisma-login_455":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          // 使用token中的数据\r"},"nextjs-auth-postgres-prisma-login_456":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          username: token.name,\r"},"nextjs-auth-postgres-prisma-login_457":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          avatar: token.picture,\r"},"nextjs-auth-postgres-prisma-login_458":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          email: token.email\r"},"nextjs-auth-postgres-prisma-login_459":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        },\r"},"nextjs-auth-postgres-prisma-login_460":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        create: {\r"},"nextjs-auth-postgres-prisma-login_461":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          // 使用token中的数据 \r"},"nextjs-auth-postgres-prisma-login_462":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          sub: token.sub,\r"},"nextjs-auth-postgres-prisma-login_463":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          username: token.name,\r"},"nextjs-auth-postgres-prisma-login_464":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          avatar: token.picture,\r"},"nextjs-auth-postgres-prisma-login_465":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          email: token.email,\r"},"nextjs-auth-postgres-prisma-login_466":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          platform: 'github',\r"},"nextjs-auth-postgres-prisma-login_467":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        }\r"},"nextjs-auth-postgres-prisma-login_468":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      })\r"},"nextjs-auth-postgres-prisma-login_469":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      if (res) {\r"},"nextjs-auth-postgres-prisma-login_470":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        session.user = {\r"},"nextjs-auth-postgres-prisma-login_471":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          sub: res.sub,\r"},"nextjs-auth-postgres-prisma-login_472":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          platform: res.platform,\r"},"nextjs-auth-postgres-prisma-login_473":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          username: res.username,\r"},"nextjs-auth-postgres-prisma-login_474":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          avatar: res.avatar,\r"},"nextjs-auth-postgres-prisma-login_475":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"          email: res.email,\r"},"nextjs-auth-postgres-prisma-login_476":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"        } as UserInfo\r"},"nextjs-auth-postgres-prisma-login_477":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      }\r"},"nextjs-auth-postgres-prisma-login_478":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"      return session\r"},"nextjs-auth-postgres-prisma-login_479":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"    }\r"},"nextjs-auth-postgres-prisma-login_480":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"  },\r"},"nextjs-auth-postgres-prisma-login_481":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_482":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"……\r"},"nextjs-auth-postgres-prisma-login_483":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_484":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_485":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_486":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"回到页面，重新登录一下，会发现原本显示头像的位置不显示了，说明已经拿到我们封装后的用户信息了，只要修改一下字段就可以回显。\r"},"nextjs-auth-postgres-prisma-login_487":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_488":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"结语\r"},"nextjs-auth-postgres-prisma-login_489":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_490":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"通过本文的学习，我们用全新的技术栈完成了一个登录模块，如果你自己折腾过登录流程，一定能感受到的强大。\r"},"nextjs-auth-postgres-prisma-login_491":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_492":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"本文涉及的技术栈，都是当前海外前端圈流行的新技术，比较适合个人开发者快速开发创意原型或实用工具。这套技术组合both前后端都能快速高效地工作，是构建web应用的绝佳选择。\r"},"nextjs-auth-postgres-prisma-login_493":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_494":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"源码与演示\r"},"nextjs-auth-postgres-prisma-login_495":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_496":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"源码：👉\r"},"nextjs-auth-postgres-prisma-login_497":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_498":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"在线演示：👉\r"},"nextjs-auth-postgres-prisma-login_499":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_500":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"专栏资源\r"},"nextjs-auth-postgres-prisma-login_501":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_502":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"nextjs-auth-postgres-prisma-login_503":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_504":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"专栏地址：👉\r"},"nextjs-auth-postgres-prisma-login_505":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_506":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"专栏演示站：👉\r"},"nextjs-auth-postgres-prisma-login_507":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_508":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"专栏源码仓库：👉\r"},"nextjs-auth-postgres-prisma-login_509":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"\r"},"nextjs-auth-postgres-prisma-login_510":{"title":"从Next-Auth到Prisma，用最新潮的技术栈做登录","content":"交个朋友：👉"},"learn-prisma-migrate":{"title":"prisma migrate命令简明教程","content":"prisma migrate命令简明教程","display":"\r"},"learn-prisma-migrate_0":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_1":{"title":"prisma migrate命令简明教程","content":"是的数据库迁移工具，可以帮助我们管理数据库模式的变更。本文在假设读者已认识的前提下展开。\r"},"learn-prisma-migrate_2":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_3":{"title":"prisma migrate命令简明教程","content":"创建模型\r"},"learn-prisma-migrate_4":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_5":{"title":"prisma migrate命令简明教程","content":"假设我们在中定义了一个模型。例如:\r"},"learn-prisma-migrate_6":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_7":{"title":"prisma migrate命令简明教程","content":"scheme\r"},"learn-prisma-migrate_8":{"title":"prisma migrate命令简明教程","content":"// schema.prisma\r"},"learn-prisma-migrate_9":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_10":{"title":"prisma migrate命令简明教程","content":"model Post {\r"},"learn-prisma-migrate_11":{"title":"prisma migrate命令简明教程","content":"  id        Int     @id @default(autoincrement())\r"},"learn-prisma-migrate_12":{"title":"prisma migrate命令简明教程","content":"  title     String\r"},"learn-prisma-migrate_13":{"title":"prisma migrate命令简明教程","content":"  content   String?\r"},"learn-prisma-migrate_14":{"title":"prisma migrate命令简明教程","content":"  createdAt DateTime @default(now())\r"},"learn-prisma-migrate_15":{"title":"prisma migrate命令简明教程","content":"}\r"},"learn-prisma-migrate_16":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_17":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_18":{"title":"prisma migrate命令简明教程","content":"接着运行:\r"},"learn-prisma-migrate_19":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_20":{"title":"prisma migrate命令简明教程","content":"bash\r"},"learn-prisma-migrate_21":{"title":"prisma migrate命令简明教程","content":"npx prisma migrate dev --name init\r"},"learn-prisma-migrate_22":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_23":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_24":{"title":"prisma migrate命令简明教程","content":"这会生成一个新的迁移，并在数据库中。\r"},"learn-prisma-migrate_25":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_26":{"title":"prisma migrate命令简明教程","content":"这条命令会让帮我们完成这些工作：\r"},"learn-prisma-migrate_27":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_28":{"title":"prisma migrate命令简明教程","content":"- 根据中的模型定义，生成了创建这些模型所需的SQL语句\r"},"learn-prisma-migrate_29":{"title":"prisma migrate命令简明教程","content":"- 这些SQL语句会在一个新建的迁移文件中，默认位置是目录下\r"},"learn-prisma-migrate_30":{"title":"prisma migrate命令简明教程","content":"- 迁移文件的名称包含了命令中指定的参数,在这个例子中是\r"},"learn-prisma-migrate_31":{"title":"prisma migrate命令简明教程","content":"- 执行了这些SQL语句来更新数据库，进行了具体的建表、改表等操作\r"},"learn-prisma-migrate_32":{"title":"prisma migrate命令简明教程","content":"- 数据库 得到了实际变更，包含了在中定义的模型\r"},"learn-prisma-migrate_33":{"title":"prisma migrate命令简明教程","content":"- 数据库的更新与达成一致\r"},"learn-prisma-migrate_34":{"title":"prisma migrate命令简明教程","content":"- 同时，根据更新后的重新生成,包含了对新模型的操作API\r"},"learn-prisma-migrate_35":{"title":"prisma migrate命令简明教程","content":"- 所以，命令把模型从映射到实际数据库实现中\r"},"learn-prisma-migrate_36":{"title":"prisma migrate命令简明教程","content":"- 加上参数,可以在执行时生成命名迁移文件,便于版本控制\r"},"learn-prisma-migrate_37":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_38":{"title":"prisma migrate命令简明教程","content":"更新模型\r"},"learn-prisma-migrate_39":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_40":{"title":"prisma migrate命令简明教程","content":"当我们需要变更模型时，例如添加一个新字段，我们需要:\r"},"learn-prisma-migrate_41":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_42":{"title":"prisma migrate命令简明教程","content":"1. 在Prisma Schema中更新模型，如：\r"},"learn-prisma-migrate_43":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_44":{"title":"prisma migrate命令简明教程","content":"scheme\r"},"learn-prisma-migrate_45":{"title":"prisma migrate命令简明教程","content":"model Post {\r"},"learn-prisma-migrate_46":{"title":"prisma migrate命令简明教程","content":"  id        Int     @id @default(autoincrement())\r"},"learn-prisma-migrate_47":{"title":"prisma migrate命令简明教程","content":"  title     String\r"},"learn-prisma-migrate_48":{"title":"prisma migrate命令简明教程","content":"  content   String?\r"},"learn-prisma-migrate_49":{"title":"prisma migrate命令简明教程","content":"+ author    String?\r"},"learn-prisma-migrate_50":{"title":"prisma migrate命令简明教程","content":"  createdAt DateTime @default(now())\r"},"learn-prisma-migrate_51":{"title":"prisma migrate命令简明教程","content":"}\r"},"learn-prisma-migrate_52":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_53":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_54":{"title":"prisma migrate命令简明教程","content":"1. 运行更新迁移\r"},"learn-prisma-migrate_55":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_56":{"title":"prisma migrate命令简明教程","content":"命令执行后会进行以下操作:\r"},"learn-prisma-migrate_57":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_58":{"title":"prisma migrate命令简明教程","content":"- 根据生成新增字段的SQL语句\r"},"learn-prisma-migrate_59":{"title":"prisma migrate命令简明教程","content":"- 创建一个新迁移文件,命名为\r"},"learn-prisma-migrate_60":{"title":"prisma migrate命令简明教程","content":"- 在开发环境数据库执行SQL,完成添加新字段的操作\r"},"learn-prisma-migrate_61":{"title":"prisma migrate命令简明教程","content":"- 也会根据新的重新生成\r"},"learn-prisma-migrate_62":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_63":{"title":"prisma migrate命令简明教程","content":"更新生产环境数据库\r"},"learn-prisma-migrate_64":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_65":{"title":"prisma migrate命令简明教程","content":"当我们想修改生产环境的数据库，可以利用这个命令：\r"},"learn-prisma-migrate_66":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_67":{"title":"prisma migrate命令简明教程","content":"bash\r"},"learn-prisma-migrate_68":{"title":"prisma migrate命令简明教程","content":"npx prisma migrate deploy\r"},"learn-prisma-migrate_69":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_70":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_71":{"title":"prisma migrate命令简明教程","content":"完整更新生产环境数据库的步骤是：\r"},"learn-prisma-migrate_72":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_73":{"title":"prisma migrate命令简明教程","content":"1. 在本地开发环境,更新 ，例如添加新字段\r"},"learn-prisma-migrate_74":{"title":"prisma migrate命令简明教程","content":"2. 在本地运行: 来生成新的迁移文件\r"},"learn-prisma-migrate_75":{"title":"prisma migrate命令简明教程","content":"3. 将生成的迁移文件更新到生产环境\r"},"learn-prisma-migrate_76":{"title":"prisma migrate命令简明教程","content":"4. 在生产环境运行：\r"},"learn-prisma-migrate_77":{"title":"prisma migrate命令简明教程","content":"5. 这会找到尚未执行的迁移文件，并运行里面的SQL语句来更新数据库 schema\r"},"learn-prisma-migrate_78":{"title":"prisma migrate命令简明教程","content":"6. 如果一切顺利，迁移完成后可以重新启动相关服务\r"},"learn-prisma-migrate_79":{"title":"prisma migrate命令简明教程","content":"7. 下次部署时， 会自动忽略已迁移的文件\r"},"learn-prisma-migrate_80":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_81":{"title":"prisma migrate命令简明教程","content":"重置数据库\r"},"learn-prisma-migrate_82":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_83":{"title":"prisma migrate命令简明教程","content":"当我们在开发过程中，通过多次和执行了一系列的迁移操作后，数据库的schema可能已经和最初的状态不一样了。\r"},"learn-prisma-migrate_84":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_85":{"title":"prisma migrate命令简明教程","content":"如果这个时候我们想直接重置数据库schema到一个空的初始状态,这里就可以使用这个命令：\r"},"learn-prisma-migrate_86":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_87":{"title":"prisma migrate命令简明教程","content":"bash\r"},"learn-prisma-migrate_88":{"title":"prisma migrate命令简明教程","content":"npx prisma migrate reset\r"},"learn-prisma-migrate_89":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_90":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_91":{"title":"prisma migrate命令简明教程","content":"重置迁移会:\r"},"learn-prisma-migrate_92":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_93":{"title":"prisma migrate命令简明教程","content":"1. 删除数据库中所有由创建的表\r"},"learn-prisma-migrate_94":{"title":"prisma migrate命令简明教程","content":"2. 删除表，这是内部用来记录迁移历史的表\r"},"learn-prisma-migrate_95":{"title":"prisma migrate命令简明教程","content":"3. 重新创建并初始化表\r"},"learn-prisma-migrate_96":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_97":{"title":"prisma migrate命令简明教程","content":"这样就会让数据库回到一个没有任何模型的干净状态。\r"},"learn-prisma-migrate_98":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_99":{"title":"prisma migrate命令简明教程","content":"之后如果再次运行,就会重新生成初始的迁移文件，可以重新执行数据库schema的变更。\r"},"learn-prisma-migrate_100":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_101":{"title":"prisma migrate命令简明教程","content":"所以在开发过程中，如果发现数据库schema已经混乱难以维护时，可以用来清空状态，然后重新开始迁移。\r"},"learn-prisma-migrate_102":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_103":{"title":"prisma migrate命令简明教程","content":"在生产环境中要非常小心使用该命令，它会导致现有数据被清空。\r"},"learn-prisma-migrate_104":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_105":{"title":"prisma migrate命令简明教程","content":"批准迁移\r"},"learn-prisma-migrate_106":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_107":{"title":"prisma migrate命令简明教程","content":"在我们使用生成了许多迁移文件之后，这些迁移都只是未批准的状态。\r"},"learn-prisma-migrate_108":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_109":{"title":"prisma migrate命令简明教程","content":"如果想让这些迁移生效，我们通常需要运行。\r"},"learn-prisma-migrate_110":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_111":{"title":"prisma migrate命令简明教程","content":"但是如果想批量批准所有的迁移文件，可以使用。\r"},"learn-prisma-migrate_112":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_113":{"title":"prisma migrate命令简明教程","content":"这会直接在数据库中应用所有这些未批准的迁移，等效于依次执行了每一个。\r"},"learn-prisma-migrate_114":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_115":{"title":"prisma migrate命令简明教程","content":"这样可以避免需要一个一个地部署迁移文件，特别是在开发环境需要重建数据库时，会非常方便。\r"},"learn-prisma-migrate_116":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_117":{"title":"prisma migrate命令简明教程","content":"在生产环境中要慎用这个命令，因为它会直接变更数据库，建议还是每次只部署一个迁移文件。\r"},"learn-prisma-migrate_118":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_119":{"title":"prisma migrate命令简明教程","content":"结语\r"},"learn-prisma-migrate_120":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_121":{"title":"prisma migrate命令简明教程","content":"以上就是命令的使用方法。\r"},"learn-prisma-migrate_122":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_123":{"title":"prisma migrate命令简明教程","content":"专栏资源\r"},"learn-prisma-migrate_124":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_125":{"title":"prisma migrate命令简明教程","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"learn-prisma-migrate_126":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_127":{"title":"prisma migrate命令简明教程","content":"专栏地址：👉\r"},"learn-prisma-migrate_128":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_129":{"title":"prisma migrate命令简明教程","content":"专栏演示站：👉\r"},"learn-prisma-migrate_130":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_131":{"title":"prisma migrate命令简明教程","content":"专栏源码仓库：👉\r"},"learn-prisma-migrate_132":{"title":"prisma migrate命令简明教程","content":"\r"},"learn-prisma-migrate_133":{"title":"prisma migrate命令简明教程","content":"交个朋友：👉"},"reflow-repaint-compositing":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"性能优化——把重排、重绘、合成掰开了、揉碎了学","display":"\r"},"reflow-repaint-compositing_0":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_1":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_2":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_3":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"在前端开发中，有重排（reflow）、重绘（repaint）和合成（compositing）这三个在代码中无处不在，却鲜有人提起的概念，其实这是一名前端进阶道路上绕不开的一道题。\r"},"reflow-repaint-compositing_4":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_5":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"这三个概念，仿佛是渲染引擎的交织舞台，影响着页面的构建、外观和性能。它们如同隐藏在幕布背后的舞者，相互合作，决定了用户的视觉和交互体验。在掌握了它们的本质后，我们将能够优化页面、提升性能，创造出更为流畅和令人惊艳的用户界面。\r"},"reflow-repaint-compositing_6":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_7":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"在接下来的内容中，我们将深入探讨重排、重绘和合成的原理，领略它们在前端开发中的不可或缺性，以及一些优化技巧和最佳实践。\r"},"reflow-repaint-compositing_8":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_9":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_10":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_11":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"什么是重排、何时重排\r"},"reflow-repaint-compositing_12":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_13":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"是指当页面的时，浏览器需要。这个过程涉及到，因此是非常耗费性能的操作。一些可能引起重排的操作包括改变元素的尺寸、位置、内容等。频繁的重排会导致页面的卡顿和响应时间延长。\r"},"reflow-repaint-compositing_14":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_15":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"常见导致重排的操作和行为\r"},"reflow-repaint-compositing_16":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_17":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 添加/删除可见的DOM元素\r"},"reflow-repaint-compositing_18":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 修改元素位置属性,如left、top、right等\r"},"reflow-repaint-compositing_19":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 页面初始加载时，以及响应式布局变化时\r"},"reflow-repaint-compositing_20":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 改变页面布局，如宽高、内外边距、浮动等\r"},"reflow-repaint-compositing_21":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 改变字体\r"},"reflow-repaint-compositing_22":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 滚动页面\r"},"reflow-repaint-compositing_23":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_24":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"那么我们可以怎么确认是否触发重排呢？\r"},"reflow-repaint-compositing_25":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_26":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"先来一个demo\r"},"reflow-repaint-compositing_27":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_28":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"html\r"},"reflow-repaint-compositing_29":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"<!DOCTYPE html"},"reflow-repaint-compositing_30":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"<html lang=\"en\""},"reflow-repaint-compositing_31":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_32":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"<head"},"reflow-repaint-compositing_33":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <meta charset=\"UTF-8\""},"reflow-repaint-compositing_34":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\""},"reflow-repaint-compositing_35":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\""},"reflow-repaint-compositing_36":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <title>Document</title"},"reflow-repaint-compositing_37":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"</head"},"reflow-repaint-compositing_38":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_39":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"<body"},"reflow-repaint-compositing_40":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <div id=\"box\" style=\"width: 300px; height: 300px; background-color: #bbb\"></div"},"reflow-repaint-compositing_41":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  <input type=\"button\" id=\"btn\" value=\"点击按钮\""},"reflow-repaint-compositing_42":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"</body"},"reflow-repaint-compositing_43":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_44":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"<script"},"reflow-repaint-compositing_45":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  // 示例1:修改元素宽高\r"},"reflow-repaint-compositing_46":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  const div = document.getElementById('box');\r"},"reflow-repaint-compositing_47":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_48":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  function resize() {\r"},"reflow-repaint-compositing_49":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    div.style.width = '50%';\r"},"reflow-repaint-compositing_50":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    div.style.height = '10vh';\r"},"reflow-repaint-compositing_51":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  }\r"},"reflow-repaint-compositing_52":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_53":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  // 点击按钮修改div大小,会触发重排\r"},"reflow-repaint-compositing_54":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"  document.getElementById('btn').addEventListener('click', resize);\r"},"reflow-repaint-compositing_55":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"</script"},"reflow-repaint-compositing_56":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_57":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"</html"},"reflow-repaint-compositing_58":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_59":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_60":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"在浏览器打开html文件，打开chrome devtools 的permance，开始录制，然后点击按钮 - 缩放窗口，再停止录制。会看到这样的界面，可以选择时间范围以更细致分析：\r"},"reflow-repaint-compositing_61":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_62":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_63":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_64":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"看到layout就说明浏览器进行重排了，变换时间范围，会发现layout时间不一样，这就是缩放过程中布局不断更新，所以不断触发重排。\r"},"reflow-repaint-compositing_65":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_66":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"优化技巧\r"},"reflow-repaint-compositing_67":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_68":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 避免频繁访问布局属性，尽量一次性获取或修改\r"},"reflow-repaint-compositing_69":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_70":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    jsx\r"},"reflow-repaint-compositing_71":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    // 如上面的demo可以修改resize为\r"},"reflow-repaint-compositing_72":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    function resize() {\r"},"reflow-repaint-compositing_73":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \tdiv.style.cssText = 'width: 50%; height: 10vh; background-color: #bbb';\r"},"reflow-repaint-compositing_74":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_75":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_76":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_77":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 使用 CSS3 动画替代 JavaScript 动画，因为前者通常能利用合成来避免重排\r"},"reflow-repaint-compositing_78":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 将频繁变动的元素设置为绝对定位或固定定位，脱离文档流，以减少对其他元素布局的影响\r"},"reflow-repaint-compositing_79":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 使用虚拟DOM,减少实际DOM操作\r"},"reflow-repaint-compositing_80":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_81":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_82":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_83":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"什么是重绘，何时重绘\r"},"reflow-repaint-compositing_84":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_85":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"是指当元素的时，浏览器会。与重排不同，重绘不会改变元素的布局，。尽管重绘的代价相对较小，但仍然需要消耗一定的性能。\r"},"reflow-repaint-compositing_86":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_87":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"常见导致重排的操作和行为\r"},"reflow-repaint-compositing_88":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_89":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 改变颜色、背景、阴影等视觉样式\r"},"reflow-repaint-compositing_90":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 设置文本内容或字体样式\r"},"reflow-repaint-compositing_91":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 单独使用transform、opacity来实现动画效果\r"},"reflow-repaint-compositing_92":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_93":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"你可以修改上面的demo来验证，permance里的paint就是重绘。\r"},"reflow-repaint-compositing_94":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_95":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_96":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_97":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"优化技巧\r"},"reflow-repaint-compositing_98":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_99":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 合并多次样式改变，避免重复重绘\r"},"reflow-repaint-compositing_100":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 使用CSS3的transform和opacity属性，它们能够在不引起重排的情况下改变元素外观\r"},"reflow-repaint-compositing_101":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 对动画使用will-change提高合成层创建效率\r"},"reflow-repaint-compositing_102":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_103":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_104":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_105":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"什么是合成，何时合成\r"},"reflow-repaint-compositing_106":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_107":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"是。现代浏览器利用硬件加速来进行合成，即来加速图层的合成过程。合成的优化可以显著提高页面的渲染性能，并且。\r"},"reflow-repaint-compositing_108":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_109":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_110":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_111":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 使用硬件加速，将部分图层委托给 GPU 处理，加快图层合成速度\r"},"reflow-repaint-compositing_112":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 利用图层的概念，将独立于布局的元素分层，使得只有特定图层的变化会触发合成，而不会引发重排和重绘\r"},"reflow-repaint-compositing_113":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 使用  属性明确声明哪些属性将会发生变化，帮助浏览器进行优化\r"},"reflow-repaint-compositing_114":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_115":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    css\r"},"reflow-repaint-compositing_116":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    .box {\r"},"reflow-repaint-compositing_117":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      will-change: transform;\r"},"reflow-repaint-compositing_118":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_119":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_120":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    .box:hover {\r"},"reflow-repaint-compositing_121":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      transform: scale(1.1); \r"},"reflow-repaint-compositing_122":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_123":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_124":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_125":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 对3D transform进行动画\r"},"reflow-repaint-compositing_126":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_127":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    css\r"},"reflow-repaint-compositing_128":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    .box {\r"},"reflow-repaint-compositing_129":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      animation: rotate 1s linear infinite;\r"},"reflow-repaint-compositing_130":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_131":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_132":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    @keyframes rotate {\r"},"reflow-repaint-compositing_133":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      100% { \r"},"reflow-repaint-compositing_134":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"        transform: rotateY(360deg); \r"},"reflow-repaint-compositing_135":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      }\r"},"reflow-repaint-compositing_136":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_137":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_138":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_139":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 对元素设置opacity小于1\r"},"reflow-repaint-compositing_140":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_141":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    css\r"},"reflow-repaint-compositing_142":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    .box {\r"},"reflow-repaint-compositing_143":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"      opacity: 0.5;\r"},"reflow-repaint-compositing_144":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    }\r"},"reflow-repaint-compositing_145":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_146":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"    \r"},"reflow-repaint-compositing_147":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- 对元素设置video、canvas、WebGL等标签\r"},"reflow-repaint-compositing_148":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_149":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"总结来说，能用CSS的地方就别用JS，这是用合成层优化重排、重绘的根本。\r"},"reflow-repaint-compositing_150":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_151":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"总结\r"},"reflow-repaint-compositing_152":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_153":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"在前端开发的世界中，理解重排、重绘和合成的概念是我们优化性能的重要一环。这些平时工作中极少提起的名词，实际上是良好的用户体验的关键所在。\r"},"reflow-repaint-compositing_154":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_155":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"前端er应该不再把性能优化视为一项任务，而要看作是一种创造力的表达。就像艺术家将每一笔划痕都视为构建完美画作的一部分，我们也能通过优化网页的每一帧，创造出更极致的前端体验。\r"},"reflow-repaint-compositing_156":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_157":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_158":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"\r"},"reflow-repaint-compositing_159":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- \r"},"reflow-repaint-compositing_160":{"title":"性能优化——把重排、重绘、合成掰开了、揉碎了学","content":"- "},"integrate-contentlayer":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"让contentlayer帮你把md文件变成静态页面吧","display":"\r"},"integrate-contentlayer_0":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_1":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_2":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_3":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":" 是一个功能强大的静态网站生成器，专为构建和管理静态页面、网站和博客而设计。它提供了一种简单而灵活的方式来创建和组织内容，可以将文件转换为静态页面。\r"},"integrate-contentlayer_4":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_5":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_6":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_7":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"-  Contentlayer 有一个配置文件，你可以定义不同类型的内容，如文章、页面、作者等，并为每个类型定义字段和关联关系。\r"},"integrate-contentlayer_8":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"-  Contentlayer 使用文件作为内容源，它可以把你写的文件解析为，并生成静态页面或嵌入到其他静态页面中。\r"},"integrate-contentlayer_9":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"-  如上所述，你也可以利用支持轻松生成和更新你的静态网站。\r"},"integrate-contentlayer_10":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"-  Contentlayer 允许你自定义组件来替换或扩展默认的Markdown渲染器，以实现更多你想要的样式。\r"},"integrate-contentlayer_11":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_12":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"使用步骤\r"},"integrate-contentlayer_13":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_14":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"Contentlayer 使用方法乍一看容易一头雾水，用完之后又容易忘记一些细节，所以需要记录下使用步骤。\r"},"integrate-contentlayer_15":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_16":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"以下示例基于版本的实现。\r"},"integrate-contentlayer_17":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_18":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"1. 安装依赖\r"},"integrate-contentlayer_19":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_20":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"bash\r"},"integrate-contentlayer_21":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"pnpm i @types/mdx concurrently contentlayer next-contentlayer -S \r"},"integrate-contentlayer_22":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_23":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_24":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"再安装几个markdown插件，这些插件可以增强markdown渲染样式，并非每个都需要，挑自己需要的安装，也可以全部安装慢慢享用\r"},"integrate-contentlayer_25":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_26":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"bash\r"},"integrate-contentlayer_27":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"pnpm i remark-gfm -S\r"},"integrate-contentlayer_28":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_29":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_30":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"如果你想问这些和插件都是什么作用，请猛击👉\r"},"integrate-contentlayer_31":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_32":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"1. 创建Contentlayer配置文件，定义内容模型和数据源\r"},"integrate-contentlayer_33":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_34":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    在你的Next.js项目根目录下创建一个名为的文件，并开始定义内容模型和配置选项。在配置文件中，你可以定义不同类型的内容，如文章、页面等，并为每个类型定义字段和关联关系。\r"},"integrate-contentlayer_35":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_36":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    上代码和注释：\r"},"integrate-contentlayer_37":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_38":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    jsx\r"},"integrate-contentlayer_39":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r"},"integrate-contentlayer_40":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import remarkGfm from 'remark-gfm'\r"},"integrate-contentlayer_41":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_42":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //\r"},"integrate-contentlayer_43":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    const computedFields = {\r"},"integrate-contentlayer_44":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      slug: {\r"},"integrate-contentlayer_45":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        type: \"string\",\r"},"integrate-contentlayer_46":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        resolve: (doc) =\r"},"integrate-contentlayer_47":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      },\r"},"integrate-contentlayer_48":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      slugAsParams: {\r"},"integrate-contentlayer_49":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        type: \"string\",\r"},"integrate-contentlayer_50":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        resolve: (doc) =\r"},"integrate-contentlayer_51":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      },\r"},"integrate-contentlayer_52":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_53":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_54":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // defineDocumentType 定义文档类型。可以这个参考格式定义多种文档。\r"},"integrate-contentlayer_55":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export const Post = defineDocumentType(() =\r"},"integrate-contentlayer_56":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      name: \"Post\",\r"},"integrate-contentlayer_57":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      filePathPattern: , // 指定匹配的文件路径模式\r"},"integrate-contentlayer_58":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      contentType: \"mdx\", // 指定了文档类型为 mdx\r"},"integrate-contentlayer_59":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      fields: { // 定义文档的字段结构，因为我接下来的示例中只用到title和description字段，所以其他字段被我注释掉了。如果此处配置的字段和实际mdx文件中用到的不一样，编译会报错\r"},"integrate-contentlayer_60":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        title: {\r"},"integrate-contentlayer_61":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          type: \"string\",\r"},"integrate-contentlayer_62":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          required: true,\r"},"integrate-contentlayer_63":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        },\r"},"integrate-contentlayer_64":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        description: {\r"},"integrate-contentlayer_65":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          type: \"string\",\r"},"integrate-contentlayer_66":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        },\r"},"integrate-contentlayer_67":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // date: {\r"},"integrate-contentlayer_68":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   type: \"date\",\r"},"integrate-contentlayer_69":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   required: true,\r"},"integrate-contentlayer_70":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // },\r"},"integrate-contentlayer_71":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // published: {\r"},"integrate-contentlayer_72":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   type: \"boolean\",\r"},"integrate-contentlayer_73":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   default: true,\r"},"integrate-contentlayer_74":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // },\r"},"integrate-contentlayer_75":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // image: {\r"},"integrate-contentlayer_76":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   type: \"string\",\r"},"integrate-contentlayer_77":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   required: true,\r"},"integrate-contentlayer_78":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // },\r"},"integrate-contentlayer_79":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // authors: {\r"},"integrate-contentlayer_80":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   // Reference types are not embedded.\r"},"integrate-contentlayer_81":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   // Until this is fixed, we can use a simple list.\r"},"integrate-contentlayer_82":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   // type: \"reference\",\r"},"integrate-contentlayer_83":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   // of: Author,\r"},"integrate-contentlayer_84":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   type: \"list\",\r"},"integrate-contentlayer_85":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   of: { type: \"string\" },\r"},"integrate-contentlayer_86":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        //   required: true,\r"},"integrate-contentlayer_87":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // },\r"},"integrate-contentlayer_88":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      },\r"},"integrate-contentlayer_89":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      computedFields,\r"},"integrate-contentlayer_90":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }))\r"},"integrate-contentlayer_91":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_92":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // makeSource 创建数据源\r"},"integrate-contentlayer_93":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export default makeSource({\r"},"integrate-contentlayer_94":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      contentDirPath: \"./content\", // 指定内容文件的目录路径\r"},"integrate-contentlayer_95":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      documentTypes: [Post], // 指定使用的文档类型，支持多个\r"},"integrate-contentlayer_96":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      mdx: { // 配置MDX解析器的插件\r"},"integrate-contentlayer_97":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        remarkPlugins: [remarkGfm],\r"},"integrate-contentlayer_98":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      },\r"},"integrate-contentlayer_99":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    })\r"},"integrate-contentlayer_100":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_101":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_102":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"2. 添加styles/mdx.css\r"},"integrate-contentlayer_103":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_104":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    这不是必须的，作用是定义样式规则，用于美化渲染后的代码块\r"},"integrate-contentlayer_105":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_106":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    css\r"},"integrate-contentlayer_107":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] code {\r"},"integrate-contentlayer_108":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply grid min-w-full break-words rounded-none border-0 bg-transparent p-0 text-sm text-black;\r"},"integrate-contentlayer_109":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      counter-reset: line;\r"},"integrate-contentlayer_110":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      box-decoration-break: clone;\r"},"integrate-contentlayer_111":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_112":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] .line {\r"},"integrate-contentlayer_113":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply px-4 py-1;\r"},"integrate-contentlayer_114":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_115":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] [data-line-numbers] \r"},"integrate-contentlayer_116":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      counter-increment: line;\r"},"integrate-contentlayer_117":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      content: counter(line);\r"},"integrate-contentlayer_118":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      display: inline-block;\r"},"integrate-contentlayer_119":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      width: 1rem;\r"},"integrate-contentlayer_120":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      margin-right: 1rem;\r"},"integrate-contentlayer_121":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      text-align: right;\r"},"integrate-contentlayer_122":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      color: gray;\r"},"integrate-contentlayer_123":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_124":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] .line--highlighted {\r"},"integrate-contentlayer_125":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply bg-slate-300 bg-opacity-10;\r"},"integrate-contentlayer_126":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_127":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] .line-highlighted span {\r"},"integrate-contentlayer_128":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply relative;\r"},"integrate-contentlayer_129":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_130":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-fragment] .word--highlighted {\r"},"integrate-contentlayer_131":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply rounded-md bg-slate-300 bg-opacity-10 p-1;\r"},"integrate-contentlayer_132":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_133":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-title] {\r"},"integrate-contentlayer_134":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply mt-4 py-2 px-4 text-sm font-medium;\r"},"integrate-contentlayer_135":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_136":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    [data-rehype-pretty-code-title] + pre {\r"},"integrate-contentlayer_137":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      @apply mt-0;\r"},"integrate-contentlayer_138":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_139":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_140":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_141":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"3. 编辑\r"},"integrate-contentlayer_142":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_143":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"     字段用于配置模块解析的路径映射\r"},"integrate-contentlayer_144":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_145":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"     字段用于指定要包含在编译过程中的文件或目录\r"},"integrate-contentlayer_146":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_147":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    在这两个字段里添加的配置\r"},"integrate-contentlayer_148":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_149":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    json\r"},"integrate-contentlayer_150":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    {\r"},"integrate-contentlayer_151":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    ……\r"},"integrate-contentlayer_152":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \"baseUrl\": \".\", // 添加本行\r"},"integrate-contentlayer_153":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \"paths\": {\r"},"integrate-contentlayer_154":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \t……\r"},"integrate-contentlayer_155":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      \"contentlayer/generated\": [\"./.contentlayer/generated\"] // 添加本行，这是后面markdown文件编译后存放的目录\r"},"integrate-contentlayer_156":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    },\r"},"integrate-contentlayer_157":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    ……\r"},"integrate-contentlayer_158":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \"include\": [\r"},"integrate-contentlayer_159":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ……\r"},"integrate-contentlayer_160":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      \".contentlayer/generated\" // 添加本行\r"},"integrate-contentlayer_161":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    ],\r"},"integrate-contentlayer_162":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_163":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_164":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_165":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"4. 用更新next config配置\r"},"integrate-contentlayer_166":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_167":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    先把改为以支持\r"},"integrate-contentlayer_168":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_169":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    jsx\r"},"integrate-contentlayer_170":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { withContentlayer } from \"next-contentlayer\"\r"},"integrate-contentlayer_171":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_172":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //\r"},"integrate-contentlayer_173":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    const nextConfig = {\r"},"integrate-contentlayer_174":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \t……\r"},"integrate-contentlayer_175":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_176":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_177":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export default withContentlayer(nextConfig)\r"},"integrate-contentlayer_178":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_179":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_180":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"5. 配置基本完成了，现在开始写md渲染组件\r"},"integrate-contentlayer_181":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_182":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    创建文件夹，在里面分别创建  三个文件。最后页面好不好看全靠这三个文件了\r"},"integrate-contentlayer_183":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_184":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    tsx\r"},"integrate-contentlayer_185":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // callout.tsx\r"},"integrate-contentlayer_186":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { cn } from \"@/lib/utils\"\r"},"integrate-contentlayer_187":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_188":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    interface CalloutProps {\r"},"integrate-contentlayer_189":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      icon?: string\r"},"integrate-contentlayer_190":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      children?: React.ReactNode\r"},"integrate-contentlayer_191":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      type?: \"default\" | \"warning\" | \"danger\"\r"},"integrate-contentlayer_192":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_193":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_194":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export function Callout({\r"},"integrate-contentlayer_195":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      children,\r"},"integrate-contentlayer_196":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      icon,\r"},"integrate-contentlayer_197":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      type = \"default\",\r"},"integrate-contentlayer_198":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ...props\r"},"integrate-contentlayer_199":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }: CalloutProps) {\r"},"integrate-contentlayer_200":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return (\r"},"integrate-contentlayer_201":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <div\r"},"integrate-contentlayer_202":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\"my-6 flex items-start rounded-md border border-l-4 p-4\", {\r"},"integrate-contentlayer_203":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"border-red-900 bg-red-50\": type === \"danger\",\r"},"integrate-contentlayer_204":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"border-yellow-900 bg-yellow-50\": type === \"warning\",\r"},"integrate-contentlayer_205":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          })}\r"},"integrate-contentlayer_206":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_207":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        "},"integrate-contentlayer_208":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {icon && <span className=\"mr-4 text-2xl\">{icon}</span>}\r"},"integrate-contentlayer_209":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <div>{children}</div"},"integrate-contentlayer_210":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        </div"},"integrate-contentlayer_211":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      )\r"},"integrate-contentlayer_212":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\t\r"},"integrate-contentlayer_213":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_214":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_215":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    tsx\r"},"integrate-contentlayer_216":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // mdx-card.tsx\r"},"integrate-contentlayer_217":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import Link from \"next/link\"\r"},"integrate-contentlayer_218":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_219":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { cn } from \"@/lib/utils\"\r"},"integrate-contentlayer_220":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_221":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    interface CardProps extends React.HTMLAttributes<HTMLDivElement\r"},"integrate-contentlayer_222":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      href?: string\r"},"integrate-contentlayer_223":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      disabled?: boolean\r"},"integrate-contentlayer_224":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_225":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_226":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export function MdxCard({\r"},"integrate-contentlayer_227":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      href,\r"},"integrate-contentlayer_228":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      className,\r"},"integrate-contentlayer_229":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      children,\r"},"integrate-contentlayer_230":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      disabled,\r"},"integrate-contentlayer_231":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ...props\r"},"integrate-contentlayer_232":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }: CardProps) {\r"},"integrate-contentlayer_233":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return (\r"},"integrate-contentlayer_234":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <div\r"},"integrate-contentlayer_235":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_236":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"group relative rounded-lg border p-6 shadow-md transition-shadow hover:shadow-lg\",\r"},"integrate-contentlayer_237":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            disabled && \"cursor-not-allowed opacity-60\",\r"},"integrate-contentlayer_238":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_239":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_240":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_241":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        "},"integrate-contentlayer_242":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <div className=\"flex flex-col justify-between space-y-4\""},"integrate-contentlayer_243":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            <div className=\"space-y-2 [&>h3]:!mt-0 [&>h4]:!mt-0 [&>p]:text-muted-foreground\""},"integrate-contentlayer_244":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"              {children}\r"},"integrate-contentlayer_245":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            </div"},"integrate-contentlayer_246":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          </div"},"integrate-contentlayer_247":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {href && (\r"},"integrate-contentlayer_248":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            <Link href={disabled ? \"#\" : href} className=\"absolute inset-0\""},"integrate-contentlayer_249":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"              <span className=\"sr-only\">View</span"},"integrate-contentlayer_250":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            </Link"},"integrate-contentlayer_251":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_252":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        </div"},"integrate-contentlayer_253":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      )\r"},"integrate-contentlayer_254":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_255":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_256":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_257":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    tsx\r"},"integrate-contentlayer_258":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // mdx-components.tsx\r"},"integrate-contentlayer_259":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import * as React from \"react\";\r"},"integrate-contentlayer_260":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import Image from \"next/image\";\r"},"integrate-contentlayer_261":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { useMDXComponent } from \"next-contentlayer/hooks\";\r"},"integrate-contentlayer_262":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import type { MDXComponents } from \"mdx/types\";\r"},"integrate-contentlayer_263":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_264":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { cn } from \"@/lib/utils\";\r"},"integrate-contentlayer_265":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { Callout } from \"@/components/mdx/callout\";\r"},"integrate-contentlayer_266":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { MdxCard } from \"@/components/mdx/mdx-card\";\r"},"integrate-contentlayer_267":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_268":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    const components: MDXComponents = {\r"},"integrate-contentlayer_269":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h1: ({ className, ...props }) =\r"},"integrate-contentlayer_270":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h1\r"},"integrate-contentlayer_271":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_272":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-2 scroll-m-20 text-4xl font-bold tracking-tight\",\r"},"integrate-contentlayer_273":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_274":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_275":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_276":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_277":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_278":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h2: ({ className, ...props }) =\r"},"integrate-contentlayer_279":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h2\r"},"integrate-contentlayer_280":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_281":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-10 scroll-m-20 border-b pb-1 text-3xl font-semibold tracking-tight first:mt-0\",\r"},"integrate-contentlayer_282":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_283":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_284":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_285":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_286":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_287":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h3: ({ className, ...props }) =\r"},"integrate-contentlayer_288":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h3\r"},"integrate-contentlayer_289":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_290":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-8 scroll-m-20 text-2xl font-semibold tracking-tight\",\r"},"integrate-contentlayer_291":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_292":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_293":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_294":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_295":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_296":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h4: ({ className, ...props }) =\r"},"integrate-contentlayer_297":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h4\r"},"integrate-contentlayer_298":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_299":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-8 scroll-m-20 text-xl font-semibold tracking-tight\",\r"},"integrate-contentlayer_300":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_301":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_302":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_303":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_304":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_305":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h5: ({ className, ...props }) =\r"},"integrate-contentlayer_306":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h5\r"},"integrate-contentlayer_307":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_308":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-8 scroll-m-20 text-lg font-semibold tracking-tight\",\r"},"integrate-contentlayer_309":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_310":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_311":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_312":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_313":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_314":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      h6: ({ className, ...props }) =\r"},"integrate-contentlayer_315":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <h6\r"},"integrate-contentlayer_316":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_317":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-8 scroll-m-20 text-base font-semibold tracking-tight\",\r"},"integrate-contentlayer_318":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_319":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_320":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_321":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_322":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_323":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      a: ({ className, ...props }) =\r"},"integrate-contentlayer_324":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <a\r"},"integrate-contentlayer_325":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\"font-medium underline underline-offset-4\", className)}\r"},"integrate-contentlayer_326":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_327":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_328":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_329":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      p: ({ className, ...props }) =\r"},"integrate-contentlayer_330":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <p\r"},"integrate-contentlayer_331":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\"leading-7 [&:not(:first-child)]:mt-6\", className)}\r"},"integrate-contentlayer_332":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_333":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_334":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_335":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ul: ({ className, ...props }) =\r"},"integrate-contentlayer_336":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <ul className={cn(\"my-6 ml-6 list-disc\", className)} {...props} /"},"integrate-contentlayer_337":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_338":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ol: ({ className, ...props }) =\r"},"integrate-contentlayer_339":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <ol className={cn(\"my-6 ml-6 list-decimal\", className)} {...props} /"},"integrate-contentlayer_340":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_341":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      li: ({ className, ...props }) =\r"},"integrate-contentlayer_342":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <li className={cn(\"mt-2\", className)} {...props} /"},"integrate-contentlayer_343":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_344":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      blockquote: ({ className, ...props }) =\r"},"integrate-contentlayer_345":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <blockquote\r"},"integrate-contentlayer_346":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_347":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mt-6 border-l-2 pl-6 italic [&>*]:text-muted-foreground\",\r"},"integrate-contentlayer_348":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_349":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_350":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_351":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_352":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_353":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      img: ({\r"},"integrate-contentlayer_354":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        className,\r"},"integrate-contentlayer_355":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        alt,\r"},"integrate-contentlayer_356":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        ...props\r"},"integrate-contentlayer_357":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      }: React.ImgHTMLAttributes<HTMLImageElement>) =\r"},"integrate-contentlayer_358":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        // eslint-disable-next-line @next/next/no-img-element\r"},"integrate-contentlayer_359":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <img className={cn(\"rounded-md border\", className)} alt={alt} {...props} /"},"integrate-contentlayer_360":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_361":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      hr: ({ ...props }) =\r"},"integrate-contentlayer_362":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      table: ({ className, ...props }: React.HTMLAttributes<HTMLTableElement>) =\r"},"integrate-contentlayer_363":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <div className=\"my-6 w-full overflow-y-auto\""},"integrate-contentlayer_364":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <table className={cn(\"w-full\", className)} {...props} /"},"integrate-contentlayer_365":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        </div"},"integrate-contentlayer_366":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_367":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      tr: ({ className, ...props }: React.HTMLAttributes<HTMLTableRowElement>) =\r"},"integrate-contentlayer_368":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <tr\r"},"integrate-contentlayer_369":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\"m-0 border-t p-0 even:bg-muted\", className)}\r"},"integrate-contentlayer_370":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_371":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_372":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_373":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      th: ({ className, ...props }) =\r"},"integrate-contentlayer_374":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <th\r"},"integrate-contentlayer_375":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_376":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right\",\r"},"integrate-contentlayer_377":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_378":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_379":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_380":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_381":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_382":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      td: ({ className, ...props }) =\r"},"integrate-contentlayer_383":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <td\r"},"integrate-contentlayer_384":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_385":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right\",\r"},"integrate-contentlayer_386":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_387":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_388":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_389":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_390":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_391":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      pre: ({ className, ...props }) =\r"},"integrate-contentlayer_392":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <pre\r"},"integrate-contentlayer_393":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_394":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"mb-4 mt-6 overflow-x-auto rounded-lg border bg-black py-4\",\r"},"integrate-contentlayer_395":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_396":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_397":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_398":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_399":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_400":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      code: ({ className, ...props }) =\r"},"integrate-contentlayer_401":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <code\r"},"integrate-contentlayer_402":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          className={cn(\r"},"integrate-contentlayer_403":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            \"relative rounded border px-[0.3rem] py-[0.2rem] font-mono text-sm\",\r"},"integrate-contentlayer_404":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            className\r"},"integrate-contentlayer_405":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          )}\r"},"integrate-contentlayer_406":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          {...props}\r"},"integrate-contentlayer_407":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        /"},"integrate-contentlayer_408":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      ),\r"},"integrate-contentlayer_409":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      Image,\r"},"integrate-contentlayer_410":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      Callout,\r"},"integrate-contentlayer_411":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      Card: MdxCard,\r"},"integrate-contentlayer_412":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    };\r"},"integrate-contentlayer_413":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_414":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    interface MdxProps {\r"},"integrate-contentlayer_415":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      code: string;\r"},"integrate-contentlayer_416":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_417":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_418":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export function Mdx({ code }: MdxProps) {\r"},"integrate-contentlayer_419":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      const Component = useMDXComponent(code);\r"},"integrate-contentlayer_420":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_421":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return (\r"},"integrate-contentlayer_422":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <div className=\"mdx\""},"integrate-contentlayer_423":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <Component components={components} /"},"integrate-contentlayer_424":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        </div"},"integrate-contentlayer_425":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      );\r"},"integrate-contentlayer_426":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_427":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_428":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_429":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"6. 开始写文件\r"},"integrate-contentlayer_430":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_431":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    根据配置文件的配置，现在在根目录创建一个文件夹，在里面创建一个文件夹，在里创建两个文件，分别叫和,\r"},"integrate-contentlayer_432":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_433":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    markdown\r"},"integrate-contentlayer_434":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_435":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    title: Terms\r"},"integrate-contentlayer_436":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    description: Read our terms\r"},"integrate-contentlayer_437":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_438":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_439":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    Term 1.\r"},"integrate-contentlayer_440":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_441":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    Title 1\r"},"integrate-contentlayer_442":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_443":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    content content content\r"},"integrate-contentlayer_444":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_445":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_446":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    markdown\r"},"integrate-contentlayer_447":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_448":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    title: Privacy\r"},"integrate-contentlayer_449":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    description: Read our Privacy\r"},"integrate-contentlayer_450":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_451":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_452":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    Privacy 1.\r"},"integrate-contentlayer_453":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_454":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    Title 1\r"},"integrate-contentlayer_455":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_456":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    content content content\r"},"integrate-contentlayer_457":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_458":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_459":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"7. 在文件夹内创建路由文件\r"},"integrate-contentlayer_460":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_461":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    从开始，创建出这样的路径：\r"},"integrate-contentlayer_462":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_463":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    如果你想给文件页面设置布局，在文件夹下添加一个写一下布局，这里仅提供文件的代码\r"},"integrate-contentlayer_464":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_465":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    tsx\r"},"integrate-contentlayer_466":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // page.tsx\r"},"integrate-contentlayer_467":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { notFound } from \"next/navigation\";\r"},"integrate-contentlayer_468":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { allPosts } from \"contentlayer/generated\";\r"},"integrate-contentlayer_469":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_470":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { Mdx } from \"@/components/mdx/mdx-components\";\r"},"integrate-contentlayer_471":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_472":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import \"@/styles/mdx.css\";\r"},"integrate-contentlayer_473":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { Metadata } from \"next\";\r"},"integrate-contentlayer_474":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_475":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { siteConfig } from \"@/config/site\";\r"},"integrate-contentlayer_476":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    import { absoluteUrl } from \"@/lib/utils\";\r"},"integrate-contentlayer_477":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_478":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    interface PageProps {\r"},"integrate-contentlayer_479":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      params: {\r"},"integrate-contentlayer_480":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        slug: string[];\r"},"integrate-contentlayer_481":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      };\r"},"integrate-contentlayer_482":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_483":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_484":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    async function getPageFromParams(params: { slug: string[] }) {\r"},"integrate-contentlayer_485":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      const slug = params?.slug?.join(\"/\");\r"},"integrate-contentlayer_486":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      const page = allPosts.find((page) =\r"},"integrate-contentlayer_487":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_488":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      if (!page) {\r"},"integrate-contentlayer_489":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        null;\r"},"integrate-contentlayer_490":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      }\r"},"integrate-contentlayer_491":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_492":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return page;\r"},"integrate-contentlayer_493":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_494":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_495":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // 下面OG的代码如果适用你的项目，你可以取消注释\r"},"integrate-contentlayer_496":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // export async function generateMetadata({\r"},"integrate-contentlayer_497":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   params,\r"},"integrate-contentlayer_498":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // }: PageProps): Promise<Metadata\r"},"integrate-contentlayer_499":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   const page = await getPageFromParams(params);\r"},"integrate-contentlayer_500":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_501":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   if (!page) {\r"},"integrate-contentlayer_502":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     return {};\r"},"integrate-contentlayer_503":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   }\r"},"integrate-contentlayer_504":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_505":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   const url = process.env.NEXTAPP_URL;\r"},"integrate-contentlayer_506":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_507":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   const ogUrl = new URL();\r"},"integrate-contentlayer_508":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   ogUrl.searchParams.set(\"heading\", page.title);\r"},"integrate-contentlayer_509":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   ogUrl.searchParams.set(\"type\", siteConfig.name);\r"},"integrate-contentlayer_510":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   ogUrl.searchParams.set(\"mode\", \"light\");\r"},"integrate-contentlayer_511":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_512":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   return {\r"},"integrate-contentlayer_513":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     title: page.title,\r"},"integrate-contentlayer_514":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     description: page.description,\r"},"integrate-contentlayer_515":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     openGraph: {\r"},"integrate-contentlayer_516":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       title: page.title,\r"},"integrate-contentlayer_517":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       description: page.description,\r"},"integrate-contentlayer_518":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       type: \"article\",\r"},"integrate-contentlayer_519":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       url: absoluteUrl(page.slug),\r"},"integrate-contentlayer_520":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       images: [\r"},"integrate-contentlayer_521":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //         {\r"},"integrate-contentlayer_522":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //           url: ogUrl.toString(),\r"},"integrate-contentlayer_523":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //           width: 1200,\r"},"integrate-contentlayer_524":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //           height: 630,\r"},"integrate-contentlayer_525":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //           alt: page.title,\r"},"integrate-contentlayer_526":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //         },\r"},"integrate-contentlayer_527":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       ],\r"},"integrate-contentlayer_528":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     },\r"},"integrate-contentlayer_529":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     twitter: {\r"},"integrate-contentlayer_530":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       card: \"summaryimage\",\r"},"integrate-contentlayer_531":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       title: page.title,\r"},"integrate-contentlayer_532":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       description: page.description,\r"},"integrate-contentlayer_533":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //       images: [ogUrl.toString()],\r"},"integrate-contentlayer_534":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //     },\r"},"integrate-contentlayer_535":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    //   };\r"},"integrate-contentlayer_536":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // }\r"},"integrate-contentlayer_537":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_538":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export async function generateStaticParams(): Promise<PageProps[\"params\"][]\r"},"integrate-contentlayer_539":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return allPosts.map((page) =\r"},"integrate-contentlayer_540":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        slug: page.slugAsParams?.split(\"/\"),\r"},"integrate-contentlayer_541":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      }));\r"},"integrate-contentlayer_542":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_543":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_544":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    export default async function PagePage({ params }: PageProps) {\r"},"integrate-contentlayer_545":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      const page = await getPageFromParams(params);\r"},"integrate-contentlayer_546":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_547":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      if (!page) {\r"},"integrate-contentlayer_548":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        notFound();\r"},"integrate-contentlayer_549":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      }\r"},"integrate-contentlayer_550":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_551":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      return (\r"},"integrate-contentlayer_552":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        <article className=\"container max-w-3xl py-6 lg:py-12\""},"integrate-contentlayer_553":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <div className=\"space-y-4\""},"integrate-contentlayer_554":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            <h1 className=\"inline-block font-heading text-4xl lg:text-5xl\""},"integrate-contentlayer_555":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"              {page.title}\r"},"integrate-contentlayer_556":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            </h1"},"integrate-contentlayer_557":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            {page.description && (\r"},"integrate-contentlayer_558":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"              <p className=\"text-xl text-muted-foreground\">{page.description}</p"},"integrate-contentlayer_559":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"            )}\r"},"integrate-contentlayer_560":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          </div"},"integrate-contentlayer_561":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <hr className=\"my-4\" /"},"integrate-contentlayer_562":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"          <Mdx code={page.body.code} /"},"integrate-contentlayer_563":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        </article"},"integrate-contentlayer_564":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      );\r"},"integrate-contentlayer_565":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    }\r"},"integrate-contentlayer_566":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_567":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_568":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"8. 运行代码\r"},"integrate-contentlayer_569":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_570":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    此时执行会发现报错了，是的，还得修改启动命令和打包命令\r"},"integrate-contentlayer_571":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_572":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    json\r"},"integrate-contentlayer_573":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // package.json\r"},"integrate-contentlayer_574":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \"scripts\": {\r"},"integrate-contentlayer_575":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        \"dev\": \"concurrently \\\"contentlayer dev\\\" \\\"next dev\\\"\",\r"},"integrate-contentlayer_576":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        \"build\": \"contentlayer build && next build\",\r"},"integrate-contentlayer_577":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"        \"start\": \"next start\"\r"},"integrate-contentlayer_578":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"      },\r"},"integrate-contentlayer_579":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_580":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_581":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    现在执行启动命令，根目录会出现文件夹，如果里面的文件夹结构是图片这样的：\r"},"integrate-contentlayer_582":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_583":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_584":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_585":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    那就说明以上配置全部正确。\r"},"integrate-contentlayer_586":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_587":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    如果没有出现文件夹，说明包版本不匹配，可以到这个issuss来看大家的经验：，版本下，安装和是可以使用的。\r"},"integrate-contentlayer_588":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_589":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"9. 配置一下忽视文件夹\r"},"integrate-contentlayer_590":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_591":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    修改和\r"},"integrate-contentlayer_592":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_593":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    bash\r"},"integrate-contentlayer_594":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // .prettierignore\r"},"integrate-contentlayer_595":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_596":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    ……\r"},"integrate-contentlayer_597":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    .contentlayer\r"},"integrate-contentlayer_598":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_599":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_600":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    bash\r"},"integrate-contentlayer_601":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    // .gitignore\r"},"integrate-contentlayer_602":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_603":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    ……\r"},"integrate-contentlayer_604":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    .contentlayer\r"},"integrate-contentlayer_605":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_606":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"    \r"},"integrate-contentlayer_607":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_608":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"全部配置完成！如果你有新的页面想用mdx来写，只要在content里添加文件就可以。\r"},"integrate-contentlayer_609":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_610":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"配置过程有点烦，但是配置完成后是真的香。\r"},"integrate-contentlayer_611":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_612":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"和React-markdown有什么区别\r"},"integrate-contentlayer_613":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_614":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"有了以上的经验，再看和的区别，可以看出来是页面级别的工具，而是组件级别的工具。\r"},"integrate-contentlayer_615":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_616":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"当你的项目有多个md文件时，用显然性价比更高，因为使用除了要写md文件，还要写一个页面组件包裹起来。\r"},"integrate-contentlayer_617":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_618":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"而当你需要在组件级别使用md格式，那么要果断使用。\r"},"integrate-contentlayer_619":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_620":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"源码与演示\r"},"integrate-contentlayer_621":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_622":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"源码：👉\r"},"integrate-contentlayer_623":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_624":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"在线演示：👉\r"},"integrate-contentlayer_625":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_626":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"专栏资源\r"},"integrate-contentlayer_627":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_628":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"专栏介绍：以实战的角度进行Next.js生态圈的技术栈分享，内容包括但不限于：Next.js理论知识、功能模块设计思路、实战中使用到的技术栈。这是一个长期更新的专栏，我会持续把自己的思考和经验提炼分享出来，欢迎关注我的专栏👇\r"},"integrate-contentlayer_629":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_630":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"专栏地址：👉\r"},"integrate-contentlayer_631":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_632":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"专栏演示站：👉\r"},"integrate-contentlayer_633":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_634":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"专栏源码仓库：👉\r"},"integrate-contentlayer_635":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"\r"},"integrate-contentlayer_636":{"title":"让contentlayer帮你把md文件变成静态页面吧","content":"交个朋友：👉"},"markdown-lib":{"title":"记录一些好用的Markdown优化插件","content":"记录一些好用的Markdown优化插件","display":"\r"},"markdown-lib_0":{"title":"记录一些好用的Markdown优化插件","content":"\r"},"markdown-lib_1":{"title":"记录一些好用的Markdown优化插件","content":"一时一时爽，一直一直爽，爽就爽在要记太特么多的rehype和remark插件了。为了以后好查找，特此开篇记录好用的插件包。\r"},"markdown-lib_2":{"title":"记录一些好用的Markdown优化插件","content":"\r"},"markdown-lib_3":{"title":"记录一些好用的Markdown优化插件","content":"- ：用于美化代码块的样式和显示。它可以对代码进行语法高亮、添加行号等操作，以提升代码的可读性。\r"},"markdown-lib_4":{"title":"记录一些好用的Markdown优化插件","content":"- ：用于保留 HTML 标签的原始内容，而不进行任何转换。它可以用于处理包含自定义 HTML 标签或特殊需求的内容。\r"},"markdown-lib_5":{"title":"记录一些好用的Markdown优化插件","content":"- ：用于为标题生成唯一的 slug（URL-friendly string，常用于锚链接）。它可以将标题文本转换为小写、移除特殊字符等，以生成易于处理和识别的 slug。\r"},"markdown-lib_6":{"title":"记录一些好用的Markdown优化插件","content":"-  的 AST（Abstract Syntax Tree）转换回 HTML 字符串。它可以将经过处理的 AST 转换为有效的 HTML 代码。\r"},"markdown-lib_7":{"title":"记录一些好用的Markdown优化插件","content":"-  的功能，支持 GitHub Flavored Markdown (GFM) 的语法。它可以处理 GFM 的特殊语法，如任务列表、表格等。\r"},"markdown-lib_8":{"title":"记录一些好用的Markdown优化插件","content":"- ：用于在 Markdown 中支持数学公式的渲染。它可以解析 LaTeX 或 MathML 格式的数学公式，并将其转换为 HTML 或其他格式进行显示。\r"},"markdown-lib_9":{"title":"记录一些好用的Markdown优化插件","content":"-  的 AST 转换为  和  的插件对 Markdown 进行进一步处理。"},"integrate-google-ads":{"title":"把你的网站接入谷歌广告","content":"把你的网站接入谷歌广告","display":"\r"},"integrate-google-ads_0":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_1":{"title":"把你的网站接入谷歌广告","content":"每一个建设网站的人多多少少都会希望网站可以为自己带来收益，或许是为了💰，或许是为了成就感，今天我们就来研究一下网站接入谷歌广告的方式。\r"},"integrate-google-ads_2":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_3":{"title":"把你的网站接入谷歌广告","content":"步骤\r"},"integrate-google-ads_4":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_5":{"title":"把你的网站接入谷歌广告","content":"第一步：注册/登录谷歌ADsense：\r"},"integrate-google-ads_6":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_7":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_8":{"title":"把你的网站接入谷歌广告","content":"第二步：如果你还没有创建ADSense，会进入创建流程\r"},"integrate-google-ads_9":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_10":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_11":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_12":{"title":"把你的网站接入谷歌广告","content":"第三步，填写完信息就进入ADSense首页，点击“请输入信息”按钮，开始填写信息\r"},"integrate-google-ads_13":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_14":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_15":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_16":{"title":"把你的网站接入谷歌广告","content":"填写表单\r"},"integrate-google-ads_17":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_18":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_19":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_20":{"title":"把你的网站接入谷歌广告","content":"第四步：添加广告位\r"},"integrate-google-ads_21":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_22":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_23":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_24":{"title":"把你的网站接入谷歌广告","content":"点击“获取代码”\r"},"integrate-google-ads_25":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_26":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_27":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_28":{"title":"把你的网站接入谷歌广告","content":"复制广告代码放到你的网站代码里\r"},"integrate-google-ads_29":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_30":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_31":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_32":{"title":"把你的网站接入谷歌广告","content":"打开页面右边的“自动广告”，按自己的需求打勾，然后应用到网站\r"},"integrate-google-ads_33":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_34":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_35":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_36":{"title":"把你的网站接入谷歌广告","content":"第五步，关联网站\r"},"integrate-google-ads_37":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_38":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_39":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_40":{"title":"把你的网站接入谷歌广告","content":"谷歌提供了两种关联方式，任选一种（有人说两种都要有才可以）。选择AdSense代码段，就是上一步添加代码的步骤，选择Ads.txt，要把文件放到public文件夹下，让谷歌可以通过如的地址拉取。\r"},"integrate-google-ads_41":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_42":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_43":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_44":{"title":"把你的网站接入谷歌广告","content":"下一页，提交。\r"},"integrate-google-ads_45":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_46":{"title":"把你的网站接入谷歌广告","content":"第六步：点击网站左侧“网站”，查看广告状态\r"},"integrate-google-ads_47":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_48":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_49":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_50":{"title":"把你的网站接入谷歌广告","content":"审批状态有这几种：\r"},"integrate-google-ads_51":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_52":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_53":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_54":{"title":"把你的网站接入谷歌广告","content":"现在等待审核通过就可以了。\r"},"integrate-google-ads_55":{"title":"把你的网站接入谷歌广告","content":"\r"},"integrate-google-ads_56":{"title":"把你的网站接入谷歌广告","content":"如果审核没通过，大概率是你的网站原创内容太少。我在博客有30多篇文章的时候申请的，第二天就通过。"},"wechat-dev-config":{"title":"【胎教级】微信公众号开发配置","content":"【胎教级】微信公众号开发配置","display":"\r"},"wechat-dev-config_0":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_1":{"title":"【胎教级】微信公众号开发配置","content":"这篇文章可以帮你打通微信公众号开发任督二脉。\r"},"wechat-dev-config_2":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_3":{"title":"【胎教级】微信公众号开发配置","content":"一、JS域名验证\r"},"wechat-dev-config_4":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_5":{"title":"【胎教级】微信公众号开发配置","content":"入口在公众号后台：设置与开发 - 公众号设置 - 功能设置 - JS接口安全域名\r"},"wechat-dev-config_6":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_7":{"title":"【胎教级】微信公众号开发配置","content":"界面会提示需把一个校验文件上传到域名目录下\r"},"wechat-dev-config_8":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_9":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_10":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_11":{"title":"【胎教级】微信公众号开发配置","content":"实际场景中，我们可能有很多个公众号和很多个服务，所以我们可以把文件统一放到一个目录下，如：/data/wechat_verify\r"},"wechat-dev-config_12":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_13":{"title":"【胎教级】微信公众号开发配置","content":"我使用了宝塔，可视化界面操作，上传完成\r"},"wechat-dev-config_14":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_15":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_16":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_17":{"title":"【胎教级】微信公众号开发配置","content":"然后修改nginx配置，比如我想要通过 https://helloai.wiki/MPxxxxxxx.txt 访问这个校验文件，我就需要在原有的配置下添加这个文件的路径配置\r"},"wechat-dev-config_18":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_19":{"title":"【胎教级】微信公众号开发配置","content":"jsx\r"},"wechat-dev-config_20":{"title":"【胎教级】微信公众号开发配置","content":"server {\r"},"wechat-dev-config_21":{"title":"【胎教级】微信公众号开发配置","content":"    listen 443 ssl http2;\r"},"wechat-dev-config_22":{"title":"【胎教级】微信公众号开发配置","content":"    server_name helloai.wiki;\r"},"wechat-dev-config_23":{"title":"【胎教级】微信公众号开发配置","content":"    ……\r"},"wechat-dev-config_24":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_25":{"title":"【胎教级】微信公众号开发配置","content":"    nginx是就近原则，匹配到即执行，所以这个配置要写在txt后缀配置前面才可以\r"},"wechat-dev-config_26":{"title":"【胎教级】微信公众号开发配置","content":"    location = /MPxxxxxxxxxxxxxx.txt {\r"},"wechat-dev-config_27":{"title":"【胎教级】微信公众号开发配置","content":"        root /data/wechat_verify;\r"},"wechat-dev-config_28":{"title":"【胎教级】微信公众号开发配置","content":"    }\r"},"wechat-dev-config_29":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_30":{"title":"【胎教级】微信公众号开发配置","content":"    如果你把校验文件放到下面这个配置的路径，那就不用加上面的配置了\r"},"wechat-dev-config_31":{"title":"【胎教级】微信公众号开发配置","content":"    至于我为什么不放在这里，因为我怕public被我更新了\r"},"wechat-dev-config_32":{"title":"【胎教级】微信公众号开发配置","content":"    location  \\\\.(txt|xml)$ {\r"},"wechat-dev-config_33":{"title":"【胎教级】微信公众号开发配置","content":"        root /data/xxxxx/public;\r"},"wechat-dev-config_34":{"title":"【胎教级】微信公众号开发配置","content":"    }\r"},"wechat-dev-config_35":{"title":"【胎教级】微信公众号开发配置","content":"    ……\r"},"wechat-dev-config_36":{"title":"【胎教级】微信公众号开发配置","content":"}\r"},"wechat-dev-config_37":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_38":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_39":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_40":{"title":"【胎教级】微信公众号开发配置","content":"修改完nginx配置，重启一下才会生效\r"},"wechat-dev-config_41":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_42":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_43":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_44":{"title":"【胎教级】微信公众号开发配置","content":"在公众号后台，把【JS接口安全域名】、【业务域名】和【网页授权域名】都配置上\r"},"wechat-dev-config_45":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_46":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_47":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_48":{"title":"【胎教级】微信公众号开发配置","content":"二、开发信息配置\r"},"wechat-dev-config_49":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_50":{"title":"【胎教级】微信公众号开发配置","content":"入口在公众号后台：设置与开发 - 基本配置 - 公众号开发信息\r"},"wechat-dev-config_51":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_52":{"title":"【胎教级】微信公众号开发配置","content":"复制appid、appsecret并妥善保存；设置IP白名单，就是我们要部署服务的那台服务器的IP\r"},"wechat-dev-config_53":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_54":{"title":"【胎教级】微信公众号开发配置","content":"三、服务器配置\r"},"wechat-dev-config_55":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_56":{"title":"【胎教级】微信公众号开发配置","content":"在实际业务开发中，我们可能需要接受微信的消息推送（如：用户关注、用户取消关注等），这就需要我们配置自己服务器、并且提供对应接口给微信。入口在公众号后台：设置与开发 - 基本配置 - 服务器配置。\r"},"wechat-dev-config_57":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_58":{"title":"【胎教级】微信公众号开发配置","content":"这一步一定要写好接口部署后再提交配置，否则微信调我们服务出现错误，就会当作校验错误了。\r"},"wechat-dev-config_59":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_60":{"title":"【胎教级】微信公众号开发配置","content":"为了以防万一，我们需要用测试账号在本地调试。测试账号入口：设置与开发 - 开发者工具 - 公众平台测试账号。\r"},"wechat-dev-config_61":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_62":{"title":"【胎教级】微信公众号开发配置","content":"根据微信开放文档：我们知道验证服务器需要先给微信提供一个 Get 接口，直接上代码\r"},"wechat-dev-config_63":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_64":{"title":"【胎教级】微信公众号开发配置","content":"第一步：写一个 Get 接口\r"},"wechat-dev-config_65":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_66":{"title":"【胎教级】微信公众号开发配置","content":"tsx\r"},"wechat-dev-config_67":{"title":"【胎教级】微信公众号开发配置","content":"// 这是midwayjs框架的代码\r"},"wechat-dev-config_68":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_69":{"title":"【胎教级】微信公众号开发配置","content":"@Get('/verify_server')\r"},"wechat-dev-config_70":{"title":"【胎教级】微信公众号开发配置","content":"  async verifyServer(@Query() query: any) {\r"},"wechat-dev-config_71":{"title":"【胎教级】微信公众号开发配置","content":"    // 微信调用时会传入以下几个参数\r"},"wechat-dev-config_72":{"title":"【胎教级】微信公众号开发配置","content":"    const signature = query.signature;\r"},"wechat-dev-config_73":{"title":"【胎教级】微信公众号开发配置","content":"    const timestamp = query.timestamp;\r"},"wechat-dev-config_74":{"title":"【胎教级】微信公众号开发配置","content":"    const nonce = query.nonce;\r"},"wechat-dev-config_75":{"title":"【胎教级】微信公众号开发配置","content":"    const echostr = query.echostr;\r"},"wechat-dev-config_76":{"title":"【胎教级】微信公众号开发配置","content":"    const apiToken = this.WXTOKEN; // 你将在测试账号页面填写的Token\r"},"wechat-dev-config_77":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_78":{"title":"【胎教级】微信公众号开发配置","content":"    // 解密信息\r"},"wechat-dev-config_79":{"title":"【胎教级】微信公众号开发配置","content":"    if (checkSignature(signature, timestamp, nonce, apiToken)) {\r"},"wechat-dev-config_80":{"title":"【胎教级】微信公众号开发配置","content":"      // 如果签名正确，原样返回echostr参数内容\r"},"wechat-dev-config_81":{"title":"【胎教级】微信公众号开发配置","content":"      return echostr;\r"},"wechat-dev-config_82":{"title":"【胎教级】微信公众号开发配置","content":"    } else {\r"},"wechat-dev-config_83":{"title":"【胎教级】微信公众号开发配置","content":"      // 如果签名错误，返回错误信息\r"},"wechat-dev-config_84":{"title":"【胎教级】微信公众号开发配置","content":"      throw new Error('');\r"},"wechat-dev-config_85":{"title":"【胎教级】微信公众号开发配置","content":"    }\r"},"wechat-dev-config_86":{"title":"【胎教级】微信公众号开发配置","content":"  }\r"},"wechat-dev-config_87":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_88":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_89":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_90":{"title":"【胎教级】微信公众号开发配置","content":"第二步：解密方法\r"},"wechat-dev-config_91":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_92":{"title":"【胎教级】微信公众号开发配置","content":"tsx\r"},"wechat-dev-config_93":{"title":"【胎教级】微信公众号开发配置","content":"const crypto = require('crypto');\r"},"wechat-dev-config_94":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_95":{"title":"【胎教级】微信公众号开发配置","content":"export function checkSignature(signature: string, timestamp, nonce, token) {\r"},"wechat-dev-config_96":{"title":"【胎教级】微信公众号开发配置","content":"  // 将token、timestamp、nonce三个参数按照字典序排序\r"},"wechat-dev-config_97":{"title":"【胎教级】微信公众号开发配置","content":"  const arr = [token, timestamp, nonce].sort();\r"},"wechat-dev-config_98":{"title":"【胎教级】微信公众号开发配置","content":"  // 将排序后的参数拼接起来\r"},"wechat-dev-config_99":{"title":"【胎教级】微信公众号开发配置","content":"  const str = arr.join('');\r"},"wechat-dev-config_100":{"title":"【胎教级】微信公众号开发配置","content":"  // 对拼接后的字符串进行sha1加密\r"},"wechat-dev-config_101":{"title":"【胎教级】微信公众号开发配置","content":"  const sha1 = crypto.createHash('sha1');\r"},"wechat-dev-config_102":{"title":"【胎教级】微信公众号开发配置","content":"  sha1.update(str);\r"},"wechat-dev-config_103":{"title":"【胎教级】微信公众号开发配置","content":"  const result = sha1.digest('hex');\r"},"wechat-dev-config_104":{"title":"【胎教级】微信公众号开发配置","content":"  return result === signature;\r"},"wechat-dev-config_105":{"title":"【胎教级】微信公众号开发配置","content":"}\r"},"wechat-dev-config_106":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_107":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_108":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_109":{"title":"【胎教级】微信公众号开发配置","content":"接口准备好了之后，就可以去填写配置了。但是，现在是在本地开发，我们得想办法让微信调用到本地的服务，这时候就需要内网穿透工具来帮助我们了。\r"},"wechat-dev-config_110":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_111":{"title":"【胎教级】微信公众号开发配置","content":"我使用的穿透工具是localtunnel，使用方法很简单：\r"},"wechat-dev-config_112":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_113":{"title":"【胎教级】微信公众号开发配置","content":"bash\r"},"wechat-dev-config_114":{"title":"【胎教级】微信公众号开发配置","content":"全局安装：\r"},"wechat-dev-config_115":{"title":"【胎教级】微信公众号开发配置","content":"npm install –g localtunnel\r"},"wechat-dev-config_116":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_117":{"title":"【胎教级】微信公众号开发配置","content":"启动服务，3000替换成你的服务的端口，\r"},"wechat-dev-config_118":{"title":"【胎教级】微信公众号开发配置","content":"lt --port 3000\r"},"wechat-dev-config_119":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_120":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_121":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_122":{"title":"【胎教级】微信公众号开发配置","content":"代理成功后就会看到代理的url，这就是我们要使用的服务器地址了\r"},"wechat-dev-config_123":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_124":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_125":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_126":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_127":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_128":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_129":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_130":{"title":"【胎教级】微信公众号开发配置","content":"有了接口和穿透，现在配置一下 URL 和 Token，就能成功了\r"},"wechat-dev-config_131":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_132":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_133":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_134":{"title":"【胎教级】微信公众号开发配置","content":"这样就说明我们本地服务和微信测试账号打通了，可以开始开发业务接口了。\r"},"wechat-dev-config_135":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_136":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_137":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_138":{"title":"【胎教级】微信公众号开发配置","content":"四、调试微信消息推送\r"},"wechat-dev-config_139":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_140":{"title":"【胎教级】微信公众号开发配置","content":"上一步我们写一个 Get 接口，后台也配置了一个 URL，但是根据文档，我们可以知道，微信消息推送也是往我们配置的 URL 发送，但是是 Post 方法，所以我们只需要提供一个同名的 Post 方法来接收就可以了。\r"},"wechat-dev-config_141":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_142":{"title":"【胎教级】微信公众号开发配置","content":"tsx\r"},"wechat-dev-config_143":{"title":"【胎教级】微信公众号开发配置","content":"// utils/xml2json.ts\r"},"wechat-dev-config_144":{"title":"【胎教级】微信公众号开发配置","content":"// 服务器和微信交互的信息要用xml格式，这可不是JSer的菜，所以我们先来写一下xml和json的转换方法\r"},"wechat-dev-config_145":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_146":{"title":"【胎教级】微信公众号开发配置","content":"import { parseString, Builder } from 'xml2js';\r"},"wechat-dev-config_147":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_148":{"title":"【胎教级】微信公众号开发配置","content":"export function xml2json(xml: string): any {\r"},"wechat-dev-config_149":{"title":"【胎教级】微信公众号开发配置","content":"  let result: any;\r"},"wechat-dev-config_150":{"title":"【胎教级】微信公众号开发配置","content":"  parseString(xml, { mergeAttrs: true }, (err, res) =\r"},"wechat-dev-config_151":{"title":"【胎教级】微信公众号开发配置","content":"    console.log(xml, res);\r"},"wechat-dev-config_152":{"title":"【胎教级】微信公众号开发配置","content":"    result = res.xml;\r"},"wechat-dev-config_153":{"title":"【胎教级】微信公众号开发配置","content":"  });\r"},"wechat-dev-config_154":{"title":"【胎教级】微信公众号开发配置","content":"  return result;\r"},"wechat-dev-config_155":{"title":"【胎教级】微信公众号开发配置","content":"}\r"},"wechat-dev-config_156":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_157":{"title":"【胎教级】微信公众号开发配置","content":"export function json2xml(json: any): any {\r"},"wechat-dev-config_158":{"title":"【胎教级】微信公众号开发配置","content":"  const builder = new Builder();\r"},"wechat-dev-config_159":{"title":"【胎教级】微信公众号开发配置","content":"  const xml = builder.buildObject({ xml: json });\r"},"wechat-dev-config_160":{"title":"【胎教级】微信公众号开发配置","content":"  return xml;\r"},"wechat-dev-config_161":{"title":"【胎教级】微信公众号开发配置","content":"}\r"},"wechat-dev-config_162":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_163":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_164":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_165":{"title":"【胎教级】微信公众号开发配置","content":"tsx\r"},"wechat-dev-config_166":{"title":"【胎教级】微信公众号开发配置","content":"@Post('/verify_server')\r"},"wechat-dev-config_167":{"title":"【胎教级】微信公众号开发配置","content":"  async wxMessage(@Body() body: any) {\r"},"wechat-dev-config_168":{"title":"【胎教级】微信公众号开发配置","content":"    try {\r"},"wechat-dev-config_169":{"title":"【胎教级】微信公众号开发配置","content":"      const json = await xml2json(body);\r"},"wechat-dev-config_170":{"title":"【胎教级】微信公众号开发配置","content":"      const gzhId = json.ToUserName[0];\r"},"wechat-dev-config_171":{"title":"【胎教级】微信公众号开发配置","content":"      const wxOpenId = json.FromUserName[0];\r"},"wechat-dev-config_172":{"title":"【胎教级】微信公众号开发配置","content":"      // const time = json.CreateTime[0]; // 10位时间戳\r"},"wechat-dev-config_173":{"title":"【胎教级】微信公众号开发配置","content":"      // const msgId = json.MsgId[0];\r"},"wechat-dev-config_174":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_175":{"title":"【胎教级】微信公众号开发配置","content":"      const msgType = json.MsgType[0];\r"},"wechat-dev-config_176":{"title":"【胎教级】微信公众号开发配置","content":"      let replyMessage = {};\r"},"wechat-dev-config_177":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_178":{"title":"【胎教级】微信公众号开发配置","content":"      console.log(json, gzhId, wxOpenId, msgType);\r"},"wechat-dev-config_179":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_180":{"title":"【胎教级】微信公众号开发配置","content":"      // 可以根据推送事件类型去做处理，下面代码只演示文字消息\r"},"wechat-dev-config_181":{"title":"【胎教级】微信公众号开发配置","content":"      if (msgType === 'text') {\r"},"wechat-dev-config_182":{"title":"【胎教级】微信公众号开发配置","content":"        replyMessage = {\r"},"wechat-dev-config_183":{"title":"【胎教级】微信公众号开发配置","content":"            FromUserName: gzhId,\r"},"wechat-dev-config_184":{"title":"【胎教级】微信公众号开发配置","content":"            ToUserName: wxOpenId,\r"},"wechat-dev-config_185":{"title":"【胎教级】微信公众号开发配置","content":"            MsgType: 'text',\r"},"wechat-dev-config_186":{"title":"【胎教级】微信公众号开发配置","content":"            Content: '你好，测试账号回复成功了',\r"},"wechat-dev-config_187":{"title":"【胎教级】微信公众号开发配置","content":"            CreateTime: new Date().valueOf(),\r"},"wechat-dev-config_188":{"title":"【胎教级】微信公众号开发配置","content":"        };\r"},"wechat-dev-config_189":{"title":"【胎教级】微信公众号开发配置","content":"      }\r"},"wechat-dev-config_190":{"title":"【胎教级】微信公众号开发配置","content":"      const xmlMessage = await json2xml(replyMessage);\r"},"wechat-dev-config_191":{"title":"【胎教级】微信公众号开发配置","content":"      return xmlMessage;\r"},"wechat-dev-config_192":{"title":"【胎教级】微信公众号开发配置","content":"    } catch (e) {\r"},"wechat-dev-config_193":{"title":"【胎教级】微信公众号开发配置","content":"      console.log(e);\r"},"wechat-dev-config_194":{"title":"【胎教级】微信公众号开发配置","content":"    }\r"},"wechat-dev-config_195":{"title":"【胎教级】微信公众号开发配置","content":"}\r"},"wechat-dev-config_196":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_197":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_198":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_199":{"title":"【胎教级】微信公众号开发配置","content":"拿起你的手机，关注配置页的测试账号\r"},"wechat-dev-config_200":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_201":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_202":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_203":{"title":"【胎教级】微信公众号开发配置","content":"然后给账号发一条消息，就可以收到代码里写的回复了\r"},"wechat-dev-config_204":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_205":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_206":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_207":{"title":"【胎教级】微信公众号开发配置","content":"至此配置和本地调试打通，可以开始开发正式的业务逻辑了。\r"},"wechat-dev-config_208":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_209":{"title":"【胎教级】微信公众号开发配置","content":"结语\r"},"wechat-dev-config_210":{"title":"【胎教级】微信公众号开发配置","content":"\r"},"wechat-dev-config_211":{"title":"【胎教级】微信公众号开发配置","content":"要做微信开发，繁琐的配置和本地调试总是会耗费很多时间精力，特此写一篇文章记录配置和调试步骤，我称之为“打通微信公众号开发任督二脉”，打通后就是大家熟悉的业务开发了，希望这篇文章对大家有用。"},"integrate-google-oauth2-2":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","display":"\r"},"integrate-google-oauth2-2_0":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_1":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"本文需结合系列文章第一篇《 》食用。\r"},"integrate-google-oauth2-2_2":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_3":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"背景\r"},"integrate-google-oauth2-2_4":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_5":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"最近开始摸索出海产品的方案，于是就想在现有产品上做试验，我现有的服务结构是这样的：\r"},"integrate-google-oauth2-2_6":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_7":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_8":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_9":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"一个公共服务器负责公共模块，不同产品有自己的业务服务器和客户端。搭个公共服务器的主要好处有两点，第一是通用功能可以一次开发，重复利用，（如：第三方登录、内容安全审核）；第二是可以方便共享数据（如：IP黑名单）。\r"},"integrate-google-oauth2-2_10":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_11":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"说回开发出海产品，登录功能是第一要务，我的网站原本已支持微信和github的oauth2.0登录，心想公共服务圈再加个谷歌登录岂不是轻而易举？\r"},"integrate-google-oauth2-2_12":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_13":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"然而问题出现了，我的服务器是腾讯云的国内服务器，根本无法访问谷歌的API。经过一番尝试后，我发现腾讯云国内服务器可以调用腾讯云国外节点的serverless应用。\r"},"integrate-google-oauth2-2_14":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_15":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"那么本次做试验的技术组合就确定了：现有产品的业务服务器 + 腾讯云serverless + 谷歌API。\r"},"integrate-google-oauth2-2_16":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_17":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"根据预研技术的习惯，要自下而上推进，那么就要先研究清楚谷歌API的请求流程。\r"},"integrate-google-oauth2-2_18":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_19":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"谷歌OAuth2.0\r"},"integrate-google-oauth2-2_20":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_21":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"该说不说，谷歌API文档写得真烂，花了一天多，在谷歌API文档、搜索引擎、stackoverflow多方检索下才找齐正确的文档。\r"},"integrate-google-oauth2-2_22":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_23":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"在开始调用API之前，请先查看：\r"},"integrate-google-oauth2-2_24":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_25":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"现在，让我们顺着OAuth2.0的思路一步步扒开谷歌授权登录的真面目。\r"},"integrate-google-oauth2-2_26":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_27":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"第一步，获取授权URL\r"},"integrate-google-oauth2-2_28":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_29":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"根据谷歌 ，可知获取授权URL的请求是这样：\r"},"integrate-google-oauth2-2_30":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_31":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_32":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"请求方法：Get\r"},"integrate-google-oauth2-2_33":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"接口地址: <https://accounts.google.com/o/oauth2/v2/auth"},"integrate-google-oauth2-2_34":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"必填参数：\r"},"integrate-google-oauth2-2_35":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    clientid\r"},"integrate-google-oauth2-2_36":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    redirect_uri：你在后台配置的回调url，建议encodeURIComponent转换\r"},"integrate-google-oauth2-2_37":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    response_type：web授权固定填code\r"},"integrate-google-oauth2-2_38":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    scope：你在后台配置的scope，如果有多个，要用空格隔开（不是逗号），建议encodeURIComponent转换\r"},"integrate-google-oauth2-2_39":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_40":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_41":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"拼接出来的请求地址：\r"},"integrate-google-oauth2-2_42":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_43":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_44":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_45":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"进入授权界面\r"},"integrate-google-oauth2-2_46":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_47":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"在浏览器打开，能看到这个界面（这个就叫同意屏幕）就说明URL正确\r"},"integrate-google-oauth2-2_48":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_49":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_50":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_51":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"如果缺少必填参数，或者参数有误，同意屏幕会显示错误code， 到 查一下是什么原因，然后改正就好了。\r"},"integrate-google-oauth2-2_52":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_53":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"授权登录后，会重定向到你的回调地址，如：\r"},"integrate-google-oauth2-2_54":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_55":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_56":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"<http://localhost:3000/user/login?code=GOOGLECODE&scope=YOUR_SCOPE&authuser=0&prompt=consent"},"integrate-google-oauth2-2_57":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_58":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"code是谷歌生成的，用于换取token\r"},"integrate-google-oauth2-2_59":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"scope是你传的scope，原样返回了\r"},"integrate-google-oauth2-2_60":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"authuser和prompt没有用，忽略\r"},"integrate-google-oauth2-2_61":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_62":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_63":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"换取token\r"},"integrate-google-oauth2-2_64":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_65":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"根据可知，换取token的请求如下：\r"},"integrate-google-oauth2-2_66":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_67":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_68":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"请求方法：POST\r"},"integrate-google-oauth2-2_69":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"请求地址: <https://oauth2.googleapis.com/token"},"integrate-google-oauth2-2_70":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"Content-Type: application/x-www-form-urlencoded\r"},"integrate-google-oauth2-2_71":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_72":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"请求参数：\r"},"integrate-google-oauth2-2_73":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    code：上一步获取的 code\r"},"integrate-google-oauth2-2_74":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    clientid\r"},"integrate-google-oauth2-2_75":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    clientsecret\r"},"integrate-google-oauth2-2_76":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    redirect_uri：你在后台配置的回调地址\r"},"integrate-google-oauth2-2_77":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    grantcode\r"},"integrate-google-oauth2-2_78":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_79":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_80":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"我们在postman试一下，\r"},"integrate-google-oauth2-2_81":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_82":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_83":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_84":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"为什么报错了？根据提示描述分析，应该是code有问题。\r"},"integrate-google-oauth2-2_85":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_86":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"我的code是从重定向回来的地址上复制的，不可能有错误。\r"},"integrate-google-oauth2-2_87":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_88":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"定睛一看，code里有个%2F，这不是斜杠吗？改成斜杠试试\r"},"integrate-google-oauth2-2_89":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_90":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_91":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_92":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"果然成功了，这里实际返回字段和谷歌文档里写的并不一样，这里的是用户信息加密后的密文，所以只要解密id_token就能获得用户信息，执行登录逻辑了。\r"},"integrate-google-oauth2-2_93":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_94":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"node中解密使用\r"},"integrate-google-oauth2-2_95":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_96":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_97":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const googleUserInfo = jwttoken);\r"},"integrate-google-oauth2-2_98":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_99":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_100":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"我截图出来code都不打码，我不怕被人盗用吗？我们在postman再次提交请求看看\r"},"integrate-google-oauth2-2_101":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_102":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_103":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_104":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"失败了，因为code仅一次有效。\r"},"integrate-google-oauth2-2_105":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_106":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"到这里我们已经把谷歌登录流程梳理清楚了，你完全可以根据自己的开发习惯去完成自己的服务端代码。但是，如果你想继续学习serverless应用开发部署，甚至想复制点代码，那请继续阅读。\r"},"integrate-google-oauth2-2_107":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_108":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"创建腾讯serverless应用\r"},"integrate-google-oauth2-2_109":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_110":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"使用云函数或者serverless本身就是追求短平快，所以这里serverless应用的开发也就要求简单高效，而不是完善的应用配置等。\r"},"integrate-google-oauth2-2_111":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_112":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"首先，你得找到腾讯serverless的入口：\r"},"integrate-google-oauth2-2_113":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_114":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"开始创建应用\r"},"integrate-google-oauth2-2_115":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_116":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_117":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_118":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"要短平快，当然选择Koa模板\r"},"integrate-google-oauth2-2_119":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_120":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_121":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_122":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"根据页面提示填一下基本信息，区域一定要选择非内地地区，完成后就会看到你创建的serverless应用的信息\r"},"integrate-google-oauth2-2_123":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_124":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_125":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_126":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"点“开发部署”，最快的做法就是下载项目模板，然后修改，所以我下载了\r"},"integrate-google-oauth2-2_127":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_128":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_129":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_130":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"然后打开下载的项目，准备开发\r"},"integrate-google-oauth2-2_131":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_132":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"加点基础代码\r"},"integrate-google-oauth2-2_133":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_134":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"敲代码也是个千人千面的活，模板当然够用了，但是为了更省事，我们还得加点自己的代码，提升一下开发体验。\r"},"integrate-google-oauth2-2_135":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_136":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"修改代码前，我们先看一下模板的目录结构\r"},"integrate-google-oauth2-2_137":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_138":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_139":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_140":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"自动注册路由\r"},"integrate-google-oauth2-2_141":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_142":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"这个serverless会有多个接口，所以我们写一个自动注册路由。\r"},"integrate-google-oauth2-2_143":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_144":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"在根目录创建routes文件夹，放一个test.js，这个文件测试完后可以删掉\r"},"integrate-google-oauth2-2_145":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_146":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"jsx\r"},"integrate-google-oauth2-2_147":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const router = require('koa-router')();\r"},"integrate-google-oauth2-2_148":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_149":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.prefix('/api');\r"},"integrate-google-oauth2-2_150":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_151":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.post('/test1', async (ctx, next) =\r"},"integrate-google-oauth2-2_152":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  const { } = ctx.request.body;\r"},"integrate-google-oauth2-2_153":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  const result = 'test1';\r"},"integrate-google-oauth2-2_154":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  ctx.body = result;\r"},"integrate-google-oauth2-2_155":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_156":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_157":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.get('/test2', async (ctx, next) =\r"},"integrate-google-oauth2-2_158":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  const { } = ctx.request.query;\r"},"integrate-google-oauth2-2_159":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  const result = 'test2';\r"},"integrate-google-oauth2-2_160":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  ctx.body = result;\r"},"integrate-google-oauth2-2_161":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_162":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_163":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"module.exports = router;\r"},"integrate-google-oauth2-2_164":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_165":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_166":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"app.js写一个自动注册路由的方法\r"},"integrate-google-oauth2-2_167":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_168":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"jsx\r"},"integrate-google-oauth2-2_169":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_170":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"…… 其它代码\r"},"integrate-google-oauth2-2_171":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_172":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"//\r"},"integrate-google-oauth2-2_173":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const registerRouters = path =\r"},"integrate-google-oauth2-2_174":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  let files = fs.readdirSync(path);\r"},"integrate-google-oauth2-2_175":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  files.forEach(file_name =\r"},"integrate-google-oauth2-2_176":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    let filename;\r"},"integrate-google-oauth2-2_177":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    let filedir);\r"},"integrate-google-oauth2-2_178":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    if (file_stat.isDirectory()) {\r"},"integrate-google-oauth2-2_179":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      registerRouters(file_dir);\r"},"integrate-google-oauth2-2_180":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_181":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    if (file_stat.isFile()) {\r"},"integrate-google-oauth2-2_182":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      let router = require(file_dir);\r"},"integrate-google-oauth2-2_183":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      for (let i = 0; i < router.stack.length; i++) {\r"},"integrate-google-oauth2-2_184":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        const path = router.stack[i].path;\r"},"integrate-google-oauth2-2_185":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        app.use(router.routes(), router.allowedMethods());\r"},"integrate-google-oauth2-2_186":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        console.log('已注册 ' + path);\r"},"integrate-google-oauth2-2_187":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      }\r"},"integrate-google-oauth2-2_188":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_189":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  });\r"},"integrate-google-oauth2-2_190":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"};\r"},"integrate-google-oauth2-2_191":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"registerRouters('./routes');\r"},"integrate-google-oauth2-2_192":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_193":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// listen 一定要放在最后\r"},"integrate-google-oauth2-2_194":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"app.listen(9000, () =\r"},"integrate-google-oauth2-2_195":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  console.log();\r"},"integrate-google-oauth2-2_196":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"})\r"},"integrate-google-oauth2-2_197":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_198":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_199":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"启动服务，可以看到确实自动注册了\r"},"integrate-google-oauth2-2_200":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_201":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_202":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_203":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"添加环境变量配置\r"},"integrate-google-oauth2-2_204":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_205":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"先安装依赖：\r"},"integrate-google-oauth2-2_206":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_207":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_208":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"npm i dotenv -S\r"},"integrate-google-oauth2-2_209":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_210":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_211":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"依次创建三个配置文件：\r"},"integrate-google-oauth2-2_212":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_213":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_214":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":".env.development：开发环境配置\r"},"integrate-google-oauth2-2_215":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":".env.production：生产环境配置\r"},"integrate-google-oauth2-2_216":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":".env：公共配置\r"},"integrate-google-oauth2-2_217":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_218":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_219":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"Koa环境变量优先级是先找当前环境的配置文件，如果没有就到.env里继续找，所以开发环境和生产环境一样的配置写在.env文件里统一维护就可以了\r"},"integrate-google-oauth2-2_220":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_221":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"三个文件需要写入的配置如下：\r"},"integrate-google-oauth2-2_222":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_223":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_224":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// .env.development\r"},"integrate-google-oauth2-2_225":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_226":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLEREDIRECT_URL=你的本地回调地址，要和后台配置的对应\r"},"integrate-google-oauth2-2_227":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_228":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_229":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_230":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// .env.production\r"},"integrate-google-oauth2-2_231":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_232":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLEREDIRECT_URL=你的生产回调地址，要和后台配置的对应\r"},"integrate-google-oauth2-2_233":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_234":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_235":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_236":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// .env 公共环境变量\r"},"integrate-google-oauth2-2_237":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_238":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLEID=填写你自己的\r"},"integrate-google-oauth2-2_239":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLE_SECRET=填写你自己的\r"},"integrate-google-oauth2-2_240":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_241":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLEURL=https://oauth2.googleapis.com/token\r"},"integrate-google-oauth2-2_242":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLETYPE=authorization_code\r"},"integrate-google-oauth2-2_243":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLEUSERINFOURL=https://www.googleapis.com/oauth2/v3/userinfo\r"},"integrate-google-oauth2-2_244":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"GOOGLE_SCOPE=https://www.googleapis.com/auth/userinfo.email,<https://www.googleapis.com/auth/userinfo.profile,openid"},"integrate-google-oauth2-2_245":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_246":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_247":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"app.js里添加环境变量判断\r"},"integrate-google-oauth2-2_248":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_249":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"jsx\r"},"integrate-google-oauth2-2_250":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const dotenv = require(\"dotenv\");\r"},"integrate-google-oauth2-2_251":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_252":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const env = process.env.NODE_ENV || 'development';\r"},"integrate-google-oauth2-2_253":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"dotenv.config({ path: path.join(dirname, ) });\r"},"integrate-google-oauth2-2_254":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"dotenv.config({ path: path.join(dirname, ) });\r"},"integrate-google-oauth2-2_255":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_256":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_257":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"package.json里修改启动命令\r"},"integrate-google-oauth2-2_258":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_259":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"json\r"},"integrate-google-oauth2-2_260":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  \"scripts\": {\r"},"integrate-google-oauth2-2_261":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    \"start\": \"NODE_ENV=production node app.js\",\r"},"integrate-google-oauth2-2_262":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    \"dev\": \"NODE_ENV=development app.js\"\r"},"integrate-google-oauth2-2_263":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  },\r"},"integrate-google-oauth2-2_264":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_265":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_266":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"现在执行不同启动命令，把打印出来就可以看到区别了。\r"},"integrate-google-oauth2-2_267":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_268":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"热更新\r"},"integrate-google-oauth2-2_269":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_270":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"没有热更新的服务开发是没有灵魂的，按步骤来：\r"},"integrate-google-oauth2-2_271":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_272":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"安装nodemon\r"},"integrate-google-oauth2-2_273":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_274":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_275":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"npm i nodemon -D\r"},"integrate-google-oauth2-2_276":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_277":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_278":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"修改启动命令：\r"},"integrate-google-oauth2-2_279":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_280":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"json\r"},"integrate-google-oauth2-2_281":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  \"scripts\": {\r"},"integrate-google-oauth2-2_282":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    \"start\": \"NODE_ENV=production node app.js\",\r"},"integrate-google-oauth2-2_283":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    \"dev\": \"NODEmodules/.bin/nodemon app.js\",\r"},"integrate-google-oauth2-2_284":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    \"test\": \"echo \\\\\"Error: no test specified\\\\\" && exit 1\"\r"},"integrate-google-oauth2-2_285":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  },\r"},"integrate-google-oauth2-2_286":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_287":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_288":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"使用 启动，再修改一下test.js的代码（随便改什么，不影响功能就可以），然后保存，我们会看到控制台打印了新的信息了，那就是可以热更新了。\r"},"integrate-google-oauth2-2_289":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_290":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"开始开发\r"},"integrate-google-oauth2-2_291":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_292":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"基础代码都完善了，现在可以无干扰开发业务接口了\r"},"integrate-google-oauth2-2_293":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_294":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"首先，在下创建一个新文件，就叫做吧。\r"},"integrate-google-oauth2-2_295":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_296":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"根据第二节的思路，我们可以确定需要有两个接口：\r"},"integrate-google-oauth2-2_297":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_298":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"1、获取授权页面地址\r"},"integrate-google-oauth2-2_299":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_300":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"2、获取id_token\r"},"integrate-google-oauth2-2_301":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_302":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"先写下框架，锁定开发的焦点\r"},"integrate-google-oauth2-2_303":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_304":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"jsx\r"},"integrate-google-oauth2-2_305":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// googleAuth.js\r"},"integrate-google-oauth2-2_306":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_307":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const router = require('koa-router')();\r"},"integrate-google-oauth2-2_308":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.prefix('/api');\r"},"integrate-google-oauth2-2_309":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_310":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.post('/googleOauth2Url', async (ctx, next) =\r"},"integrate-google-oauth2-2_311":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  try {\r"},"integrate-google-oauth2-2_312":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 调用google API\r"},"integrate-google-oauth2-2_313":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // ……\r"},"integrate-google-oauth2-2_314":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_315":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_316":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: true,\r"},"integrate-google-oauth2-2_317":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 200,\r"},"integrate-google-oauth2-2_318":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: 'OK',\r"},"integrate-google-oauth2-2_319":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      // data: authorizationUrl\r"},"integrate-google-oauth2-2_320":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_321":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  } catch (e) {\r"},"integrate-google-oauth2-2_322":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    console.log(e);\r"},"integrate-google-oauth2-2_323":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_324":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: false,\r"},"integrate-google-oauth2-2_325":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 400,\r"},"integrate-google-oauth2-2_326":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: '请求失败',\r"},"integrate-google-oauth2-2_327":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      data: null\r"},"integrate-google-oauth2-2_328":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_329":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  }\r"},"integrate-google-oauth2-2_330":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_331":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_332":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.post('/googleOAuth2Login', async (ctx, next) =\r"},"integrate-google-oauth2-2_333":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  try {\r"},"integrate-google-oauth2-2_334":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const { code } = ctx.request.body;\r"},"integrate-google-oauth2-2_335":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_336":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 调用google API\r"},"integrate-google-oauth2-2_337":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // ……\r"},"integrate-google-oauth2-2_338":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_339":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_340":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: true,\r"},"integrate-google-oauth2-2_341":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 200,\r"},"integrate-google-oauth2-2_342":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: 'OK',\r"},"integrate-google-oauth2-2_343":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      // data: res\r"},"integrate-google-oauth2-2_344":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_345":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  } catch (e) {\r"},"integrate-google-oauth2-2_346":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    console.log(e);\r"},"integrate-google-oauth2-2_347":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_348":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: false,\r"},"integrate-google-oauth2-2_349":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 400,\r"},"integrate-google-oauth2-2_350":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: '谷歌登录 token 查询失败',\r"},"integrate-google-oauth2-2_351":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      data: null\r"},"integrate-google-oauth2-2_352":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_353":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  }\r"},"integrate-google-oauth2-2_354":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_355":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_356":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_357":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"安装依赖\r"},"integrate-google-oauth2-2_358":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_359":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"bash\r"},"integrate-google-oauth2-2_360":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"npm i googleapis jwt-decode nanoid@3.3.6 -S\r"},"integrate-google-oauth2-2_361":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_362":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_363":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"依赖说明：\r"},"integrate-google-oauth2-2_364":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_365":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":" 是谷歌API的Node依赖\r"},"integrate-google-oauth2-2_366":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_367":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":" 是用来解码token获取用户信息\r"},"integrate-google-oauth2-2_368":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_369":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":" 用来生成临时state，防止攻击\r"},"integrate-google-oauth2-2_370":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_371":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"注意看nanoid的版本，最新版不支持commonJS，这也是一个坑，要去看nonaid更新记录才知道哪个版本以下支持commonJS。\r"},"integrate-google-oauth2-2_372":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_373":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"现在我们施展一下魔法，获得完整代码，让我们通过代码注释来讲解\r"},"integrate-google-oauth2-2_374":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_375":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"jsx\r"},"integrate-google-oauth2-2_376":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const router = require('koa-router')();\r"},"integrate-google-oauth2-2_377":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const { google } = require('googleapis');\r"},"integrate-google-oauth2-2_378":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const { nanoid } = require('nanoid');\r"},"integrate-google-oauth2-2_379":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const jwt_decode = require('jwt-decode');\r"},"integrate-google-oauth2-2_380":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_381":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.prefix('/api');\r"},"integrate-google-oauth2-2_382":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_383":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"// 创建一个  对象，用于定义授权请求中的参数\r"},"integrate-google-oauth2-2_384":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"const oauth2Client = new google.auth.OAuth2(\r"},"integrate-google-oauth2-2_385":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  process.env.GOOGLEID,\r"},"integrate-google-oauth2-2_386":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  process.env.GOOGLE_SECRET,\r"},"integrate-google-oauth2-2_387":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  process.env.GOOGLEREDIRECT_URL,\r"},"integrate-google-oauth2-2_388":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":");\r"},"integrate-google-oauth2-2_389":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_390":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.post('/googleOauth2Url', async (ctx, next) =\r"},"integrate-google-oauth2-2_391":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  try {\r"},"integrate-google-oauth2-2_392":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 如果你有redis，可以把state缓存到redis，设置5分钟的过期时间，用户调用 /api/googleOAuth2Login 时携带state，node端判断是否过期\r"},"integrate-google-oauth2-2_393":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 如果不要，可以删掉state相关代码，不影响功能\r"},"integrate-google-oauth2-2_394":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const state = nanoid();\r"},"integrate-google-oauth2-2_395":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_396":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const authorizationUrl = oauth2Client.generateAuthUrl({\r"},"integrate-google-oauth2-2_397":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      accesstoken\r"},"integrate-google-oauth2-2_398":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      state, // 如果有传state，google也会在重定向到我们网站的时候携带state\r"},"integrate-google-oauth2-2_399":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      scope: process.env.GOOGLE_SCOPE.split(','), // 在Node包中，scope要传字符串\r"},"integrate-google-oauth2-2_400":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      includescopes: true, // 启用增量授权，官方建议使用\r"},"integrate-google-oauth2-2_401":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    });\r"},"integrate-google-oauth2-2_402":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_403":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 返回\r"},"integrate-google-oauth2-2_404":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_405":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: true,\r"},"integrate-google-oauth2-2_406":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 200,\r"},"integrate-google-oauth2-2_407":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: 'OK',\r"},"integrate-google-oauth2-2_408":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      data: authorizationUrl\r"},"integrate-google-oauth2-2_409":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_410":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  } catch (e) {\r"},"integrate-google-oauth2-2_411":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    console.log(e);\r"},"integrate-google-oauth2-2_412":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_413":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: false,\r"},"integrate-google-oauth2-2_414":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 400,\r"},"integrate-google-oauth2-2_415":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: e,\r"},"integrate-google-oauth2-2_416":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      data: null\r"},"integrate-google-oauth2-2_417":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_418":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  }\r"},"integrate-google-oauth2-2_419":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_420":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_421":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"router.post('/googleOAuth2Login', async (ctx, next) =\r"},"integrate-google-oauth2-2_422":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  try {\r"},"integrate-google-oauth2-2_423":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // 我在上一个接口创建了state，但是这个接口却没有用，这是因为我在业务服务中已经用state判断是否拦截了\r"},"integrate-google-oauth2-2_424":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_425":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const { code } = ctx.request.body;\r"},"integrate-google-oauth2-2_426":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_427":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const result = await oauth2Client.getToken(code);\r"},"integrate-google-oauth2-2_428":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    if (!result.tokens) {\r"},"integrate-google-oauth2-2_429":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      console.log(\r"},"integrate-google-oauth2-2_430":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        \r"},"integrate-google-oauth2-2_431":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      );\r"},"integrate-google-oauth2-2_432":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      throw new Error('谷歌登录 token 查询失败');\r"},"integrate-google-oauth2-2_433":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_434":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const googleUserInfo = jwttoken);\r"},"integrate-google-oauth2-2_435":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_436":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    / 解码结果如下，常用字段标出来了：\r"},"integrate-google-oauth2-2_437":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     * {\r"},"integrate-google-oauth2-2_438":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"iss\":\"<https://accounts.google.com>\",\r"},"integrate-google-oauth2-2_439":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"azp\":\"xxx\",\r"},"integrate-google-oauth2-2_440":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"aud\":\"xxx\",\r"},"integrate-google-oauth2-2_441":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"sub\":\"谷歌账号ID\",\r"},"integrate-google-oauth2-2_442":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"email\":\"邮箱\",\r"},"integrate-google-oauth2-2_443":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     verified\":true,\r"},"integrate-google-oauth2-2_444":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     hash\":\"xxx\",\r"},"integrate-google-oauth2-2_445":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"name\":\"用户名\",\r"},"integrate-google-oauth2-2_446":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"picture\":\"头像\",\r"},"integrate-google-oauth2-2_447":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     name\":\"名\",\r"},"integrate-google-oauth2-2_448":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     name\":\"姓\",\r"},"integrate-google-oauth2-2_449":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"locale\":\"zh-CN\",\r"},"integrate-google-oauth2-2_450":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"iat\":1688626819,\r"},"integrate-google-oauth2-2_451":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     *    \"exp\":1688630419\r"},"integrate-google-oauth2-2_452":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     * }\r"},"integrate-google-oauth2-2_453":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"     */\r"},"integrate-google-oauth2-2_454":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_455":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    // access_token，有需要则取出来\r"},"integrate-google-oauth2-2_456":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    const accesstoken;\r"},"integrate-google-oauth2-2_457":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_458":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    if (access_token) {\r"},"integrate-google-oauth2-2_459":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      // 返回信息\r"},"integrate-google-oauth2-2_460":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      const res = {\r"},"integrate-google-oauth2-2_461":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        success: true,\r"},"integrate-google-oauth2-2_462":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        message: 'OK',\r"},"integrate-google-oauth2-2_463":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        code: 200,\r"},"integrate-google-oauth2-2_464":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        data: {\r"},"integrate-google-oauth2-2_465":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"          accesstoken,\r"},"integrate-google-oauth2-2_466":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"          googleId: googleIdTokenDecoded.sub,\r"},"integrate-google-oauth2-2_467":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"          username: googleIdTokenDecoded.name,\r"},"integrate-google-oauth2-2_468":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"          avatar: googleIdTokenDecoded.picture,\r"},"integrate-google-oauth2-2_469":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"          email: googleIdTokenDecoded.email,\r"},"integrate-google-oauth2-2_470":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"        },\r"},"integrate-google-oauth2-2_471":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      };\r"},"integrate-google-oauth2-2_472":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      ctx.body = res;\r"},"integrate-google-oauth2-2_473":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    } else {\r"},"integrate-google-oauth2-2_474":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      throw new Error('谷歌授权登录获取token失败');\r"},"integrate-google-oauth2-2_475":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_476":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  } catch (e) {\r"},"integrate-google-oauth2-2_477":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    console.log(e);\r"},"integrate-google-oauth2-2_478":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    ctx.body = {\r"},"integrate-google-oauth2-2_479":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      success: false,\r"},"integrate-google-oauth2-2_480":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      code: 400,\r"},"integrate-google-oauth2-2_481":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      message: '谷歌登录 token 查询失败',\r"},"integrate-google-oauth2-2_482":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"      data: null\r"},"integrate-google-oauth2-2_483":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"    }\r"},"integrate-google-oauth2-2_484":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"  }\r"},"integrate-google-oauth2-2_485":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"});\r"},"integrate-google-oauth2-2_486":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_487":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"module.exports = router;\r"},"integrate-google-oauth2-2_488":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_489":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_490":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"这样本文要开发的代码都完成了，当你有一个这样的公共服务器时，业务服务器还需要做哪些工作？\r"},"integrate-google-oauth2-2_491":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_492":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"对于接口，业务服务器只要做个转发就可以。\r"},"integrate-google-oauth2-2_493":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_494":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"对于接口，业务服务器要做state有效期判断、用户数据入库、用户token生成和缓存等等业务系统自己的逻辑。\r"},"integrate-google-oauth2-2_495":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_496":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"将来，如果我还有其它业务系统要接入公共服务，只需要优化一下环境配置就可以了，这是真正的一次开发，永久使用。\r"},"integrate-google-oauth2-2_497":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_498":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"如果你觉得这些代码还有点用，可以到Github自取（有star就更好了）：\r"},"integrate-google-oauth2-2_499":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"如果你想尝试本文实现后的效果，可以到  试试\r"},"integrate-google-oauth2-2_500":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_501":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"上传代码，更新环境变量，部署验证\r"},"integrate-google-oauth2-2_502":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_503":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"再次打开serverless后台，部署代码\r"},"integrate-google-oauth2-2_504":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_505":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_506":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_507":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"超时时间我选择了30秒，是个比较长的时间限制，主要是担心访问国外服务比较慢。\r"},"integrate-google-oauth2-2_508":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_509":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"部署完成后，就能看到一个URL，这就是你生产环境的服务地址\r"},"integrate-google-oauth2-2_510":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_511":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_512":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_513":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"结语\r"},"integrate-google-oauth2-2_514":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"\r"},"integrate-google-oauth2-2_515":{"title":"【冷门教程】接入谷歌OAuth2.0登录的分析和代码实践","content":"以上就是实现谷歌OAuth2.0的全部内容了，写这篇文章的目的是抹平谷歌OAuth2.0开发的信息差，跟着以上步骤思路实现，你只需要半个小时就能完成自己的谷歌授权登录功能。"},"integrate-google-oauth2-1":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","display":"\r"},"integrate-google-oauth2-1_0":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_1":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"背景\r"},"integrate-google-oauth2-1_2":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_3":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"要想调用谷歌APIs，必须经过谷歌OAuth2.0来验证和授权，但是因为国内网络大环境的影响，基于谷歌API开发产品的文章比较少，最近正好需要用到谷歌授权登录，于是记录分享一下使用谷歌OAuth2.0和APIs的前置操作。\r"},"integrate-google-oauth2-1_4":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_5":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"步骤\r"},"integrate-google-oauth2-1_6":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_7":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"1. 首先，我们得注册成为谷歌开发者：\r"},"integrate-google-oauth2-1_8":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"2. 登录后，就可以开始新建一个应用了\r"},"integrate-google-oauth2-1_9":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_10":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_11":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_12":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"3. 填写项目信息\r"},"integrate-google-oauth2-1_13":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_14":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_15":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_16":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"4. 配置同意屏幕，同意屏幕就是请求用户授权的页面\r"},"integrate-google-oauth2-1_17":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_18":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_19":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_20":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"5. 选择“外部”\r"},"integrate-google-oauth2-1_21":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_22":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_23":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_24":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"6. 按提示逐步配置同意屏幕的信息\r"},"integrate-google-oauth2-1_25":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_26":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_27":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_28":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_29":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_30":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_31":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_32":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"7. 创建凭据 - 客户端ID，这里的信息都是我们开发过程中会用到的\r"},"integrate-google-oauth2-1_33":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_34":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_35":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_36":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"8. 填写客户端ID配置信息。\r"},"integrate-google-oauth2-1_37":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_38":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"很多人在这一步配置错误，导致开发环境一直无法调试！注意看JavaScript来源的配置，我们需要同时配置localhost和localhost:port，port是我们开发环境的端口，这样配置了才能在开发环境调试API。\r"},"integrate-google-oauth2-1_39":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_40":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"这个要点官方文档都没写清楚，github和stackoverflow上很多人问，算是一个很大的槽点。\r"},"integrate-google-oauth2-1_41":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_42":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_43":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_44":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"9. 创建了凭据后就可以看到客户端ID和密钥\r"},"integrate-google-oauth2-1_45":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_46":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_47":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_48":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"结语\r"},"integrate-google-oauth2-1_49":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_50":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"这篇只是开胃菜，因为网络大环境和谷歌文档的缺漏，网上能找到基于谷歌APIs开发的文章比较少，所以我想把自己摸索的经验总结分享一下，下一篇将分享谷歌OAuth2.0的开发流程。\r"},"integrate-google-oauth2-1_51":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"\r"},"integrate-google-oauth2-1_52":{"title":"【冷门教程】谷歌OAuth2.0开发的正确配置步骤","content":"第二篇发布了，欢迎阅读："}}